name: 🌍 i18n Checks

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10.17.1'

jobs:
  i18n-checks:
    runs-on: ubuntu-latest
    name: 🌍 i18n Translation Checks

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for better caching

      - name: 🏗️ Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '${{ env.PNPM_VERSION }}'

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: 'pnpm'

      - name: 💾 Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
            packages/*/node_modules
          key: "${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}"
          restore-keys: |
            "${{ runner.os }}-pnpm-"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build i18n package
        run: |
          cd packages/core/i18n || exit
          pnpm build

      - name: 🏗️ Build testing package
        run: |
          cd packages/core/testing || exit
          pnpm build

      - name: ✅ Validate i18n setup
        run: |
          cd packages/core/testing || exit
          pnpm i18n:validate

      - name: 🔍 Run ESLint with i18n rules
        run: |
          cd packages/core/testing || exit
          pnpm i18n:eslint
        continue-on-error: true

      - name: 🧪 Run comprehensive i18n tests
        run: |
          cd packages/core/testing || exit
          pnpm i18n:test --output ../../i18n-results.json --report ../../i18n-report.md
        continue-on-error: true

      - name: 📄 Create fallback i18n results
        if: failure()
        run: |
          echo "Creating fallback i18n results file..."
          cat > i18n-results.json << 'EOF'
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "overallSuccess": false,
            "summary": {
              "totalPackages": 0,
              "successfulPackages": 0,
              "failedPackages": 0,
              "totalErrors": 1,
              "totalWarnings": 0
            },
            "duration": 0,
            "packages": [],
            "error": "i18n tests failed to run"
          }
          EOF

          cat > i18n-report.md << 'EOF'
          # i18n Test Report

          ## Status: ❌ FAILED

          The i18n tests failed to run. Please check the workflow logs for details.
          EOF

      - name: 📤 Upload i18n results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: i18n-results
          path: |
            i18n-results.json
            i18n-report.md
          retention-days: 30

      - name: 💬 Comment PR with i18n results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            try {
              const results = JSON.parse(fs.readFileSync('i18n-results.json', 'utf8'));
              const report = fs.readFileSync('i18n-report.md', 'utf8');

              const comment = `## 🌍 i18n Check Results

              ### Summary
              - **Total Packages**: ${results.summary.totalPackages}
              - **Successful**: ${results.summary.successfulPackages}
              - **Failed**: ${results.summary.failedPackages}
              - **Hardcoded Strings**: ${results.summary.totalHardcodedStrings}
              - **Missing Translations**: ${results.summary.totalMissingTranslations}
              - **RTL Issues**: ${results.summary.totalRTLIssues}
              - **Duration**: ${results.duration}ms

              ### Status
              ${results.overallSuccess ? '✅ All i18n checks passed!' : '❌ Some i18n checks failed.'}

              <details>
              <summary>📊 Detailed Report</summary>

              \`\`\`markdown
              ${report}
              \`\`\`

              </details>
              `;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.error('Failed to create i18n comment:', error);
            }

      - name: 🚪 Fail on i18n issues
        run: |
          if [[ -f "i18n-results.json" ]]; then
            SUCCESS=$(jq -r '.overallSuccess' i18n-results.json)
            if [[ "${SUCCESS}" != "true" ]]; then
              echo "❌ i18n checks failed"
              exit 1
            fi
          else
            echo "❌ i18n results file not found"
            exit 1
          fi
