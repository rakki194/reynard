#!/bin/bash
#
# Git Pre-commit Hook for Reynard Projects
# Validates CSS variables before allowing commits
#
# This hook should be installed in each Reynard project's .git/hooks/ directory
# or linked from a shared location.
#

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
# Handle both direct execution and symlink execution
if [ -L "${BASH_SOURCE[0]}" ]; then
    # If this is a symlink, get the real path
    SCRIPT_DIR="$(cd "$(dirname "$(readlink "${BASH_SOURCE[0]}")")" && pwd)"
else
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
fi
VALIDATOR_SCRIPT="$SCRIPT_DIR/validate-css-variables.js"
PROJECT_ROOT="$(git rev-parse --show-toplevel)"

echo -e "${BLUE}üé® Reynard CSS Variable Pre-commit Hook${NC}"
echo "=================================="

# Check if validator script exists
if [ ! -f "$VALIDATOR_SCRIPT" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  CSS validator script not found at: $VALIDATOR_SCRIPT${NC}"
    echo -e "${YELLOW}   Skipping CSS validation...${NC}"
    exit 0
fi

# Check if we're in a Reynard project
if [ ! -f "$PROJECT_ROOT/package.json" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Not in a Reynard project, skipping CSS validation${NC}"
    exit 0
fi

# Check if package.json contains Reynard dependencies
if ! grep -q "reynard" "$PROJECT_ROOT/package.json" 2>/dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Not a Reynard project, skipping CSS validation${NC}"
    exit 0
fi

# Get list of staged CSS files
STAGED_CSS_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.css$' || true)

if [ -z "$STAGED_CSS_FILES" ]; then
    echo -e "${GREEN}‚úÖ No CSS files staged for commit${NC}"
    exit 0
fi

echo -e "${BLUE}üìÅ Staged CSS files:${NC}"
echo "$STAGED_CSS_FILES" | sed 's/^/  - /'
echo ""

# Run CSS validation
echo -e "${BLUE}üîç Running CSS variable validation...${NC}"

cd "$PROJECT_ROOT"

# Run the validator with strict mode for pre-commit
if node "$VALIDATOR_SCRIPT" --strict; then
    echo -e "${GREEN}‚úÖ CSS validation passed${NC}"
    exit 0
else
    VALIDATION_EXIT_CODE=$?
    
    if [ $VALIDATION_EXIT_CODE -eq 1 ]; then
        echo -e "${RED}‚ùå CSS validation failed with errors${NC}"
        echo -e "${RED}   Please fix the issues above before committing${NC}"
        echo ""
        echo -e "${YELLOW}üí° Tips:${NC}"
        echo -e "${YELLOW}   - Check the css-validation-report.md file for details${NC}"
        echo -e "${YELLOW}   - Run 'node scripts/validate-css-variables.js' to see full report${NC}"
        echo -e "${YELLOW}   - Use 'git commit --no-verify' to skip this check (not recommended)${NC}"
        exit 1
    elif [ $VALIDATION_EXIT_CODE -eq 2 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  CSS validation passed with warnings${NC}"
        echo -e "${YELLOW}   Consider fixing the warnings above${NC}"
        echo ""
        echo -e "${BLUE}üí° To see full details, run:${NC}"
        echo -e "${BLUE}   node scripts/validate-css-variables.js${NC}"
        echo ""
        echo -e "${YELLOW}   Continuing with commit...${NC}"
        exit 0
    else
        echo -e "${RED}‚ùå CSS validation script failed unexpectedly${NC}"
        exit 1
    fi
fi
