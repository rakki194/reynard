# Enhanced Development Makefile for Reynard Services
# =================================================

.PHONY: help setup install test lint format clean dev-install services-install

# Default target
help:
	@echo "🦊 Reynard Development Commands"
	@echo "=============================="
	@echo ""
	@echo "Setup & Installation:"
	@echo "  setup          - Complete development environment setup"
	@echo "  install        - Install all services in development mode"
	@echo "  services-install - Install only the services"
	@echo ""
	@echo "Development:"
	@echo "  dev-install    - Install development dependencies"
	@echo "  test           - Run all tests"
	@echo "  lint           - Run linting on all services"
	@echo "  format         - Format all code"
	@echo ""
	@echo "Services:"
	@echo "  mcp-server     - Run the MCP server"
	@echo "  ecs-world      - Run the ECS world service"
	@echo ""
	@echo "Cleanup:"
	@echo "  clean          - Clean build artifacts and caches"

# Complete setup
setup:
	@echo "🦊 Setting up Reynard development environment..."
	@./setup-dev.sh

# Install all services in development mode
install: services-install dev-install
	@echo "✅ All services installed in development mode"

# Install services only
services-install:
	@echo "📦 Installing services..."
	@cd services/agent-naming && pip install -e .
	@cd services/ecs-world && pip install -e .
	@cd services/gatekeeper && pip install -e .
	@cd services/mcp-server && pip install -e .
	@echo "✅ Services installed"

# Install development dependencies
dev-install:
	@echo "🔧 Installing development dependencies..."
	@pip install -e ".[dev]"
	@echo "✅ Development dependencies installed"

# Run tests
test:
	@echo "🧪 Running tests..."
	@python -m pytest services/*/tests/ -v
	@echo "✅ Tests completed"

# Run linting
lint:
	@echo "🔍 Running linting..."
	@python -m ruff check services/
	@python -m mypy services/
	@echo "✅ Linting completed"

# Format code
format:
	@echo "🎨 Formatting code..."
	@python -m black services/
	@python -m isort services/
	@echo "✅ Code formatted"

# Run MCP server
mcp-server:
	@echo "🚀 Starting MCP server..."
	@cd services/mcp-server && python main.py

# Run ECS world service
ecs-world:
	@echo "🌍 Starting ECS world service..."
	@cd services/ecs-world && python -m reynard_ecs_world

# Clean build artifacts
clean:
	@echo "🧹 Cleaning build artifacts..."
	@find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
	@find . -type f -name "*.pyc" -delete 2>/dev/null || true
	@find . -type d -name "*.egg-info" -exec rm -rf {} + 2>/dev/null || true
	@find . -type d -name ".pytest_cache" -exec rm -rf {} + 2>/dev/null || true
	@find . -type d -name ".mypy_cache" -exec rm -rf {} + 2>/dev/null || true
	@echo "✅ Cleanup completed"

# Quick development cycle
dev: format lint test
	@echo "🔄 Development cycle completed"
