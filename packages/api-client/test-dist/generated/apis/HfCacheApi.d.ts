/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { HFCacheInfoResponse, ModelCacheInfoResponse } from "../models/index";
export interface CheckModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGetRequest {
  repoId: string;
}
export interface CheckModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGet0Request {
  repoId: string;
}
export interface GetModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGetRequest {
  repoId: string;
  revision?: string;
}
export interface GetModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGet0Request {
  repoId: string;
  revision?: string;
}
/**
 * HfCacheApi - interface
 *
 * @export
 * @interface HfCacheApiInterface
 */
export interface HfCacheApiInterface {
  /**
   * Check if a model is cached.
   * @summary Check Model Cached
   * @param {string} repoId
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  checkModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGetRaw(
    requestParameters: CheckModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Check if a model is cached.
   * Check Model Cached
   */
  checkModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGet(
    requestParameters: CheckModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Check if a model is cached.
   * @summary Check Model Cached
   * @param {string} repoId
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  checkModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGet_1Raw(
    requestParameters: CheckModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGet0Request,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Check if a model is cached.
   * Check Model Cached
   */
  checkModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGet_1(
    requestParameters: CheckModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGet0Request,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Clear the HuggingFace cache.
   * @summary Clear Cache Endpoint
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  clearCacheEndpointApiHfCacheApiHfCacheClearDeleteRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Clear the HuggingFace cache.
   * Clear Cache Endpoint
   */
  clearCacheEndpointApiHfCacheApiHfCacheClearDelete(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Clear the HuggingFace cache.
   * @summary Clear Cache Endpoint
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  clearCacheEndpointApiHfCacheApiHfCacheClearDelete_2Raw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Clear the HuggingFace cache.
   * Clear Cache Endpoint
   */
  clearCacheEndpointApiHfCacheApiHfCacheClearDelete_2(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Ensure the HuggingFace cache directory exists.
   * @summary Ensure Cache Directory
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  ensureCacheDirectoryApiHfCacheApiHfCacheEnsureCacheDirPostRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Ensure the HuggingFace cache directory exists.
   * Ensure Cache Directory
   */
  ensureCacheDirectoryApiHfCacheApiHfCacheEnsureCacheDirPost(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Ensure the HuggingFace cache directory exists.
   * @summary Ensure Cache Directory
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  ensureCacheDirectoryApiHfCacheApiHfCacheEnsureCacheDirPost_3Raw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Ensure the HuggingFace cache directory exists.
   * Ensure Cache Directory
   */
  ensureCacheDirectoryApiHfCacheApiHfCacheEnsureCacheDirPost_3(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Get the HuggingFace cache directory path.
   * @summary Get Cache Directory
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  getCacheDirectoryApiHfCacheApiHfCacheCacheDirGetRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Get the HuggingFace cache directory path.
   * Get Cache Directory
   */
  getCacheDirectoryApiHfCacheApiHfCacheCacheDirGet(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Get the HuggingFace cache directory path.
   * @summary Get Cache Directory
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  getCacheDirectoryApiHfCacheApiHfCacheCacheDirGet_4Raw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Get the HuggingFace cache directory path.
   * Get Cache Directory
   */
  getCacheDirectoryApiHfCacheApiHfCacheCacheDirGet_4(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Get HuggingFace cache information.
   * @summary Get Cache Info
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  getCacheInfoApiHfCacheApiHfCacheInfoGetRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<HFCacheInfoResponse>>;
  /**
   * Get HuggingFace cache information.
   * Get Cache Info
   */
  getCacheInfoApiHfCacheApiHfCacheInfoGet(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<HFCacheInfoResponse>;
  /**
   * Get HuggingFace cache information.
   * @summary Get Cache Info
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  getCacheInfoApiHfCacheApiHfCacheInfoGet_5Raw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<HFCacheInfoResponse>>;
  /**
   * Get HuggingFace cache information.
   * Get Cache Info
   */
  getCacheInfoApiHfCacheApiHfCacheInfoGet_5(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<HFCacheInfoResponse>;
  /**
   * Get the total size of the HuggingFace cache.
   * @summary Get Cache Size Endpoint
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  getCacheSizeEndpointApiHfCacheApiHfCacheSizeGetRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Get the total size of the HuggingFace cache.
   * Get Cache Size Endpoint
   */
  getCacheSizeEndpointApiHfCacheApiHfCacheSizeGet(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Get the total size of the HuggingFace cache.
   * @summary Get Cache Size Endpoint
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  getCacheSizeEndpointApiHfCacheApiHfCacheSizeGet_6Raw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Get the total size of the HuggingFace cache.
   * Get Cache Size Endpoint
   */
  getCacheSizeEndpointApiHfCacheApiHfCacheSizeGet_6(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Get the HuggingFace Hub directory path.
   * @summary Get Hub Directory
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  getHubDirectoryApiHfCacheApiHfCacheHubDirGetRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Get the HuggingFace Hub directory path.
   * Get Hub Directory
   */
  getHubDirectoryApiHfCacheApiHfCacheHubDirGet(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Get the HuggingFace Hub directory path.
   * @summary Get Hub Directory
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  getHubDirectoryApiHfCacheApiHfCacheHubDirGet_7Raw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Get the HuggingFace Hub directory path.
   * Get Hub Directory
   */
  getHubDirectoryApiHfCacheApiHfCacheHubDirGet_7(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Get cache information for a specific model.
   * @summary Get Model Cache Info
   * @param {string} repoId
   * @param {string} [revision]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  getModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGetRaw(
    requestParameters: GetModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<ModelCacheInfoResponse>>;
  /**
   * Get cache information for a specific model.
   * Get Model Cache Info
   */
  getModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGet(
    requestParameters: GetModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<ModelCacheInfoResponse>;
  /**
   * Get cache information for a specific model.
   * @summary Get Model Cache Info
   * @param {string} repoId
   * @param {string} [revision]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof HfCacheApiInterface
   */
  getModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGet_8Raw(
    requestParameters: GetModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGet0Request,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<ModelCacheInfoResponse>>;
  /**
   * Get cache information for a specific model.
   * Get Model Cache Info
   */
  getModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGet_8(
    requestParameters: GetModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGet0Request,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<ModelCacheInfoResponse>;
}
/**
 *
 */
export declare class HfCacheApi extends runtime.BaseAPI implements HfCacheApiInterface {
  /**
   * Check if a model is cached.
   * Check Model Cached
   */
  checkModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGetRaw(
    requestParameters: CheckModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Check if a model is cached.
   * Check Model Cached
   */
  checkModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGet(
    requestParameters: CheckModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Check if a model is cached.
   * Check Model Cached
   */
  checkModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGet_1Raw(
    requestParameters: CheckModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGet0Request,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Check if a model is cached.
   * Check Model Cached
   */
  checkModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGet_1(
    requestParameters: CheckModelCachedApiHfCacheApiHfCacheModelRepoIdCachedGet0Request,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Clear the HuggingFace cache.
   * Clear Cache Endpoint
   */
  clearCacheEndpointApiHfCacheApiHfCacheClearDeleteRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Clear the HuggingFace cache.
   * Clear Cache Endpoint
   */
  clearCacheEndpointApiHfCacheApiHfCacheClearDelete(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Clear the HuggingFace cache.
   * Clear Cache Endpoint
   */
  clearCacheEndpointApiHfCacheApiHfCacheClearDelete_2Raw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Clear the HuggingFace cache.
   * Clear Cache Endpoint
   */
  clearCacheEndpointApiHfCacheApiHfCacheClearDelete_2(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Ensure the HuggingFace cache directory exists.
   * Ensure Cache Directory
   */
  ensureCacheDirectoryApiHfCacheApiHfCacheEnsureCacheDirPostRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Ensure the HuggingFace cache directory exists.
   * Ensure Cache Directory
   */
  ensureCacheDirectoryApiHfCacheApiHfCacheEnsureCacheDirPost(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Ensure the HuggingFace cache directory exists.
   * Ensure Cache Directory
   */
  ensureCacheDirectoryApiHfCacheApiHfCacheEnsureCacheDirPost_3Raw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Ensure the HuggingFace cache directory exists.
   * Ensure Cache Directory
   */
  ensureCacheDirectoryApiHfCacheApiHfCacheEnsureCacheDirPost_3(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Get the HuggingFace cache directory path.
   * Get Cache Directory
   */
  getCacheDirectoryApiHfCacheApiHfCacheCacheDirGetRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Get the HuggingFace cache directory path.
   * Get Cache Directory
   */
  getCacheDirectoryApiHfCacheApiHfCacheCacheDirGet(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Get the HuggingFace cache directory path.
   * Get Cache Directory
   */
  getCacheDirectoryApiHfCacheApiHfCacheCacheDirGet_4Raw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Get the HuggingFace cache directory path.
   * Get Cache Directory
   */
  getCacheDirectoryApiHfCacheApiHfCacheCacheDirGet_4(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Get HuggingFace cache information.
   * Get Cache Info
   */
  getCacheInfoApiHfCacheApiHfCacheInfoGetRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<HFCacheInfoResponse>>;
  /**
   * Get HuggingFace cache information.
   * Get Cache Info
   */
  getCacheInfoApiHfCacheApiHfCacheInfoGet(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<HFCacheInfoResponse>;
  /**
   * Get HuggingFace cache information.
   * Get Cache Info
   */
  getCacheInfoApiHfCacheApiHfCacheInfoGet_5Raw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<HFCacheInfoResponse>>;
  /**
   * Get HuggingFace cache information.
   * Get Cache Info
   */
  getCacheInfoApiHfCacheApiHfCacheInfoGet_5(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<HFCacheInfoResponse>;
  /**
   * Get the total size of the HuggingFace cache.
   * Get Cache Size Endpoint
   */
  getCacheSizeEndpointApiHfCacheApiHfCacheSizeGetRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Get the total size of the HuggingFace cache.
   * Get Cache Size Endpoint
   */
  getCacheSizeEndpointApiHfCacheApiHfCacheSizeGet(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Get the total size of the HuggingFace cache.
   * Get Cache Size Endpoint
   */
  getCacheSizeEndpointApiHfCacheApiHfCacheSizeGet_6Raw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Get the total size of the HuggingFace cache.
   * Get Cache Size Endpoint
   */
  getCacheSizeEndpointApiHfCacheApiHfCacheSizeGet_6(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Get the HuggingFace Hub directory path.
   * Get Hub Directory
   */
  getHubDirectoryApiHfCacheApiHfCacheHubDirGetRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Get the HuggingFace Hub directory path.
   * Get Hub Directory
   */
  getHubDirectoryApiHfCacheApiHfCacheHubDirGet(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Get the HuggingFace Hub directory path.
   * Get Hub Directory
   */
  getHubDirectoryApiHfCacheApiHfCacheHubDirGet_7Raw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<any>>;
  /**
   * Get the HuggingFace Hub directory path.
   * Get Hub Directory
   */
  getHubDirectoryApiHfCacheApiHfCacheHubDirGet_7(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<any>;
  /**
   * Get cache information for a specific model.
   * Get Model Cache Info
   */
  getModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGetRaw(
    requestParameters: GetModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<ModelCacheInfoResponse>>;
  /**
   * Get cache information for a specific model.
   * Get Model Cache Info
   */
  getModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGet(
    requestParameters: GetModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<ModelCacheInfoResponse>;
  /**
   * Get cache information for a specific model.
   * Get Model Cache Info
   */
  getModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGet_8Raw(
    requestParameters: GetModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGet0Request,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<ModelCacheInfoResponse>>;
  /**
   * Get cache information for a specific model.
   * Get Model Cache Info
   */
  getModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGet_8(
    requestParameters: GetModelCacheInfoApiHfCacheApiHfCacheModelRepoIdGet0Request,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<ModelCacheInfoResponse>;
}
