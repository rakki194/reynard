"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __extends =
  (this && this.__extends) ||
  (function () {
    var extendStatics = function (d, b) {
      extendStatics =
        Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array &&
          function (d, b) {
            d.__proto__ = b;
          }) ||
        function (d, b) {
          for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
      return extendStatics(d, b);
    };
    return function (d, b) {
      if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
      extendStatics(d, b);
      function __() {
        this.constructor = d;
      }
      d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
    };
  })();
var __awaiter =
  (this && this.__awaiter) ||
  function (thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P
        ? value
        : new P(function (resolve) {
            resolve(value);
          });
    }
    return new (P || (P = Promise))(function (resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
var __generator =
  (this && this.__generator) ||
  function (thisArg, body) {
    var _ = {
        label: 0,
        sent: function () {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: [],
      },
      f,
      y,
      t,
      g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return (
      (g.next = verb(0)),
      (g["throw"] = verb(1)),
      (g["return"] = verb(2)),
      typeof Symbol === "function" &&
        (g[Symbol.iterator] = function () {
          return this;
        }),
      g
    );
    function verb(n) {
      return function (v) {
        return step([n, v]);
      };
    }
    function step(op) {
      if (f) throw new TypeError("Generator is already executing.");
      while ((g && ((g = 0), op[0] && (_ = 0)), _))
        try {
          if (
            ((f = 1),
            y &&
              (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) &&
              !(t = t.call(y, op[1])).done)
          )
            return t;
          if (((y = 0), t)) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!((t = _.trys), (t = t.length > 0 && t[t.length - 1])) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
      if (op[0] & 5) throw op[1];
      return { value: op[0] ? op[1] : void 0, done: true };
    }
  };
Object.defineProperty(exports, "__esModule", { value: true });
exports.LazyLoadingApi = void 0;
var runtime = require("../runtime");
var index_1 = require("../models/index");
/**
 *
 */
var LazyLoadingApi = /** @class */ (function (_super) {
  __extends(LazyLoadingApi, _super);
  function LazyLoadingApi() {
    return (_super !== null && _super.apply(this, arguments)) || this;
  }
  /**
   * Clear the export registry.
   * Clear Registry Endpoint
   */
  LazyLoadingApi.prototype.clearRegistryEndpointApiLazyLoadingRegistryDeleteRaw = function (initOverrides) {
    return __awaiter(this, void 0, void 0, function () {
      var queryParameters, headerParameters, urlPath, response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            queryParameters = {};
            headerParameters = {};
            urlPath = "/api/lazy-loading/registry";
            return [
              4 /*yield*/,
              this.request(
                {
                  path: urlPath,
                  method: "DELETE",
                  headers: headerParameters,
                  query: queryParameters,
                },
                initOverrides
              ),
            ];
          case 1:
            response = _a.sent();
            if (this.isJsonMime(response.headers.get("content-type"))) {
              return [2 /*return*/, new runtime.JSONApiResponse(response)];
            } else {
              return [2 /*return*/, new runtime.TextApiResponse(response)];
            }
            return [2 /*return*/];
        }
      });
    });
  };
  /**
   * Clear the export registry.
   * Clear Registry Endpoint
   */
  LazyLoadingApi.prototype.clearRegistryEndpointApiLazyLoadingRegistryDelete = function (initOverrides) {
    return __awaiter(this, void 0, void 0, function () {
      var response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4 /*yield*/, this.clearRegistryEndpointApiLazyLoadingRegistryDeleteRaw(initOverrides)];
          case 1:
            response = _a.sent();
            return [4 /*yield*/, response.value()];
          case 2:
            return [2 /*return*/, _a.sent()];
        }
      });
    });
  };
  /**
   * Create a new lazy export for a package.
   * Create Lazy Export Endpoint
   */
  LazyLoadingApi.prototype.createLazyExportEndpointApiLazyLoadingExportsPostRaw = function (
    requestParameters,
    initOverrides
  ) {
    return __awaiter(this, void 0, void 0, function () {
      var queryParameters, headerParameters, urlPath, response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (requestParameters["lazyExportRequest"] == null) {
              throw new runtime.RequiredError(
                "lazyExportRequest",
                'Required parameter "lazyExportRequest" was null or undefined when calling createLazyExportEndpointApiLazyLoadingExportsPost().'
              );
            }
            queryParameters = {};
            headerParameters = {};
            headerParameters["Content-Type"] = "application/json";
            urlPath = "/api/lazy-loading/exports";
            return [
              4 /*yield*/,
              this.request(
                {
                  path: urlPath,
                  method: "POST",
                  headers: headerParameters,
                  query: queryParameters,
                  body: (0, index_1.LazyExportRequestToJSON)(requestParameters["lazyExportRequest"]),
                },
                initOverrides
              ),
            ];
          case 1:
            response = _a.sent();
            return [
              2 /*return*/,
              new runtime.JSONApiResponse(response, function (jsonValue) {
                return (0, index_1.LazyExportResponseFromJSON)(jsonValue);
              }),
            ];
        }
      });
    });
  };
  /**
   * Create a new lazy export for a package.
   * Create Lazy Export Endpoint
   */
  LazyLoadingApi.prototype.createLazyExportEndpointApiLazyLoadingExportsPost = function (
    requestParameters,
    initOverrides
  ) {
    return __awaiter(this, void 0, void 0, function () {
      var response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [
              4 /*yield*/,
              this.createLazyExportEndpointApiLazyLoadingExportsPostRaw(requestParameters, initOverrides),
            ];
          case 1:
            response = _a.sent();
            return [4 /*yield*/, response.value()];
          case 2:
            return [2 /*return*/, _a.sent()];
        }
      });
    });
  };
  /**
   * Force cleanup of packages or all packages.
   * Force Cleanup Endpoint
   */
  LazyLoadingApi.prototype.forceCleanupEndpointApiLazyLoadingCleanupPostRaw = function (
    requestParameters,
    initOverrides
  ) {
    return __awaiter(this, void 0, void 0, function () {
      var queryParameters, headerParameters, urlPath, response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            queryParameters = {};
            if (requestParameters["packageName"] != null) {
              queryParameters["package_name"] = requestParameters["packageName"];
            }
            headerParameters = {};
            urlPath = "/api/lazy-loading/cleanup";
            return [
              4 /*yield*/,
              this.request(
                {
                  path: urlPath,
                  method: "POST",
                  headers: headerParameters,
                  query: queryParameters,
                },
                initOverrides
              ),
            ];
          case 1:
            response = _a.sent();
            if (this.isJsonMime(response.headers.get("content-type"))) {
              return [2 /*return*/, new runtime.JSONApiResponse(response)];
            } else {
              return [2 /*return*/, new runtime.TextApiResponse(response)];
            }
            return [2 /*return*/];
        }
      });
    });
  };
  /**
   * Force cleanup of packages or all packages.
   * Force Cleanup Endpoint
   */
  LazyLoadingApi.prototype.forceCleanupEndpointApiLazyLoadingCleanupPost = function () {
    return __awaiter(this, arguments, void 0, function (requestParameters, initOverrides) {
      var response;
      if (requestParameters === void 0) {
        requestParameters = {};
      }
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [
              4 /*yield*/,
              this.forceCleanupEndpointApiLazyLoadingCleanupPostRaw(requestParameters, initOverrides),
            ];
          case 1:
            response = _a.sent();
            return [4 /*yield*/, response.value()];
          case 2:
            return [2 /*return*/, _a.sent()];
        }
      });
    });
  };
  /**
   * Get information about all registered packages.
   * Get All Packages Endpoint
   */
  LazyLoadingApi.prototype.getAllPackagesEndpointApiLazyLoadingPackagesGetRaw = function (initOverrides) {
    return __awaiter(this, void 0, void 0, function () {
      var queryParameters, headerParameters, urlPath, response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            queryParameters = {};
            headerParameters = {};
            urlPath = "/api/lazy-loading/packages";
            return [
              4 /*yield*/,
              this.request(
                {
                  path: urlPath,
                  method: "GET",
                  headers: headerParameters,
                  query: queryParameters,
                },
                initOverrides
              ),
            ];
          case 1:
            response = _a.sent();
            return [
              2 /*return*/,
              new runtime.JSONApiResponse(response, function (jsonValue) {
                return jsonValue.map(index_1.PackageInfoResponseFromJSON);
              }),
            ];
        }
      });
    });
  };
  /**
   * Get information about all registered packages.
   * Get All Packages Endpoint
   */
  LazyLoadingApi.prototype.getAllPackagesEndpointApiLazyLoadingPackagesGet = function (initOverrides) {
    return __awaiter(this, void 0, void 0, function () {
      var response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4 /*yield*/, this.getAllPackagesEndpointApiLazyLoadingPackagesGetRaw(initOverrides)];
          case 1:
            response = _a.sent();
            return [4 /*yield*/, response.value()];
          case 2:
            return [2 /*return*/, _a.sent()];
        }
      });
    });
  };
  /**
   * Get the current lazy loading configuration.
   * Get Config Endpoint
   */
  LazyLoadingApi.prototype.getConfigEndpointApiLazyLoadingConfigGetRaw = function (initOverrides) {
    return __awaiter(this, void 0, void 0, function () {
      var queryParameters, headerParameters, urlPath, response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            queryParameters = {};
            headerParameters = {};
            urlPath = "/api/lazy-loading/config";
            return [
              4 /*yield*/,
              this.request(
                {
                  path: urlPath,
                  method: "GET",
                  headers: headerParameters,
                  query: queryParameters,
                },
                initOverrides
              ),
            ];
          case 1:
            response = _a.sent();
            return [
              2 /*return*/,
              new runtime.JSONApiResponse(response, function (jsonValue) {
                return (0, index_1.ConfigResponseFromJSON)(jsonValue);
              }),
            ];
        }
      });
    });
  };
  /**
   * Get the current lazy loading configuration.
   * Get Config Endpoint
   */
  LazyLoadingApi.prototype.getConfigEndpointApiLazyLoadingConfigGet = function (initOverrides) {
    return __awaiter(this, void 0, void 0, function () {
      var response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4 /*yield*/, this.getConfigEndpointApiLazyLoadingConfigGetRaw(initOverrides)];
          case 1:
            response = _a.sent();
            return [4 /*yield*/, response.value()];
          case 2:
            return [2 /*return*/, _a.sent()];
        }
      });
    });
  };
  /**
   * Get an existing lazy export.
   * Get Lazy Export Endpoint
   */
  LazyLoadingApi.prototype.getLazyExportEndpointApiLazyLoadingExportsPackageNameGetRaw = function (
    requestParameters,
    initOverrides
  ) {
    return __awaiter(this, void 0, void 0, function () {
      var queryParameters, headerParameters, urlPath, response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (requestParameters["packageName"] == null) {
              throw new runtime.RequiredError(
                "packageName",
                'Required parameter "packageName" was null or undefined when calling getLazyExportEndpointApiLazyLoadingExportsPackageNameGet().'
              );
            }
            queryParameters = {};
            headerParameters = {};
            urlPath = "/api/lazy-loading/exports/{package_name}";
            urlPath = urlPath.replace(
              "{".concat("package_name", "}"),
              encodeURIComponent(String(requestParameters["packageName"]))
            );
            return [
              4 /*yield*/,
              this.request(
                {
                  path: urlPath,
                  method: "GET",
                  headers: headerParameters,
                  query: queryParameters,
                },
                initOverrides
              ),
            ];
          case 1:
            response = _a.sent();
            return [
              2 /*return*/,
              new runtime.JSONApiResponse(response, function (jsonValue) {
                return (0, index_1.LazyExportResponseFromJSON)(jsonValue);
              }),
            ];
        }
      });
    });
  };
  /**
   * Get an existing lazy export.
   * Get Lazy Export Endpoint
   */
  LazyLoadingApi.prototype.getLazyExportEndpointApiLazyLoadingExportsPackageNameGet = function (
    requestParameters,
    initOverrides
  ) {
    return __awaiter(this, void 0, void 0, function () {
      var response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [
              4 /*yield*/,
              this.getLazyExportEndpointApiLazyLoadingExportsPackageNameGetRaw(requestParameters, initOverrides),
            ];
          case 1:
            response = _a.sent();
            return [4 /*yield*/, response.value()];
          case 2:
            return [2 /*return*/, _a.sent()];
        }
      });
    });
  };
  /**
   * Get the current status of the lazy loading system.
   * Get Lazy Loading Status
   */
  LazyLoadingApi.prototype.getLazyLoadingStatusApiLazyLoadingStatusGetRaw = function (initOverrides) {
    return __awaiter(this, void 0, void 0, function () {
      var queryParameters, headerParameters, urlPath, response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            queryParameters = {};
            headerParameters = {};
            urlPath = "/api/lazy-loading/status";
            return [
              4 /*yield*/,
              this.request(
                {
                  path: urlPath,
                  method: "GET",
                  headers: headerParameters,
                  query: queryParameters,
                },
                initOverrides
              ),
            ];
          case 1:
            response = _a.sent();
            return [
              2 /*return*/,
              new runtime.JSONApiResponse(response, function (jsonValue) {
                return (0, index_1.LazyLoadingStatusResponseFromJSON)(jsonValue);
              }),
            ];
        }
      });
    });
  };
  /**
   * Get the current status of the lazy loading system.
   * Get Lazy Loading Status
   */
  LazyLoadingApi.prototype.getLazyLoadingStatusApiLazyLoadingStatusGet = function (initOverrides) {
    return __awaiter(this, void 0, void 0, function () {
      var response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4 /*yield*/, this.getLazyLoadingStatusApiLazyLoadingStatusGetRaw(initOverrides)];
          case 1:
            response = _a.sent();
            return [4 /*yield*/, response.value()];
          case 2:
            return [2 /*return*/, _a.sent()];
        }
      });
    });
  };
  /**
   * Get detailed information about a specific package.
   * Get Package Info Endpoint
   */
  LazyLoadingApi.prototype.getPackageInfoEndpointApiLazyLoadingPackagesPackageNameGetRaw = function (
    requestParameters,
    initOverrides
  ) {
    return __awaiter(this, void 0, void 0, function () {
      var queryParameters, headerParameters, urlPath, response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (requestParameters["packageName"] == null) {
              throw new runtime.RequiredError(
                "packageName",
                'Required parameter "packageName" was null or undefined when calling getPackageInfoEndpointApiLazyLoadingPackagesPackageNameGet().'
              );
            }
            queryParameters = {};
            headerParameters = {};
            urlPath = "/api/lazy-loading/packages/{package_name}";
            urlPath = urlPath.replace(
              "{".concat("package_name", "}"),
              encodeURIComponent(String(requestParameters["packageName"]))
            );
            return [
              4 /*yield*/,
              this.request(
                {
                  path: urlPath,
                  method: "GET",
                  headers: headerParameters,
                  query: queryParameters,
                },
                initOverrides
              ),
            ];
          case 1:
            response = _a.sent();
            return [
              2 /*return*/,
              new runtime.JSONApiResponse(response, function (jsonValue) {
                return (0, index_1.PackageInfoResponseFromJSON)(jsonValue);
              }),
            ];
        }
      });
    });
  };
  /**
   * Get detailed information about a specific package.
   * Get Package Info Endpoint
   */
  LazyLoadingApi.prototype.getPackageInfoEndpointApiLazyLoadingPackagesPackageNameGet = function (
    requestParameters,
    initOverrides
  ) {
    return __awaiter(this, void 0, void 0, function () {
      var response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [
              4 /*yield*/,
              this.getPackageInfoEndpointApiLazyLoadingPackagesPackageNameGetRaw(requestParameters, initOverrides),
            ];
          case 1:
            response = _a.sent();
            return [4 /*yield*/, response.value()];
          case 2:
            return [2 /*return*/, _a.sent()];
        }
      });
    });
  };
  /**
   * Load a package using its lazy export.
   * Load Package Endpoint
   */
  LazyLoadingApi.prototype.loadPackageEndpointApiLazyLoadingPackagesLoadPostRaw = function (
    requestParameters,
    initOverrides
  ) {
    return __awaiter(this, void 0, void 0, function () {
      var queryParameters, headerParameters, urlPath, response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (requestParameters["packageLoadRequest"] == null) {
              throw new runtime.RequiredError(
                "packageLoadRequest",
                'Required parameter "packageLoadRequest" was null or undefined when calling loadPackageEndpointApiLazyLoadingPackagesLoadPost().'
              );
            }
            queryParameters = {};
            headerParameters = {};
            headerParameters["Content-Type"] = "application/json";
            urlPath = "/api/lazy-loading/packages/load";
            return [
              4 /*yield*/,
              this.request(
                {
                  path: urlPath,
                  method: "POST",
                  headers: headerParameters,
                  query: queryParameters,
                  body: (0, index_1.PackageLoadRequestToJSON)(requestParameters["packageLoadRequest"]),
                },
                initOverrides
              ),
            ];
          case 1:
            response = _a.sent();
            return [
              2 /*return*/,
              new runtime.JSONApiResponse(response, function (jsonValue) {
                return (0, index_1.PackageLoadResponseFromJSON)(jsonValue);
              }),
            ];
        }
      });
    });
  };
  /**
   * Load a package using its lazy export.
   * Load Package Endpoint
   */
  LazyLoadingApi.prototype.loadPackageEndpointApiLazyLoadingPackagesLoadPost = function (
    requestParameters,
    initOverrides
  ) {
    return __awaiter(this, void 0, void 0, function () {
      var response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [
              4 /*yield*/,
              this.loadPackageEndpointApiLazyLoadingPackagesLoadPostRaw(requestParameters, initOverrides),
            ];
          case 1:
            response = _a.sent();
            return [4 /*yield*/, response.value()];
          case 2:
            return [2 /*return*/, _a.sent()];
        }
      });
    });
  };
  /**
   * Unload a package by forcing cleanup of its lazy export.
   * Unload Package Endpoint
   */
  LazyLoadingApi.prototype.unloadPackageEndpointApiLazyLoadingPackagesPackageNameDeleteRaw = function (
    requestParameters,
    initOverrides
  ) {
    return __awaiter(this, void 0, void 0, function () {
      var queryParameters, headerParameters, urlPath, response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (requestParameters["packageName"] == null) {
              throw new runtime.RequiredError(
                "packageName",
                'Required parameter "packageName" was null or undefined when calling unloadPackageEndpointApiLazyLoadingPackagesPackageNameDelete().'
              );
            }
            queryParameters = {};
            headerParameters = {};
            urlPath = "/api/lazy-loading/packages/{package_name}";
            urlPath = urlPath.replace(
              "{".concat("package_name", "}"),
              encodeURIComponent(String(requestParameters["packageName"]))
            );
            return [
              4 /*yield*/,
              this.request(
                {
                  path: urlPath,
                  method: "DELETE",
                  headers: headerParameters,
                  query: queryParameters,
                },
                initOverrides
              ),
            ];
          case 1:
            response = _a.sent();
            if (this.isJsonMime(response.headers.get("content-type"))) {
              return [2 /*return*/, new runtime.JSONApiResponse(response)];
            } else {
              return [2 /*return*/, new runtime.TextApiResponse(response)];
            }
            return [2 /*return*/];
        }
      });
    });
  };
  /**
   * Unload a package by forcing cleanup of its lazy export.
   * Unload Package Endpoint
   */
  LazyLoadingApi.prototype.unloadPackageEndpointApiLazyLoadingPackagesPackageNameDelete = function (
    requestParameters,
    initOverrides
  ) {
    return __awaiter(this, void 0, void 0, function () {
      var response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [
              4 /*yield*/,
              this.unloadPackageEndpointApiLazyLoadingPackagesPackageNameDeleteRaw(requestParameters, initOverrides),
            ];
          case 1:
            response = _a.sent();
            return [4 /*yield*/, response.value()];
          case 2:
            return [2 /*return*/, _a.sent()];
        }
      });
    });
  };
  /**
   * Update the lazy loading configuration.
   * Update Config Endpoint
   */
  LazyLoadingApi.prototype.updateConfigEndpointApiLazyLoadingConfigPutRaw = function (
    requestParameters,
    initOverrides
  ) {
    return __awaiter(this, void 0, void 0, function () {
      var queryParameters, headerParameters, urlPath, response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (requestParameters["configUpdateRequest"] == null) {
              throw new runtime.RequiredError(
                "configUpdateRequest",
                'Required parameter "configUpdateRequest" was null or undefined when calling updateConfigEndpointApiLazyLoadingConfigPut().'
              );
            }
            queryParameters = {};
            headerParameters = {};
            headerParameters["Content-Type"] = "application/json";
            urlPath = "/api/lazy-loading/config";
            return [
              4 /*yield*/,
              this.request(
                {
                  path: urlPath,
                  method: "PUT",
                  headers: headerParameters,
                  query: queryParameters,
                  body: (0, index_1.ConfigUpdateRequestToJSON)(requestParameters["configUpdateRequest"]),
                },
                initOverrides
              ),
            ];
          case 1:
            response = _a.sent();
            if (this.isJsonMime(response.headers.get("content-type"))) {
              return [2 /*return*/, new runtime.JSONApiResponse(response)];
            } else {
              return [2 /*return*/, new runtime.TextApiResponse(response)];
            }
            return [2 /*return*/];
        }
      });
    });
  };
  /**
   * Update the lazy loading configuration.
   * Update Config Endpoint
   */
  LazyLoadingApi.prototype.updateConfigEndpointApiLazyLoadingConfigPut = function (requestParameters, initOverrides) {
    return __awaiter(this, void 0, void 0, function () {
      var response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4 /*yield*/, this.updateConfigEndpointApiLazyLoadingConfigPutRaw(requestParameters, initOverrides)];
          case 1:
            response = _a.sent();
            return [4 /*yield*/, response.value()];
          case 2:
            return [2 /*return*/, _a.sent()];
        }
      });
    });
  };
  return LazyLoadingApi;
})(runtime.BaseAPI);
exports.LazyLoadingApi = LazyLoadingApi;
