/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { NLWebAskRequest, NLWebHealthStatus, NLWebMCPRequest, NLWebPerformanceStats, NLWebRollbackRequest, NLWebRollbackResponse, NLWebSitesResponse, NLWebSuggestionRequest, NLWebSuggestionResponse, NLWebTool, NLWebVerificationResponse } from '../models/index';
export interface DisableToolApiNlwebToolsToolNameDisablePostRequest {
    toolName: string;
}
export interface EnableRollbackApiNlwebRollbackPostRequest {
    nLWebRollbackRequest: NLWebRollbackRequest;
}
export interface EnableToolApiNlwebToolsToolNameEnablePostRequest {
    toolName: string;
}
export interface GetToolsApiNlwebToolsGetRequest {
    category?: string | null;
    tags?: string | null;
}
export interface ProxyAskApiNlwebAskPostRequest {
    nLWebAskRequest: NLWebAskRequest;
}
export interface ProxyMcpApiNlwebMcpPostRequest {
    nLWebMCPRequest: NLWebMCPRequest;
}
export interface RegisterToolApiNlwebToolsPostRequest {
    nLWebTool: NLWebTool;
}
export interface SuggestToolsApiNlwebSuggestPostRequest {
    nLWebSuggestionRequest: NLWebSuggestionRequest;
}
export interface UnregisterToolApiNlwebToolsToolNameDeleteRequest {
    toolName: string;
}
/**
 * NlwebApi - interface
 *
 * @export
 * @interface NlwebApiInterface
 */
export interface NlwebApiInterface {
    /**
     * Clear the NLWeb suggestion cache.
     * @summary Clear Cache
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    clearCacheApiNlwebCacheClearPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Clear the NLWeb suggestion cache.
     * Clear Cache
     */
    clearCacheApiNlwebCacheClearPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Disable an NLWeb tool.
     * @summary Disable Tool
     * @param {string} toolName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    disableToolApiNlwebToolsToolNameDisablePostRaw(requestParameters: DisableToolApiNlwebToolsToolNameDisablePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Disable an NLWeb tool.
     * Disable Tool
     */
    disableToolApiNlwebToolsToolNameDisablePost(requestParameters: DisableToolApiNlwebToolsToolNameDisablePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Enable or disable emergency rollback for NLWeb integration.  This endpoint allows administrators to quickly disable NLWeb functionality in case of issues or performance problems.
     * @summary Enable Rollback
     * @param {NLWebRollbackRequest} nLWebRollbackRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    enableRollbackApiNlwebRollbackPostRaw(requestParameters: EnableRollbackApiNlwebRollbackPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NLWebRollbackResponse>>;
    /**
     * Enable or disable emergency rollback for NLWeb integration.  This endpoint allows administrators to quickly disable NLWeb functionality in case of issues or performance problems.
     * Enable Rollback
     */
    enableRollbackApiNlwebRollbackPost(requestParameters: EnableRollbackApiNlwebRollbackPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NLWebRollbackResponse>;
    /**
     * Enable an NLWeb tool.
     * @summary Enable Tool
     * @param {string} toolName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    enableToolApiNlwebToolsToolNameEnablePostRaw(requestParameters: EnableToolApiNlwebToolsToolNameEnablePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Enable an NLWeb tool.
     * Enable Tool
     */
    enableToolApiNlwebToolsToolNameEnablePost(requestParameters: EnableToolApiNlwebToolsToolNameEnablePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Force a health check of the NLWeb service.
     * @summary Force Health Check
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    forceHealthCheckApiNlwebHealthForceCheckPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Force a health check of the NLWeb service.
     * Force Health Check
     */
    forceHealthCheckApiNlwebHealthForceCheckPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Get NLWeb service health status.
     * @summary Get Health
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    getHealthApiNlwebHealthGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NLWebHealthStatus>>;
    /**
     * Get NLWeb service health status.
     * Get Health
     */
    getHealthApiNlwebHealthGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NLWebHealthStatus>;
    /**
     * Get NLWeb service performance statistics.
     * @summary Get Performance Stats
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    getPerformanceStatsApiNlwebPerformanceGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NLWebPerformanceStats>>;
    /**
     * Get NLWeb service performance statistics.
     * Get Performance Stats
     */
    getPerformanceStatsApiNlwebPerformanceGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NLWebPerformanceStats>;
    /**
     * Get NLWeb integration status and performance metrics.
     * @summary Get Status
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    getStatusApiNlwebStatusGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Get NLWeb integration status and performance metrics.
     * Get Status
     */
    getStatusApiNlwebStatusGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Get available NLWeb tools, optionally filtered by category or tags.
     * @summary Get Tools
     * @param {string} [category]
     * @param {string} [tags]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    getToolsApiNlwebToolsGetRaw(requestParameters: GetToolsApiNlwebToolsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Get available NLWeb tools, optionally filtered by category or tags.
     * Get Tools
     */
    getToolsApiNlwebToolsGet(requestParameters: GetToolsApiNlwebToolsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Get NLWeb integration verification checklist for rollout.  This endpoint provides a comprehensive checklist to verify that NLWeb is properly configured and performing well before full rollout.
     * @summary Get Verification Checklist
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    getVerificationChecklistApiNlwebVerificationGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NLWebVerificationResponse>>;
    /**
     * Get NLWeb integration verification checklist for rollout.  This endpoint provides a comprehensive checklist to verify that NLWeb is properly configured and performing well before full rollout.
     * Get Verification Checklist
     */
    getVerificationChecklistApiNlwebVerificationGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NLWebVerificationResponse>;
    /**
     * Proxy NLWeb /ask endpoint with SSE streaming support.  This endpoint forwards requests to an external NLWeb service and streams the response back to the client with proper event mapping.
     * @summary Proxy Ask
     * @param {NLWebAskRequest} nLWebAskRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    proxyAskApiNlwebAskPostRaw(requestParameters: ProxyAskApiNlwebAskPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Proxy NLWeb /ask endpoint with SSE streaming support.  This endpoint forwards requests to an external NLWeb service and streams the response back to the client with proper event mapping.
     * Proxy Ask
     */
    proxyAskApiNlwebAskPost(requestParameters: ProxyAskApiNlwebAskPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Proxy NLWeb MCP (Model Context Protocol) endpoint.  This endpoint forwards JSON-RPC requests to an external NLWeb MCP service.
     * @summary Proxy Mcp
     * @param {NLWebMCPRequest} nLWebMCPRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    proxyMcpApiNlwebMcpPostRaw(requestParameters: ProxyMcpApiNlwebMcpPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Proxy NLWeb MCP (Model Context Protocol) endpoint.  This endpoint forwards JSON-RPC requests to an external NLWeb MCP service.
     * Proxy Mcp
     */
    proxyMcpApiNlwebMcpPost(requestParameters: ProxyMcpApiNlwebMcpPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Proxy NLWeb /sites endpoint to list available sites.
     * @summary Proxy Sites
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    proxySitesApiNlwebSitesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NLWebSitesResponse>>;
    /**
     * Proxy NLWeb /sites endpoint to list available sites.
     * Proxy Sites
     */
    proxySitesApiNlwebSitesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NLWebSitesResponse>;
    /**
     * Register a new NLWeb tool.
     * @summary Register Tool
     * @param {NLWebTool} nLWebTool
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    registerToolApiNlwebToolsPostRaw(requestParameters: RegisterToolApiNlwebToolsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Register a new NLWeb tool.
     * Register Tool
     */
    registerToolApiNlwebToolsPost(requestParameters: RegisterToolApiNlwebToolsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Suggest tools for a natural language query using the NLWeb router service.  This endpoint analyzes the query and suggests appropriate tools with parameters based on context and tool relevance.
     * @summary Suggest Tools
     * @param {NLWebSuggestionRequest} nLWebSuggestionRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    suggestToolsApiNlwebSuggestPostRaw(requestParameters: SuggestToolsApiNlwebSuggestPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NLWebSuggestionResponse>>;
    /**
     * Suggest tools for a natural language query using the NLWeb router service.  This endpoint analyzes the query and suggests appropriate tools with parameters based on context and tool relevance.
     * Suggest Tools
     */
    suggestToolsApiNlwebSuggestPost(requestParameters: SuggestToolsApiNlwebSuggestPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NLWebSuggestionResponse>;
    /**
     * Unregister an NLWeb tool.
     * @summary Unregister Tool
     * @param {string} toolName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NlwebApiInterface
     */
    unregisterToolApiNlwebToolsToolNameDeleteRaw(requestParameters: UnregisterToolApiNlwebToolsToolNameDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Unregister an NLWeb tool.
     * Unregister Tool
     */
    unregisterToolApiNlwebToolsToolNameDelete(requestParameters: UnregisterToolApiNlwebToolsToolNameDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
}
/**
 *
 */
export declare class NlwebApi extends runtime.BaseAPI implements NlwebApiInterface {
    /**
     * Clear the NLWeb suggestion cache.
     * Clear Cache
     */
    clearCacheApiNlwebCacheClearPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Clear the NLWeb suggestion cache.
     * Clear Cache
     */
    clearCacheApiNlwebCacheClearPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Disable an NLWeb tool.
     * Disable Tool
     */
    disableToolApiNlwebToolsToolNameDisablePostRaw(requestParameters: DisableToolApiNlwebToolsToolNameDisablePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Disable an NLWeb tool.
     * Disable Tool
     */
    disableToolApiNlwebToolsToolNameDisablePost(requestParameters: DisableToolApiNlwebToolsToolNameDisablePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Enable or disable emergency rollback for NLWeb integration.  This endpoint allows administrators to quickly disable NLWeb functionality in case of issues or performance problems.
     * Enable Rollback
     */
    enableRollbackApiNlwebRollbackPostRaw(requestParameters: EnableRollbackApiNlwebRollbackPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NLWebRollbackResponse>>;
    /**
     * Enable or disable emergency rollback for NLWeb integration.  This endpoint allows administrators to quickly disable NLWeb functionality in case of issues or performance problems.
     * Enable Rollback
     */
    enableRollbackApiNlwebRollbackPost(requestParameters: EnableRollbackApiNlwebRollbackPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NLWebRollbackResponse>;
    /**
     * Enable an NLWeb tool.
     * Enable Tool
     */
    enableToolApiNlwebToolsToolNameEnablePostRaw(requestParameters: EnableToolApiNlwebToolsToolNameEnablePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Enable an NLWeb tool.
     * Enable Tool
     */
    enableToolApiNlwebToolsToolNameEnablePost(requestParameters: EnableToolApiNlwebToolsToolNameEnablePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Force a health check of the NLWeb service.
     * Force Health Check
     */
    forceHealthCheckApiNlwebHealthForceCheckPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Force a health check of the NLWeb service.
     * Force Health Check
     */
    forceHealthCheckApiNlwebHealthForceCheckPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Get NLWeb service health status.
     * Get Health
     */
    getHealthApiNlwebHealthGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NLWebHealthStatus>>;
    /**
     * Get NLWeb service health status.
     * Get Health
     */
    getHealthApiNlwebHealthGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NLWebHealthStatus>;
    /**
     * Get NLWeb service performance statistics.
     * Get Performance Stats
     */
    getPerformanceStatsApiNlwebPerformanceGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NLWebPerformanceStats>>;
    /**
     * Get NLWeb service performance statistics.
     * Get Performance Stats
     */
    getPerformanceStatsApiNlwebPerformanceGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NLWebPerformanceStats>;
    /**
     * Get NLWeb integration status and performance metrics.
     * Get Status
     */
    getStatusApiNlwebStatusGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Get NLWeb integration status and performance metrics.
     * Get Status
     */
    getStatusApiNlwebStatusGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Get available NLWeb tools, optionally filtered by category or tags.
     * Get Tools
     */
    getToolsApiNlwebToolsGetRaw(requestParameters: GetToolsApiNlwebToolsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Get available NLWeb tools, optionally filtered by category or tags.
     * Get Tools
     */
    getToolsApiNlwebToolsGet(requestParameters?: GetToolsApiNlwebToolsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Get NLWeb integration verification checklist for rollout.  This endpoint provides a comprehensive checklist to verify that NLWeb is properly configured and performing well before full rollout.
     * Get Verification Checklist
     */
    getVerificationChecklistApiNlwebVerificationGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NLWebVerificationResponse>>;
    /**
     * Get NLWeb integration verification checklist for rollout.  This endpoint provides a comprehensive checklist to verify that NLWeb is properly configured and performing well before full rollout.
     * Get Verification Checklist
     */
    getVerificationChecklistApiNlwebVerificationGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NLWebVerificationResponse>;
    /**
     * Proxy NLWeb /ask endpoint with SSE streaming support.  This endpoint forwards requests to an external NLWeb service and streams the response back to the client with proper event mapping.
     * Proxy Ask
     */
    proxyAskApiNlwebAskPostRaw(requestParameters: ProxyAskApiNlwebAskPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Proxy NLWeb /ask endpoint with SSE streaming support.  This endpoint forwards requests to an external NLWeb service and streams the response back to the client with proper event mapping.
     * Proxy Ask
     */
    proxyAskApiNlwebAskPost(requestParameters: ProxyAskApiNlwebAskPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Proxy NLWeb MCP (Model Context Protocol) endpoint.  This endpoint forwards JSON-RPC requests to an external NLWeb MCP service.
     * Proxy Mcp
     */
    proxyMcpApiNlwebMcpPostRaw(requestParameters: ProxyMcpApiNlwebMcpPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Proxy NLWeb MCP (Model Context Protocol) endpoint.  This endpoint forwards JSON-RPC requests to an external NLWeb MCP service.
     * Proxy Mcp
     */
    proxyMcpApiNlwebMcpPost(requestParameters: ProxyMcpApiNlwebMcpPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Proxy NLWeb /sites endpoint to list available sites.
     * Proxy Sites
     */
    proxySitesApiNlwebSitesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NLWebSitesResponse>>;
    /**
     * Proxy NLWeb /sites endpoint to list available sites.
     * Proxy Sites
     */
    proxySitesApiNlwebSitesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NLWebSitesResponse>;
    /**
     * Register a new NLWeb tool.
     * Register Tool
     */
    registerToolApiNlwebToolsPostRaw(requestParameters: RegisterToolApiNlwebToolsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Register a new NLWeb tool.
     * Register Tool
     */
    registerToolApiNlwebToolsPost(requestParameters: RegisterToolApiNlwebToolsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Suggest tools for a natural language query using the NLWeb router service.  This endpoint analyzes the query and suggests appropriate tools with parameters based on context and tool relevance.
     * Suggest Tools
     */
    suggestToolsApiNlwebSuggestPostRaw(requestParameters: SuggestToolsApiNlwebSuggestPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NLWebSuggestionResponse>>;
    /**
     * Suggest tools for a natural language query using the NLWeb router service.  This endpoint analyzes the query and suggests appropriate tools with parameters based on context and tool relevance.
     * Suggest Tools
     */
    suggestToolsApiNlwebSuggestPost(requestParameters: SuggestToolsApiNlwebSuggestPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NLWebSuggestionResponse>;
    /**
     * Unregister an NLWeb tool.
     * Unregister Tool
     */
    unregisterToolApiNlwebToolsToolNameDeleteRaw(requestParameters: UnregisterToolApiNlwebToolsToolNameDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Unregister an NLWeb tool.
     * Unregister Tool
     */
    unregisterToolApiNlwebToolsToolNameDelete(requestParameters: UnregisterToolApiNlwebToolsToolNameDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
}
