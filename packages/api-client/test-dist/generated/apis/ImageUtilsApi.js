"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImageUtilsApi = void 0;
var runtime = require("../runtime");
var index_1 = require("../models/index");
/**
 *
 */
var ImageUtilsApi = /** @class */ (function (_super) {
    __extends(ImageUtilsApi, _super);
    function ImageUtilsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Calculate resize dimensions maintaining aspect ratio.
     * Calculate Resize Dimensions
     */
    ImageUtilsApi.prototype.calculateResizeDimensionsApiImageUtilsApiImageUtilsApiImageUtilsResizeDimensionsPostRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['resizeDimensionsRequest'] == null) {
                            throw new runtime.RequiredError('resizeDimensionsRequest', 'Required parameter "resizeDimensionsRequest" was null or undefined when calling calculateResizeDimensionsApiImageUtilsApiImageUtilsApiImageUtilsResizeDimensionsPost().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/resize-dimensions";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ResizeDimensionsRequestToJSON)(requestParameters['resizeDimensionsRequest']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ResizeDimensionsResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Calculate resize dimensions maintaining aspect ratio.
     * Calculate Resize Dimensions
     */
    ImageUtilsApi.prototype.calculateResizeDimensionsApiImageUtilsApiImageUtilsApiImageUtilsResizeDimensionsPost = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.calculateResizeDimensionsApiImageUtilsApiImageUtilsApiImageUtilsResizeDimensionsPostRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Calculate resize dimensions maintaining aspect ratio.
     * Calculate Resize Dimensions
     */
    ImageUtilsApi.prototype.calculateResizeDimensionsApiImageUtilsApiImageUtilsApiImageUtilsResizeDimensionsPost_1Raw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['resizeDimensionsRequest'] == null) {
                            throw new runtime.RequiredError('resizeDimensionsRequest', 'Required parameter "resizeDimensionsRequest" was null or undefined when calling calculateResizeDimensionsApiImageUtilsApiImageUtilsApiImageUtilsResizeDimensionsPost_1().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/resize-dimensions";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ResizeDimensionsRequestToJSON)(requestParameters['resizeDimensionsRequest']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ResizeDimensionsResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Calculate resize dimensions maintaining aspect ratio.
     * Calculate Resize Dimensions
     */
    ImageUtilsApi.prototype.calculateResizeDimensionsApiImageUtilsApiImageUtilsApiImageUtilsResizeDimensionsPost_1 = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.calculateResizeDimensionsApiImageUtilsApiImageUtilsApiImageUtilsResizeDimensionsPost_1Raw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Calculate resize dimensions maintaining aspect ratio.
     * Calculate Resize Dimensions
     */
    ImageUtilsApi.prototype.calculateResizeDimensionsApiImageUtilsApiImageUtilsApiImageUtilsResizeDimensionsPost_2Raw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['resizeDimensionsRequest'] == null) {
                            throw new runtime.RequiredError('resizeDimensionsRequest', 'Required parameter "resizeDimensionsRequest" was null or undefined when calling calculateResizeDimensionsApiImageUtilsApiImageUtilsApiImageUtilsResizeDimensionsPost_2().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/resize-dimensions";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ResizeDimensionsRequestToJSON)(requestParameters['resizeDimensionsRequest']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ResizeDimensionsResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Calculate resize dimensions maintaining aspect ratio.
     * Calculate Resize Dimensions
     */
    ImageUtilsApi.prototype.calculateResizeDimensionsApiImageUtilsApiImageUtilsApiImageUtilsResizeDimensionsPost_2 = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.calculateResizeDimensionsApiImageUtilsApiImageUtilsApiImageUtilsResizeDimensionsPost_2Raw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Calculate aspect ratio for given dimensions.
     * Get Aspect Ratio
     */
    ImageUtilsApi.prototype.getAspectRatioApiImageUtilsApiImageUtilsApiImageUtilsAspectRatioPostRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['imageDimensionsRequest'] == null) {
                            throw new runtime.RequiredError('imageDimensionsRequest', 'Required parameter "imageDimensionsRequest" was null or undefined when calling getAspectRatioApiImageUtilsApiImageUtilsApiImageUtilsAspectRatioPost().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/aspect-ratio";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ImageDimensionsRequestToJSON)(requestParameters['imageDimensionsRequest']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.AspectRatioResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Calculate aspect ratio for given dimensions.
     * Get Aspect Ratio
     */
    ImageUtilsApi.prototype.getAspectRatioApiImageUtilsApiImageUtilsApiImageUtilsAspectRatioPost = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getAspectRatioApiImageUtilsApiImageUtilsApiImageUtilsAspectRatioPostRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Calculate aspect ratio for given dimensions.
     * Get Aspect Ratio
     */
    ImageUtilsApi.prototype.getAspectRatioApiImageUtilsApiImageUtilsApiImageUtilsAspectRatioPost_3Raw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['imageDimensionsRequest'] == null) {
                            throw new runtime.RequiredError('imageDimensionsRequest', 'Required parameter "imageDimensionsRequest" was null or undefined when calling getAspectRatioApiImageUtilsApiImageUtilsApiImageUtilsAspectRatioPost_3().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/aspect-ratio";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ImageDimensionsRequestToJSON)(requestParameters['imageDimensionsRequest']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.AspectRatioResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Calculate aspect ratio for given dimensions.
     * Get Aspect Ratio
     */
    ImageUtilsApi.prototype.getAspectRatioApiImageUtilsApiImageUtilsApiImageUtilsAspectRatioPost_3 = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getAspectRatioApiImageUtilsApiImageUtilsApiImageUtilsAspectRatioPost_3Raw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Calculate aspect ratio for given dimensions.
     * Get Aspect Ratio
     */
    ImageUtilsApi.prototype.getAspectRatioApiImageUtilsApiImageUtilsApiImageUtilsAspectRatioPost_4Raw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['imageDimensionsRequest'] == null) {
                            throw new runtime.RequiredError('imageDimensionsRequest', 'Required parameter "imageDimensionsRequest" was null or undefined when calling getAspectRatioApiImageUtilsApiImageUtilsApiImageUtilsAspectRatioPost_4().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/aspect-ratio";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ImageDimensionsRequestToJSON)(requestParameters['imageDimensionsRequest']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.AspectRatioResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Calculate aspect ratio for given dimensions.
     * Get Aspect Ratio
     */
    ImageUtilsApi.prototype.getAspectRatioApiImageUtilsApiImageUtilsApiImageUtilsAspectRatioPost_4 = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getAspectRatioApiImageUtilsApiImageUtilsApiImageUtilsAspectRatioPost_4Raw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Get default normalization values for a model type.
     * Get Default Normalization
     */
    ImageUtilsApi.prototype.getDefaultNormalizationApiImageUtilsApiImageUtilsNormalizationModelTypeGetRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['modelType'] == null) {
                            throw new runtime.RequiredError('modelType', 'Required parameter "modelType" was null or undefined when calling getDefaultNormalizationApiImageUtilsApiImageUtilsNormalizationModelTypeGet().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/normalization/{model_type}";
                        urlPath = urlPath.replace("{".concat("model_type", "}"), encodeURIComponent(String(requestParameters['modelType'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        if (this.isJsonMime(response.headers.get('content-type'))) {
                            return [2 /*return*/, new runtime.JSONApiResponse(response)];
                        }
                        else {
                            return [2 /*return*/, new runtime.TextApiResponse(response)];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Get default normalization values for a model type.
     * Get Default Normalization
     */
    ImageUtilsApi.prototype.getDefaultNormalizationApiImageUtilsApiImageUtilsNormalizationModelTypeGet = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getDefaultNormalizationApiImageUtilsApiImageUtilsNormalizationModelTypeGetRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Get default normalization values for a model type.
     * Get Default Normalization
     */
    ImageUtilsApi.prototype.getDefaultNormalizationApiImageUtilsApiImageUtilsNormalizationModelTypeGet_5Raw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['modelType'] == null) {
                            throw new runtime.RequiredError('modelType', 'Required parameter "modelType" was null or undefined when calling getDefaultNormalizationApiImageUtilsApiImageUtilsNormalizationModelTypeGet_5().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/normalization/{model_type}";
                        urlPath = urlPath.replace("{".concat("model_type", "}"), encodeURIComponent(String(requestParameters['modelType'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        if (this.isJsonMime(response.headers.get('content-type'))) {
                            return [2 /*return*/, new runtime.JSONApiResponse(response)];
                        }
                        else {
                            return [2 /*return*/, new runtime.TextApiResponse(response)];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Get default normalization values for a model type.
     * Get Default Normalization
     */
    ImageUtilsApi.prototype.getDefaultNormalizationApiImageUtilsApiImageUtilsNormalizationModelTypeGet_5 = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getDefaultNormalizationApiImageUtilsApiImageUtilsNormalizationModelTypeGet_5Raw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Get format information for a specific extension.
     * Get Format Info
     */
    ImageUtilsApi.prototype.getFormatInfoApiImageUtilsApiImageUtilsApiImageUtilsFormatExtensionGetRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['extension'] == null) {
                            throw new runtime.RequiredError('extension', 'Required parameter "extension" was null or undefined when calling getFormatInfoApiImageUtilsApiImageUtilsApiImageUtilsFormatExtensionGet().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/format/{extension}";
                        urlPath = urlPath.replace("{".concat("extension", "}"), encodeURIComponent(String(requestParameters['extension'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ImageFormatResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Get format information for a specific extension.
     * Get Format Info
     */
    ImageUtilsApi.prototype.getFormatInfoApiImageUtilsApiImageUtilsApiImageUtilsFormatExtensionGet = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getFormatInfoApiImageUtilsApiImageUtilsApiImageUtilsFormatExtensionGetRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Get format information for a specific extension.
     * Get Format Info
     */
    ImageUtilsApi.prototype.getFormatInfoApiImageUtilsApiImageUtilsApiImageUtilsFormatExtensionGet_6Raw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['extension'] == null) {
                            throw new runtime.RequiredError('extension', 'Required parameter "extension" was null or undefined when calling getFormatInfoApiImageUtilsApiImageUtilsApiImageUtilsFormatExtensionGet_6().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/format/{extension}";
                        urlPath = urlPath.replace("{".concat("extension", "}"), encodeURIComponent(String(requestParameters['extension'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ImageFormatResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Get format information for a specific extension.
     * Get Format Info
     */
    ImageUtilsApi.prototype.getFormatInfoApiImageUtilsApiImageUtilsApiImageUtilsFormatExtensionGet_6 = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getFormatInfoApiImageUtilsApiImageUtilsApiImageUtilsFormatExtensionGet_6Raw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Get format information for a specific extension.
     * Get Format Info
     */
    ImageUtilsApi.prototype.getFormatInfoApiImageUtilsApiImageUtilsApiImageUtilsFormatExtensionGet_7Raw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['extension'] == null) {
                            throw new runtime.RequiredError('extension', 'Required parameter "extension" was null or undefined when calling getFormatInfoApiImageUtilsApiImageUtilsApiImageUtilsFormatExtensionGet_7().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/format/{extension}";
                        urlPath = urlPath.replace("{".concat("extension", "}"), encodeURIComponent(String(requestParameters['extension'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ImageFormatResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Get format information for a specific extension.
     * Get Format Info
     */
    ImageUtilsApi.prototype.getFormatInfoApiImageUtilsApiImageUtilsApiImageUtilsFormatExtensionGet_7 = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getFormatInfoApiImageUtilsApiImageUtilsApiImageUtilsFormatExtensionGet_7Raw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Get image processing service information.
     * Get Service Info
     */
    ImageUtilsApi.prototype.getServiceInfoApiImageUtilsApiImageUtilsApiImageUtilsServiceInfoGetRaw = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/service-info";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ImageProcessingServiceInfoResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Get image processing service information.
     * Get Service Info
     */
    ImageUtilsApi.prototype.getServiceInfoApiImageUtilsApiImageUtilsApiImageUtilsServiceInfoGet = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getServiceInfoApiImageUtilsApiImageUtilsApiImageUtilsServiceInfoGetRaw(initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Get image processing service information.
     * Get Service Info
     */
    ImageUtilsApi.prototype.getServiceInfoApiImageUtilsApiImageUtilsApiImageUtilsServiceInfoGet_8Raw = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/service-info";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ImageProcessingServiceInfoResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Get image processing service information.
     * Get Service Info
     */
    ImageUtilsApi.prototype.getServiceInfoApiImageUtilsApiImageUtilsApiImageUtilsServiceInfoGet_8 = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getServiceInfoApiImageUtilsApiImageUtilsApiImageUtilsServiceInfoGet_8Raw(initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Get image processing service information.
     * Get Service Info
     */
    ImageUtilsApi.prototype.getServiceInfoApiImageUtilsApiImageUtilsApiImageUtilsServiceInfoGet_9Raw = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/service-info";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ImageProcessingServiceInfoResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Get image processing service information.
     * Get Service Info
     */
    ImageUtilsApi.prototype.getServiceInfoApiImageUtilsApiImageUtilsApiImageUtilsServiceInfoGet_9 = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getServiceInfoApiImageUtilsApiImageUtilsApiImageUtilsServiceInfoGet_9Raw(initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Get list of supported image formats.
     * Get Supported Formats
     */
    ImageUtilsApi.prototype.getSupportedFormatsApiImageUtilsApiImageUtilsApiImageUtilsSupportedFormatsGetRaw = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/supported-formats";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                }
            });
        });
    };
    /**
     * Get list of supported image formats.
     * Get Supported Formats
     */
    ImageUtilsApi.prototype.getSupportedFormatsApiImageUtilsApiImageUtilsApiImageUtilsSupportedFormatsGet = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getSupportedFormatsApiImageUtilsApiImageUtilsApiImageUtilsSupportedFormatsGetRaw(initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Get list of supported image formats.
     * Get Supported Formats
     */
    ImageUtilsApi.prototype.getSupportedFormatsApiImageUtilsApiImageUtilsApiImageUtilsSupportedFormatsGet_10Raw = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/supported-formats";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                }
            });
        });
    };
    /**
     * Get list of supported image formats.
     * Get Supported Formats
     */
    ImageUtilsApi.prototype.getSupportedFormatsApiImageUtilsApiImageUtilsApiImageUtilsSupportedFormatsGet_10 = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getSupportedFormatsApiImageUtilsApiImageUtilsApiImageUtilsSupportedFormatsGet_10Raw(initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Get list of supported image formats.
     * Get Supported Formats
     */
    ImageUtilsApi.prototype.getSupportedFormatsApiImageUtilsApiImageUtilsApiImageUtilsSupportedFormatsGet_11Raw = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/supported-formats";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                }
            });
        });
    };
    /**
     * Get list of supported image formats.
     * Get Supported Formats
     */
    ImageUtilsApi.prototype.getSupportedFormatsApiImageUtilsApiImageUtilsApiImageUtilsSupportedFormatsGet_11 = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getSupportedFormatsApiImageUtilsApiImageUtilsApiImageUtilsSupportedFormatsGet_11Raw(initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Health check endpoint for the image utils service.
     * Health Check
     */
    ImageUtilsApi.prototype.healthCheckApiImageUtilsApiImageUtilsHealthGetRaw = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/health";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        if (this.isJsonMime(response.headers.get('content-type'))) {
                            return [2 /*return*/, new runtime.JSONApiResponse(response)];
                        }
                        else {
                            return [2 /*return*/, new runtime.TextApiResponse(response)];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Health check endpoint for the image utils service.
     * Health Check
     */
    ImageUtilsApi.prototype.healthCheckApiImageUtilsApiImageUtilsHealthGet = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.healthCheckApiImageUtilsApiImageUtilsHealthGetRaw(initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Health check endpoint for the image utils service.
     * Health Check
     */
    ImageUtilsApi.prototype.healthCheckApiImageUtilsApiImageUtilsHealthGet_12Raw = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/health";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        if (this.isJsonMime(response.headers.get('content-type'))) {
                            return [2 /*return*/, new runtime.JSONApiResponse(response)];
                        }
                        else {
                            return [2 /*return*/, new runtime.TextApiResponse(response)];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Health check endpoint for the image utils service.
     * Health Check
     */
    ImageUtilsApi.prototype.healthCheckApiImageUtilsApiImageUtilsHealthGet_12 = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.healthCheckApiImageUtilsApiImageUtilsHealthGet_12Raw(initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Check if AVIF format is supported.
     * Is Avif Supported
     */
    ImageUtilsApi.prototype.isAvifSupportedApiImageUtilsApiImageUtilsAvifSupportedGetRaw = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/avif-supported";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        if (this.isJsonMime(response.headers.get('content-type'))) {
                            return [2 /*return*/, new runtime.JSONApiResponse(response)];
                        }
                        else {
                            return [2 /*return*/, new runtime.TextApiResponse(response)];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Check if AVIF format is supported.
     * Is Avif Supported
     */
    ImageUtilsApi.prototype.isAvifSupportedApiImageUtilsApiImageUtilsAvifSupportedGet = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.isAvifSupportedApiImageUtilsApiImageUtilsAvifSupportedGetRaw(initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Check if AVIF format is supported.
     * Is Avif Supported
     */
    ImageUtilsApi.prototype.isAvifSupportedApiImageUtilsApiImageUtilsAvifSupportedGet_13Raw = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/avif-supported";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        if (this.isJsonMime(response.headers.get('content-type'))) {
                            return [2 /*return*/, new runtime.JSONApiResponse(response)];
                        }
                        else {
                            return [2 /*return*/, new runtime.TextApiResponse(response)];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Check if AVIF format is supported.
     * Is Avif Supported
     */
    ImageUtilsApi.prototype.isAvifSupportedApiImageUtilsApiImageUtilsAvifSupportedGet_13 = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.isAvifSupportedApiImageUtilsApiImageUtilsAvifSupportedGet_13Raw(initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Check if JXL format is supported.
     * Is Jxl Supported
     */
    ImageUtilsApi.prototype.isJxlSupportedApiImageUtilsApiImageUtilsJxlSupportedGetRaw = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/jxl-supported";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        if (this.isJsonMime(response.headers.get('content-type'))) {
                            return [2 /*return*/, new runtime.JSONApiResponse(response)];
                        }
                        else {
                            return [2 /*return*/, new runtime.TextApiResponse(response)];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Check if JXL format is supported.
     * Is Jxl Supported
     */
    ImageUtilsApi.prototype.isJxlSupportedApiImageUtilsApiImageUtilsJxlSupportedGet = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.isJxlSupportedApiImageUtilsApiImageUtilsJxlSupportedGetRaw(initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Check if JXL format is supported.
     * Is Jxl Supported
     */
    ImageUtilsApi.prototype.isJxlSupportedApiImageUtilsApiImageUtilsJxlSupportedGet_14Raw = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/api/image-utils/api/image-utils/jxl-supported";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        if (this.isJsonMime(response.headers.get('content-type'))) {
                            return [2 /*return*/, new runtime.JSONApiResponse(response)];
                        }
                        else {
                            return [2 /*return*/, new runtime.TextApiResponse(response)];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Check if JXL format is supported.
     * Is Jxl Supported
     */
    ImageUtilsApi.prototype.isJxlSupportedApiImageUtilsApiImageUtilsJxlSupportedGet_14 = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.isJxlSupportedApiImageUtilsApiImageUtilsJxlSupportedGet_14Raw(initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Validate image dimensions.
     * Validate Dimensions
     */
    ImageUtilsApi.prototype.validateDimensionsApiImageUtilsApiImageUtilsApiImageUtilsValidateDimensionsPostRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['imageDimensionsRequest'] == null) {
                            throw new runtime.RequiredError('imageDimensionsRequest', 'Required parameter "imageDimensionsRequest" was null or undefined when calling validateDimensionsApiImageUtilsApiImageUtilsApiImageUtilsValidateDimensionsPost().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/validate-dimensions";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ImageDimensionsRequestToJSON)(requestParameters['imageDimensionsRequest']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ValidationResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Validate image dimensions.
     * Validate Dimensions
     */
    ImageUtilsApi.prototype.validateDimensionsApiImageUtilsApiImageUtilsApiImageUtilsValidateDimensionsPost = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.validateDimensionsApiImageUtilsApiImageUtilsApiImageUtilsValidateDimensionsPostRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Validate image dimensions.
     * Validate Dimensions
     */
    ImageUtilsApi.prototype.validateDimensionsApiImageUtilsApiImageUtilsApiImageUtilsValidateDimensionsPost_15Raw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['imageDimensionsRequest'] == null) {
                            throw new runtime.RequiredError('imageDimensionsRequest', 'Required parameter "imageDimensionsRequest" was null or undefined when calling validateDimensionsApiImageUtilsApiImageUtilsApiImageUtilsValidateDimensionsPost_15().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/validate-dimensions";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ImageDimensionsRequestToJSON)(requestParameters['imageDimensionsRequest']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ValidationResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Validate image dimensions.
     * Validate Dimensions
     */
    ImageUtilsApi.prototype.validateDimensionsApiImageUtilsApiImageUtilsApiImageUtilsValidateDimensionsPost_15 = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.validateDimensionsApiImageUtilsApiImageUtilsApiImageUtilsValidateDimensionsPost_15Raw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Validate image dimensions.
     * Validate Dimensions
     */
    ImageUtilsApi.prototype.validateDimensionsApiImageUtilsApiImageUtilsApiImageUtilsValidateDimensionsPost_16Raw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['imageDimensionsRequest'] == null) {
                            throw new runtime.RequiredError('imageDimensionsRequest', 'Required parameter "imageDimensionsRequest" was null or undefined when calling validateDimensionsApiImageUtilsApiImageUtilsApiImageUtilsValidateDimensionsPost_16().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/validate-dimensions";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ImageDimensionsRequestToJSON)(requestParameters['imageDimensionsRequest']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ValidationResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Validate image dimensions.
     * Validate Dimensions
     */
    ImageUtilsApi.prototype.validateDimensionsApiImageUtilsApiImageUtilsApiImageUtilsValidateDimensionsPost_16 = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.validateDimensionsApiImageUtilsApiImageUtilsApiImageUtilsValidateDimensionsPost_16Raw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Validate an image file path.
     * Validate Image Path
     */
    ImageUtilsApi.prototype.validateImagePathApiImageUtilsApiImageUtilsApiImageUtilsValidatePathPostRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['imageValidationRequest'] == null) {
                            throw new runtime.RequiredError('imageValidationRequest', 'Required parameter "imageValidationRequest" was null or undefined when calling validateImagePathApiImageUtilsApiImageUtilsApiImageUtilsValidatePathPost().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/validate-path";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ImageValidationRequestToJSON)(requestParameters['imageValidationRequest']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ValidationResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Validate an image file path.
     * Validate Image Path
     */
    ImageUtilsApi.prototype.validateImagePathApiImageUtilsApiImageUtilsApiImageUtilsValidatePathPost = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.validateImagePathApiImageUtilsApiImageUtilsApiImageUtilsValidatePathPostRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Validate an image file path.
     * Validate Image Path
     */
    ImageUtilsApi.prototype.validateImagePathApiImageUtilsApiImageUtilsApiImageUtilsValidatePathPost_17Raw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['imageValidationRequest'] == null) {
                            throw new runtime.RequiredError('imageValidationRequest', 'Required parameter "imageValidationRequest" was null or undefined when calling validateImagePathApiImageUtilsApiImageUtilsApiImageUtilsValidatePathPost_17().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/validate-path";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ImageValidationRequestToJSON)(requestParameters['imageValidationRequest']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ValidationResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Validate an image file path.
     * Validate Image Path
     */
    ImageUtilsApi.prototype.validateImagePathApiImageUtilsApiImageUtilsApiImageUtilsValidatePathPost_17 = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.validateImagePathApiImageUtilsApiImageUtilsApiImageUtilsValidatePathPost_17Raw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Validate an image file path.
     * Validate Image Path
     */
    ImageUtilsApi.prototype.validateImagePathApiImageUtilsApiImageUtilsApiImageUtilsValidatePathPost_18Raw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['imageValidationRequest'] == null) {
                            throw new runtime.RequiredError('imageValidationRequest', 'Required parameter "imageValidationRequest" was null or undefined when calling validateImagePathApiImageUtilsApiImageUtilsApiImageUtilsValidatePathPost_18().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/api/image-utils/api/image-utils/api/image-utils/validate-path";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ImageValidationRequestToJSON)(requestParameters['imageValidationRequest']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ValidationResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Validate an image file path.
     * Validate Image Path
     */
    ImageUtilsApi.prototype.validateImagePathApiImageUtilsApiImageUtilsApiImageUtilsValidatePathPost_18 = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.validateImagePathApiImageUtilsApiImageUtilsApiImageUtilsValidatePathPost_18Raw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return ImageUtilsApi;
}(runtime.BaseAPI));
exports.ImageUtilsApi = ImageUtilsApi;
