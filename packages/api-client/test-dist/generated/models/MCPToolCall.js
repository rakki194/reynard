"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfMCPToolCall = instanceOfMCPToolCall;
exports.MCPToolCallFromJSON = MCPToolCallFromJSON;
exports.MCPToolCallFromJSONTyped = MCPToolCallFromJSONTyped;
exports.MCPToolCallToJSON = MCPToolCallToJSON;
exports.MCPToolCallToJSONTyped = MCPToolCallToJSONTyped;
/**
 * Check if a given object implements the MCPToolCall interface.
 */
function instanceOfMCPToolCall(value) {
  if (!("method" in value) || value["method"] === undefined) return false;
  return true;
}
function MCPToolCallFromJSON(json) {
  return MCPToolCallFromJSONTyped(json, false);
}
function MCPToolCallFromJSONTyped(json, ignoreDiscriminator) {
  if (json == null) {
    return json;
  }
  return {
    method: json["method"],
    params: json["params"] == null ? undefined : json["params"],
  };
}
function MCPToolCallToJSON(json) {
  return MCPToolCallToJSONTyped(json, false);
}
function MCPToolCallToJSONTyped(value, ignoreDiscriminator) {
  if (ignoreDiscriminator === void 0) {
    ignoreDiscriminator = false;
  }
  if (value == null) {
    return value;
  }
  return {
    method: value["method"],
    params: value["params"],
  };
}
