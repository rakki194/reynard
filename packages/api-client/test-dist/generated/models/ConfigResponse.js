"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfConfigResponse = instanceOfConfigResponse;
exports.ConfigResponseFromJSON = ConfigResponseFromJSON;
exports.ConfigResponseFromJSONTyped = ConfigResponseFromJSONTyped;
exports.ConfigResponseToJSON = ConfigResponseToJSON;
exports.ConfigResponseToJSONTyped = ConfigResponseToJSONTyped;
/**
 * Check if a given object implements the ConfigResponse interface.
 */
function instanceOfConfigResponse(value) {
    if (!('enablePerformanceMonitoring' in value) || value['enablePerformanceMonitoring'] === undefined)
        return false;
    if (!('autoCleanup' in value) || value['autoCleanup'] === undefined)
        return false;
    if (!('defaultValidationLevel' in value) || value['defaultValidationLevel'] === undefined)
        return false;
    if (!('maxConcurrentLoads' in value) || value['maxConcurrentLoads'] === undefined)
        return false;
    if (!('memoryThreshold' in value) || value['memoryThreshold'] === undefined)
        return false;
    return true;
}
function ConfigResponseFromJSON(json) {
    return ConfigResponseFromJSONTyped(json, false);
}
function ConfigResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'enablePerformanceMonitoring': json['enable_performance_monitoring'],
        'autoCleanup': json['auto_cleanup'],
        'defaultValidationLevel': json['default_validation_level'],
        'maxConcurrentLoads': json['max_concurrent_loads'],
        'memoryThreshold': json['memory_threshold'],
    };
}
function ConfigResponseToJSON(json) {
    return ConfigResponseToJSONTyped(json, false);
}
function ConfigResponseToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'enable_performance_monitoring': value['enablePerformanceMonitoring'],
        'auto_cleanup': value['autoCleanup'],
        'default_validation_level': value['defaultValidationLevel'],
        'max_concurrent_loads': value['maxConcurrentLoads'],
        'memory_threshold': value['memoryThreshold'],
    };
}
