"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfNLWebTool = instanceOfNLWebTool;
exports.NLWebToolFromJSON = NLWebToolFromJSON;
exports.NLWebToolFromJSONTyped = NLWebToolFromJSONTyped;
exports.NLWebToolToJSON = NLWebToolToJSON;
exports.NLWebToolToJSONTyped = NLWebToolToJSONTyped;
var NLWebToolParameter_1 = require("./NLWebToolParameter");
/**
 * Check if a given object implements the NLWebTool interface.
 */
function instanceOfNLWebTool(value) {
  if (!("name" in value) || value["name"] === undefined) return false;
  if (!("description" in value) || value["description"] === undefined) return false;
  if (!("category" in value) || value["category"] === undefined) return false;
  if (!("path" in value) || value["path"] === undefined) return false;
  return true;
}
function NLWebToolFromJSON(json) {
  return NLWebToolFromJSONTyped(json, false);
}
function NLWebToolFromJSONTyped(json, ignoreDiscriminator) {
  if (json == null) {
    return json;
  }
  return {
    name: json["name"],
    description: json["description"],
    category: json["category"],
    tags: json["tags"] == null ? undefined : json["tags"],
    path: json["path"],
    method: json["method"] == null ? undefined : json["method"],
    parameters:
      json["parameters"] == null ? undefined : json["parameters"].map(NLWebToolParameter_1.NLWebToolParameterFromJSON),
    examples: json["examples"] == null ? undefined : json["examples"],
    enabled: json["enabled"] == null ? undefined : json["enabled"],
    priority: json["priority"] == null ? undefined : json["priority"],
    timeout: json["timeout"] == null ? undefined : json["timeout"],
  };
}
function NLWebToolToJSON(json) {
  return NLWebToolToJSONTyped(json, false);
}
function NLWebToolToJSONTyped(value, ignoreDiscriminator) {
  if (ignoreDiscriminator === void 0) {
    ignoreDiscriminator = false;
  }
  if (value == null) {
    return value;
  }
  return {
    name: value["name"],
    description: value["description"],
    category: value["category"],
    tags: value["tags"],
    path: value["path"],
    method: value["method"],
    parameters:
      value["parameters"] == null ? undefined : value["parameters"].map(NLWebToolParameter_1.NLWebToolParameterToJSON),
    examples: value["examples"],
    enabled: value["enabled"],
    priority: value["priority"],
    timeout: value["timeout"],
  };
}
