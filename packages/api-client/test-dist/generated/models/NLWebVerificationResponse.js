"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfNLWebVerificationResponse = instanceOfNLWebVerificationResponse;
exports.NLWebVerificationResponseFromJSON = NLWebVerificationResponseFromJSON;
exports.NLWebVerificationResponseFromJSONTyped = NLWebVerificationResponseFromJSONTyped;
exports.NLWebVerificationResponseToJSON = NLWebVerificationResponseToJSON;
exports.NLWebVerificationResponseToJSONTyped = NLWebVerificationResponseToJSONTyped;
var NLWebVerificationCheck_1 = require("./NLWebVerificationCheck");
/**
 * Check if a given object implements the NLWebVerificationResponse interface.
 */
function instanceOfNLWebVerificationResponse(value) {
  if (!("serviceAvailable" in value) || value["serviceAvailable"] === undefined) return false;
  if (!("configLoaded" in value) || value["configLoaded"] === undefined) return false;
  if (!("overallStatus" in value) || value["overallStatus"] === undefined) return false;
  return true;
}
function NLWebVerificationResponseFromJSON(json) {
  return NLWebVerificationResponseFromJSONTyped(json, false);
}
function NLWebVerificationResponseFromJSONTyped(json, ignoreDiscriminator) {
  if (json == null) {
    return json;
  }
  return {
    serviceAvailable: json["service_available"],
    configLoaded: json["config_loaded"],
    checks:
      json["checks"] == null ? undefined : json["checks"].map(NLWebVerificationCheck_1.NLWebVerificationCheckFromJSON),
    overallStatus: json["overall_status"],
  };
}
function NLWebVerificationResponseToJSON(json) {
  return NLWebVerificationResponseToJSONTyped(json, false);
}
function NLWebVerificationResponseToJSONTyped(value, ignoreDiscriminator) {
  if (ignoreDiscriminator === void 0) {
    ignoreDiscriminator = false;
  }
  if (value == null) {
    return value;
  }
  return {
    service_available: value["serviceAvailable"],
    config_loaded: value["configLoaded"],
    checks:
      value["checks"] == null ? undefined : value["checks"].map(NLWebVerificationCheck_1.NLWebVerificationCheckToJSON),
    overall_status: value["overallStatus"],
  };
}
