"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __assign =
  (this && this.__assign) ||
  function () {
    __assign =
      Object.assign ||
      function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
    return __assign.apply(this, arguments);
  };
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfSecureChatRequest = instanceOfSecureChatRequest;
exports.SecureChatRequestFromJSON = SecureChatRequestFromJSON;
exports.SecureChatRequestFromJSONTyped = SecureChatRequestFromJSONTyped;
exports.SecureChatRequestToJSON = SecureChatRequestToJSON;
exports.SecureChatRequestToJSONTyped = SecureChatRequestToJSONTyped;
var MaxTokens_1 = require("./MaxTokens");
var Model_1 = require("./Model");
var SystemPrompt_1 = require("./SystemPrompt");
/**
 * Check if a given object implements the SecureChatRequest interface.
 */
function instanceOfSecureChatRequest(value) {
  if (!("message" in value) || value["message"] === undefined) return false;
  return true;
}
function SecureChatRequestFromJSON(json) {
  return SecureChatRequestFromJSONTyped(json, false);
}
function SecureChatRequestFromJSONTyped(json, ignoreDiscriminator) {
  if (json == null) {
    return json;
  }
  return __assign(__assign({}, json), {
    message: json["message"],
    model: json["model"] == null ? undefined : (0, Model_1.ModelFromJSON)(json["model"]),
    systemPrompt:
      json["system_prompt"] == null ? undefined : (0, SystemPrompt_1.SystemPromptFromJSON)(json["system_prompt"]),
    temperature: json["temperature"] == null ? undefined : json["temperature"],
    maxTokens: json["max_tokens"] == null ? undefined : (0, MaxTokens_1.MaxTokensFromJSON)(json["max_tokens"]),
  });
}
function SecureChatRequestToJSON(json) {
  return SecureChatRequestToJSONTyped(json, false);
}
function SecureChatRequestToJSONTyped(value, ignoreDiscriminator) {
  if (ignoreDiscriminator === void 0) {
    ignoreDiscriminator = false;
  }
  if (value == null) {
    return value;
  }
  return __assign(__assign({}, value), {
    message: value["message"],
    model: (0, Model_1.ModelToJSON)(value["model"]),
    system_prompt: (0, SystemPrompt_1.SystemPromptToJSON)(value["systemPrompt"]),
    temperature: value["temperature"],
    max_tokens: (0, MaxTokens_1.MaxTokensToJSON)(value["maxTokens"]),
  });
}
