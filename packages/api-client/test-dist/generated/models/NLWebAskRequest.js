"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfNLWebAskRequest = instanceOfNLWebAskRequest;
exports.NLWebAskRequestFromJSON = NLWebAskRequestFromJSON;
exports.NLWebAskRequestFromJSONTyped = NLWebAskRequestFromJSONTyped;
exports.NLWebAskRequestToJSON = NLWebAskRequestToJSON;
exports.NLWebAskRequestToJSONTyped = NLWebAskRequestToJSONTyped;
var NLWebContext_1 = require("./NLWebContext");
/**
 * Check if a given object implements the NLWebAskRequest interface.
 */
function instanceOfNLWebAskRequest(value) {
  if (!("query" in value) || value["query"] === undefined) return false;
  return true;
}
function NLWebAskRequestFromJSON(json) {
  return NLWebAskRequestFromJSONTyped(json, false);
}
function NLWebAskRequestFromJSONTyped(json, ignoreDiscriminator) {
  if (json == null) {
    return json;
  }
  return {
    query: json["query"],
    context: json["context"] == null ? undefined : (0, NLWebContext_1.NLWebContextFromJSON)(json["context"]),
    stream: json["stream"] == null ? undefined : json["stream"],
    maxTokens: json["max_tokens"] == null ? undefined : json["max_tokens"],
    temperature: json["temperature"] == null ? undefined : json["temperature"],
  };
}
function NLWebAskRequestToJSON(json) {
  return NLWebAskRequestToJSONTyped(json, false);
}
function NLWebAskRequestToJSONTyped(value, ignoreDiscriminator) {
  if (ignoreDiscriminator === void 0) {
    ignoreDiscriminator = false;
  }
  if (value == null) {
    return value;
  }
  return {
    query: value["query"],
    context: (0, NLWebContext_1.NLWebContextToJSON)(value["context"]),
    stream: value["stream"],
    max_tokens: value["maxTokens"],
    temperature: value["temperature"],
  };
}
