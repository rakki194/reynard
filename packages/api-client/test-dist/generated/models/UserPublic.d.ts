/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { UserRole } from './UserRole';
/**
 * Public User model, containing only non-sensitive information.
 *
 * Used for API responses where sensitive data like password_hash should not be exposed.
 * @export
 * @interface UserPublic
 */
export interface UserPublic {
    /**
     *
     * @type {string}
     * @memberof UserPublic
     */
    id?: string | null;
    /**
     *
     * @type {string}
     * @memberof UserPublic
     */
    username: string;
    /**
     *
     * @type {UserRole}
     * @memberof UserPublic
     */
    role: UserRole;
    /**
     *
     * @type {string}
     * @memberof UserPublic
     */
    email?: string | null;
    /**
     *
     * @type {string}
     * @memberof UserPublic
     */
    profilePictureUrl?: string | null;
    /**
     *
     * @type {number}
     * @memberof UserPublic
     */
    yapcoinBalance?: number | null;
    /**
     *
     * @type {boolean}
     * @memberof UserPublic
     */
    isActive: boolean;
    /**
     *
     * @type {Date}
     * @memberof UserPublic
     */
    createdAt?: Date | null;
    /**
     *
     * @type {Date}
     * @memberof UserPublic
     */
    updatedAt?: Date | null;
    /**
     *
     * @type {object}
     * @memberof UserPublic
     */
    metadata?: object;
}
/**
 * Check if a given object implements the UserPublic interface.
 */
export declare function instanceOfUserPublic(value: object): value is UserPublic;
export declare function UserPublicFromJSON(json: any): UserPublic;
export declare function UserPublicFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPublic;
export declare function UserPublicToJSON(json: any): UserPublic;
export declare function UserPublicToJSONTyped(value?: UserPublic | null, ignoreDiscriminator?: boolean): any;
