"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfMCPClientResponse = instanceOfMCPClientResponse;
exports.MCPClientResponseFromJSON = MCPClientResponseFromJSON;
exports.MCPClientResponseFromJSONTyped = MCPClientResponseFromJSONTyped;
exports.MCPClientResponseToJSON = MCPClientResponseToJSON;
exports.MCPClientResponseToJSONTyped = MCPClientResponseToJSONTyped;
/**
 * Check if a given object implements the MCPClientResponse interface.
 */
function instanceOfMCPClientResponse(value) {
    if (!('clientId' in value) || value['clientId'] === undefined)
        return false;
    if (!('clientType' in value) || value['clientType'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('permissions' in value) || value['permissions'] === undefined)
        return false;
    if (!('isActive' in value) || value['isActive'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    return true;
}
function MCPClientResponseFromJSON(json) {
    return MCPClientResponseFromJSONTyped(json, false);
}
function MCPClientResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'clientId': json['client_id'],
        'clientType': json['client_type'],
        'name': json['name'],
        'permissions': json['permissions'],
        'isActive': json['is_active'],
        'createdAt': json['created_at'],
        'lastUsed': json['last_used'] == null ? undefined : json['last_used'],
    };
}
function MCPClientResponseToJSON(json) {
    return MCPClientResponseToJSONTyped(json, false);
}
function MCPClientResponseToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'client_id': value['clientId'],
        'client_type': value['clientType'],
        'name': value['name'],
        'permissions': value['permissions'],
        'is_active': value['isActive'],
        'created_at': value['createdAt'],
        'last_used': value['lastUsed'],
    };
}
