/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Agent email configuration model.
 * @export
 * @interface AgentEmailConfig
 */
export interface AgentEmailConfig {
    /**
     * Agent ID
     * @type {string}
     * @memberof AgentEmailConfig
     */
    agentId: string;
    /**
     * Agent name
     * @type {string}
     * @memberof AgentEmailConfig
     */
    agentName: string;
    /**
     * Agent email address
     * @type {string}
     * @memberof AgentEmailConfig
     */
    agentEmail: string;
    /**
     * Enable auto-reply
     * @type {boolean}
     * @memberof AgentEmailConfig
     */
    autoReplyEnabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AgentEmailConfig
     */
    autoReplyTemplate?: string | null;
    /**
     * Notification preferences
     * @type {{ [key: string]: boolean; }}
     * @memberof AgentEmailConfig
     */
    notificationPreferences?: { [key: string]: boolean; };
    /**
     * Creation timestamp
     * @type {Date}
     * @memberof AgentEmailConfig
     */
    createdAt?: Date;
    /**
     * Last update timestamp
     * @type {Date}
     * @memberof AgentEmailConfig
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the AgentEmailConfig interface.
 */
export function instanceOfAgentEmailConfig(value: object): value is AgentEmailConfig {
    if (!('agentId' in value) || value['agentId'] === undefined) return false;
    if (!('agentName' in value) || value['agentName'] === undefined) return false;
    if (!('agentEmail' in value) || value['agentEmail'] === undefined) return false;
    return true;
}

export function AgentEmailConfigFromJSON(json: any): AgentEmailConfig {
    return AgentEmailConfigFromJSONTyped(json, false);
}

export function AgentEmailConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentEmailConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'agentId': json['agent_id'],
        'agentName': json['agent_name'],
        'agentEmail': json['agent_email'],
        'autoReplyEnabled': json['auto_reply_enabled'] == null ? undefined : json['auto_reply_enabled'],
        'autoReplyTemplate': json['auto_reply_template'] == null ? undefined : json['auto_reply_template'],
        'notificationPreferences': json['notification_preferences'] == null ? undefined : json['notification_preferences'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function AgentEmailConfigToJSON(json: any): AgentEmailConfig {
    return AgentEmailConfigToJSONTyped(json, false);
}

export function AgentEmailConfigToJSONTyped(value?: AgentEmailConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'agent_id': value['agentId'],
        'agent_name': value['agentName'],
        'agent_email': value['agentEmail'],
        'auto_reply_enabled': value['autoReplyEnabled'],
        'auto_reply_template': value['autoReplyTemplate'],
        'notification_preferences': value['notificationPreferences'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

