/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NLWebVerificationCheck } from './NLWebVerificationCheck';
import {
    NLWebVerificationCheckFromJSON,
    NLWebVerificationCheckFromJSONTyped,
    NLWebVerificationCheckToJSON,
    NLWebVerificationCheckToJSONTyped,
} from './NLWebVerificationCheck';

/**
 * Verification checklist response.
 * @export
 * @interface NLWebVerificationResponse
 */
export interface NLWebVerificationResponse {
    /**
     * Whether NLWeb service is available
     * @type {boolean}
     * @memberof NLWebVerificationResponse
     */
    serviceAvailable: boolean;
    /**
     * Whether configuration is loaded
     * @type {boolean}
     * @memberof NLWebVerificationResponse
     */
    configLoaded: boolean;
    /**
     * List of verification checks
     * @type {Array<NLWebVerificationCheck>}
     * @memberof NLWebVerificationResponse
     */
    checks?: Array<NLWebVerificationCheck>;
    /**
     * Overall verification status
     * @type {string}
     * @memberof NLWebVerificationResponse
     */
    overallStatus: string;
}

/**
 * Check if a given object implements the NLWebVerificationResponse interface.
 */
export function instanceOfNLWebVerificationResponse(value: object): value is NLWebVerificationResponse {
    if (!('serviceAvailable' in value) || value['serviceAvailable'] === undefined) return false;
    if (!('configLoaded' in value) || value['configLoaded'] === undefined) return false;
    if (!('overallStatus' in value) || value['overallStatus'] === undefined) return false;
    return true;
}

export function NLWebVerificationResponseFromJSON(json: any): NLWebVerificationResponse {
    return NLWebVerificationResponseFromJSONTyped(json, false);
}

export function NLWebVerificationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): NLWebVerificationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'serviceAvailable': json['service_available'],
        'configLoaded': json['config_loaded'],
        'checks': json['checks'] == null ? undefined : ((json['checks'] as Array<any>).map(NLWebVerificationCheckFromJSON)),
        'overallStatus': json['overall_status'],
    };
}

export function NLWebVerificationResponseToJSON(json: any): NLWebVerificationResponse {
    return NLWebVerificationResponseToJSONTyped(json, false);
}

export function NLWebVerificationResponseToJSONTyped(value?: NLWebVerificationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'service_available': value['serviceAvailable'],
        'config_loaded': value['configLoaded'],
        'checks': value['checks'] == null ? undefined : ((value['checks'] as Array<any>).map(NLWebVerificationCheckToJSON)),
        'overall_status': value['overallStatus'],
    };
}

