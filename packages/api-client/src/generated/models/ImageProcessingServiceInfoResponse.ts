/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface ImageProcessingServiceInfoResponse
 */
export interface ImageProcessingServiceInfoResponse {
  /**
   *
   * @type {boolean}
   * @memberof ImageProcessingServiceInfoResponse
   */
  jxlSupported: boolean;
  /**
   *
   * @type {boolean}
   * @memberof ImageProcessingServiceInfoResponse
   */
  avifSupported: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof ImageProcessingServiceInfoResponse
   */
  supportedFormats: Array<string>;
  /**
   *
   * @type {number}
   * @memberof ImageProcessingServiceInfoResponse
   */
  totalFormats: number;
}

/**
 * Check if a given object implements the ImageProcessingServiceInfoResponse interface.
 */
export function instanceOfImageProcessingServiceInfoResponse(
  value: object,
): value is ImageProcessingServiceInfoResponse {
  if (!("jxlSupported" in value) || value["jxlSupported"] === undefined)
    return false;
  if (!("avifSupported" in value) || value["avifSupported"] === undefined)
    return false;
  if (!("supportedFormats" in value) || value["supportedFormats"] === undefined)
    return false;
  if (!("totalFormats" in value) || value["totalFormats"] === undefined)
    return false;
  return true;
}

export function ImageProcessingServiceInfoResponseFromJSON(
  json: any,
): ImageProcessingServiceInfoResponse {
  return ImageProcessingServiceInfoResponseFromJSONTyped(json, false);
}

export function ImageProcessingServiceInfoResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ImageProcessingServiceInfoResponse {
  if (json == null) {
    return json;
  }
  return {
    jxlSupported: json["jxl_supported"],
    avifSupported: json["avif_supported"],
    supportedFormats: json["supported_formats"],
    totalFormats: json["total_formats"],
  };
}

export function ImageProcessingServiceInfoResponseToJSON(
  json: any,
): ImageProcessingServiceInfoResponse {
  return ImageProcessingServiceInfoResponseToJSONTyped(json, false);
}

export function ImageProcessingServiceInfoResponseToJSONTyped(
  value?: ImageProcessingServiceInfoResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    jxl_supported: value["jxlSupported"],
    avif_supported: value["avifSupported"],
    supported_formats: value["supportedFormats"],
    total_formats: value["totalFormats"],
  };
}
