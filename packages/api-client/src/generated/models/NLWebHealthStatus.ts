/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Health status of NLWeb service.
 * @export
 * @interface NLWebHealthStatus
 */
export interface NLWebHealthStatus {
  /**
   * Overall health status (healthy, degraded, unhealthy)
   * @type {string}
   * @memberof NLWebHealthStatus
   */
  status: string;
  /**
   * Whether NLWeb is enabled
   * @type {boolean}
   * @memberof NLWebHealthStatus
   */
  enabled: boolean;
  /**
   * Connection state to external services
   * @type {string}
   * @memberof NLWebHealthStatus
   */
  connectionState: string;
  /**
   * Number of connection attempts
   * @type {number}
   * @memberof NLWebHealthStatus
   */
  connectionAttempts?: number;
  /**
   *
   * @type {Date}
   * @memberof NLWebHealthStatus
   */
  lastOkTimestamp?: Date | null;
  /**
   *
   * @type {string}
   * @memberof NLWebHealthStatus
   */
  baseUrl?: string | null;
  /**
   * Whether canary rollout is enabled
   * @type {boolean}
   * @memberof NLWebHealthStatus
   */
  canaryEnabled?: boolean;
  /**
   * Canary rollout percentage
   * @type {number}
   * @memberof NLWebHealthStatus
   */
  canaryPercentage?: number;
  /**
   * Whether emergency rollback is enabled
   * @type {boolean}
   * @memberof NLWebHealthStatus
   */
  rollbackEnabled?: boolean;
  /**
   * Whether performance monitoring is enabled
   * @type {boolean}
   * @memberof NLWebHealthStatus
   */
  performanceMonitoring?: boolean;
}

/**
 * Check if a given object implements the NLWebHealthStatus interface.
 */
export function instanceOfNLWebHealthStatus(
  value: object,
): value is NLWebHealthStatus {
  if (!("status" in value) || value["status"] === undefined) return false;
  if (!("enabled" in value) || value["enabled"] === undefined) return false;
  if (!("connectionState" in value) || value["connectionState"] === undefined)
    return false;
  return true;
}

export function NLWebHealthStatusFromJSON(json: any): NLWebHealthStatus {
  return NLWebHealthStatusFromJSONTyped(json, false);
}

export function NLWebHealthStatusFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): NLWebHealthStatus {
  if (json == null) {
    return json;
  }
  return {
    status: json["status"],
    enabled: json["enabled"],
    connectionState: json["connection_state"],
    connectionAttempts:
      json["connection_attempts"] == null
        ? undefined
        : json["connection_attempts"],
    lastOkTimestamp:
      json["last_ok_timestamp"] == null
        ? undefined
        : new Date(json["last_ok_timestamp"]),
    baseUrl: json["base_url"] == null ? undefined : json["base_url"],
    canaryEnabled:
      json["canary_enabled"] == null ? undefined : json["canary_enabled"],
    canaryPercentage:
      json["canary_percentage"] == null ? undefined : json["canary_percentage"],
    rollbackEnabled:
      json["rollback_enabled"] == null ? undefined : json["rollback_enabled"],
    performanceMonitoring:
      json["performance_monitoring"] == null
        ? undefined
        : json["performance_monitoring"],
  };
}

export function NLWebHealthStatusToJSON(json: any): NLWebHealthStatus {
  return NLWebHealthStatusToJSONTyped(json, false);
}

export function NLWebHealthStatusToJSONTyped(
  value?: NLWebHealthStatus | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    status: value["status"],
    enabled: value["enabled"],
    connection_state: value["connectionState"],
    connection_attempts: value["connectionAttempts"],
    last_ok_timestamp:
      value["lastOkTimestamp"] === null
        ? null
        : (value["lastOkTimestamp"] as any)?.toISOString(),
    base_url: value["baseUrl"],
    canary_enabled: value["canaryEnabled"],
    canary_percentage: value["canaryPercentage"],
    rollback_enabled: value["rollbackEnabled"],
    performance_monitoring: value["performanceMonitoring"],
  };
}
