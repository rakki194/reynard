/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the TaskInfoResponse interface.
 */
export function instanceOfTaskInfoResponse(value) {
    if (!("taskId" in value) || value["taskId"] === undefined)
        return false;
    if (!("functionName" in value) || value["functionName"] === undefined)
        return false;
    if (!("startTime" in value) || value["startTime"] === undefined)
        return false;
    if (!("timeout" in value) || value["timeout"] === undefined)
        return false;
    if (!("retryCount" in value) || value["retryCount"] === undefined)
        return false;
    if (!("maxRetries" in value) || value["maxRetries"] === undefined)
        return false;
    return true;
}
export function TaskInfoResponseFromJSON(json) {
    return TaskInfoResponseFromJSONTyped(json, false);
}
export function TaskInfoResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        taskId: json["task_id"],
        functionName: json["function_name"],
        startTime: json["start_time"],
        timeout: json["timeout"],
        retryCount: json["retry_count"],
        maxRetries: json["max_retries"],
    };
}
export function TaskInfoResponseToJSON(json) {
    return TaskInfoResponseToJSONTyped(json, false);
}
export function TaskInfoResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        task_id: value["taskId"],
        function_name: value["functionName"],
        start_time: value["startTime"],
        timeout: value["timeout"],
        retry_count: value["retryCount"],
        max_retries: value["maxRetries"],
    };
}
