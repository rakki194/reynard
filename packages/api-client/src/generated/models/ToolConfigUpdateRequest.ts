/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Request model for updating tool configuration.
 * @export
 * @interface ToolConfigUpdateRequest
 */
export interface ToolConfigUpdateRequest {
    /**
     * Name of the tool to update
     * @type {string}
     * @memberof ToolConfigUpdateRequest
     */
    toolName: string;
    /**
     * 
     * @type {boolean}
     * @memberof ToolConfigUpdateRequest
     */
    enabled?: boolean | null;
    /**
     * 
     * @type {object}
     * @memberof ToolConfigUpdateRequest
     */
    config?: object | null;
}

/**
 * Check if a given object implements the ToolConfigUpdateRequest interface.
 */
export function instanceOfToolConfigUpdateRequest(value: object): value is ToolConfigUpdateRequest {
    if (!('toolName' in value) || value['toolName'] === undefined) return false;
    return true;
}

export function ToolConfigUpdateRequestFromJSON(json: any): ToolConfigUpdateRequest {
    return ToolConfigUpdateRequestFromJSONTyped(json, false);
}

export function ToolConfigUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolConfigUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'toolName': json['tool_name'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'config': json['config'] == null ? undefined : json['config'],
    };
}

export function ToolConfigUpdateRequestToJSON(json: any): ToolConfigUpdateRequest {
    return ToolConfigUpdateRequestToJSONTyped(json, false);
}

export function ToolConfigUpdateRequestToJSONTyped(value?: ToolConfigUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tool_name': value['toolName'],
        'enabled': value['enabled'],
        'config': value['config'],
    };
}

