/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Response model for summarization statistics.
 * @export
 * @interface SummarizationStatsResponse
 */
export interface SummarizationStatsResponse {
  /**
   * Total number of requests processed
   * @type {number}
   * @memberof SummarizationStatsResponse
   */
  totalRequests: number;
  /**
   * Number of cache hits
   * @type {number}
   * @memberof SummarizationStatsResponse
   */
  cacheHits: number;
  /**
   * Number of cache misses
   * @type {number}
   * @memberof SummarizationStatsResponse
   */
  cacheMisses: number;
  /**
   * Cache hit rate
   * @type {number}
   * @memberof SummarizationStatsResponse
   */
  cacheHitRate: number;
  /**
   * Average processing time
   * @type {number}
   * @memberof SummarizationStatsResponse
   */
  averageProcessingTime: number;
  /**
   * Total processing time
   * @type {number}
   * @memberof SummarizationStatsResponse
   */
  totalProcessingTime: number;
  /**
   * Available summarizers
   * @type {Array<string>}
   * @memberof SummarizationStatsResponse
   */
  availableSummarizers: Array<string>;
  /**
   * Supported content types and their summarizers
   * @type {{ [key: string]: Array<string>; }}
   * @memberof SummarizationStatsResponse
   */
  supportedContentTypes: { [key: string]: Array<string> };
}

/**
 * Check if a given object implements the SummarizationStatsResponse interface.
 */
export function instanceOfSummarizationStatsResponse(
  value: object,
): value is SummarizationStatsResponse {
  if (!("totalRequests" in value) || value["totalRequests"] === undefined)
    return false;
  if (!("cacheHits" in value) || value["cacheHits"] === undefined) return false;
  if (!("cacheMisses" in value) || value["cacheMisses"] === undefined)
    return false;
  if (!("cacheHitRate" in value) || value["cacheHitRate"] === undefined)
    return false;
  if (
    !("averageProcessingTime" in value) ||
    value["averageProcessingTime"] === undefined
  )
    return false;
  if (
    !("totalProcessingTime" in value) ||
    value["totalProcessingTime"] === undefined
  )
    return false;
  if (
    !("availableSummarizers" in value) ||
    value["availableSummarizers"] === undefined
  )
    return false;
  if (
    !("supportedContentTypes" in value) ||
    value["supportedContentTypes"] === undefined
  )
    return false;
  return true;
}

export function SummarizationStatsResponseFromJSON(
  json: any,
): SummarizationStatsResponse {
  return SummarizationStatsResponseFromJSONTyped(json, false);
}

export function SummarizationStatsResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SummarizationStatsResponse {
  if (json == null) {
    return json;
  }
  return {
    totalRequests: json["total_requests"],
    cacheHits: json["cache_hits"],
    cacheMisses: json["cache_misses"],
    cacheHitRate: json["cache_hit_rate"],
    averageProcessingTime: json["average_processing_time"],
    totalProcessingTime: json["total_processing_time"],
    availableSummarizers: json["available_summarizers"],
    supportedContentTypes: json["supported_content_types"],
  };
}

export function SummarizationStatsResponseToJSON(
  json: any,
): SummarizationStatsResponse {
  return SummarizationStatsResponseToJSONTyped(json, false);
}

export function SummarizationStatsResponseToJSONTyped(
  value?: SummarizationStatsResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    total_requests: value["totalRequests"],
    cache_hits: value["cacheHits"],
    cache_misses: value["cacheMisses"],
    cache_hit_rate: value["cacheHitRate"],
    average_processing_time: value["averageProcessingTime"],
    total_processing_time: value["totalProcessingTime"],
    available_summarizers: value["availableSummarizers"],
    supported_content_types: value["supportedContentTypes"],
  };
}
