/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Request model for single caption generation.
 * @export
 * @interface CaptionRequest
 */
export interface CaptionRequest {
  /**
   * Path to the image file
   * @type {string}
   * @memberof CaptionRequest
   */
  imagePath: string;
  /**
   * Name of the caption generator
   * @type {string}
   * @memberof CaptionRequest
   */
  generatorName: string;
  /**
   *
   * @type {object}
   * @memberof CaptionRequest
   */
  config?: object | null;
  /**
   * Force regeneration even if caption exists
   * @type {boolean}
   * @memberof CaptionRequest
   */
  force?: boolean;
  /**
   * Apply post-processing to caption
   * @type {boolean}
   * @memberof CaptionRequest
   */
  postProcess?: boolean;
}

/**
 * Check if a given object implements the CaptionRequest interface.
 */
export function instanceOfCaptionRequest(value: object): value is CaptionRequest {
  if (!("imagePath" in value) || value["imagePath"] === undefined) return false;
  if (!("generatorName" in value) || value["generatorName"] === undefined) return false;
  return true;
}

export function CaptionRequestFromJSON(json: any): CaptionRequest {
  return CaptionRequestFromJSONTyped(json, false);
}

export function CaptionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CaptionRequest {
  if (json == null) {
    return json;
  }
  return {
    imagePath: json["image_path"],
    generatorName: json["generator_name"],
    config: json["config"] == null ? undefined : json["config"],
    force: json["force"] == null ? undefined : json["force"],
    postProcess: json["post_process"] == null ? undefined : json["post_process"],
  };
}

export function CaptionRequestToJSON(json: any): CaptionRequest {
  return CaptionRequestToJSONTyped(json, false);
}

export function CaptionRequestToJSONTyped(value?: CaptionRequest | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    image_path: value["imagePath"],
    generator_name: value["generatorName"],
    config: value["config"],
    force: value["force"],
    post_process: value["postProcess"],
  };
}
