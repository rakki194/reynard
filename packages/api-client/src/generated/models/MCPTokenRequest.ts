/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Request model for MCP token generation.
 * @export
 * @interface MCPTokenRequest
 */
export interface MCPTokenRequest {
  /**
   * MCP client identifier
   * @type {string}
   * @memberof MCPTokenRequest
   */
  clientId: string;
  /**
   * Additional permissions
   * @type {Array<string>}
   * @memberof MCPTokenRequest
   */
  additionalPermissions?: Array<string>;
}

/**
 * Check if a given object implements the MCPTokenRequest interface.
 */
export function instanceOfMCPTokenRequest(value: object): value is MCPTokenRequest {
  if (!("clientId" in value) || value["clientId"] === undefined) return false;
  return true;
}

export function MCPTokenRequestFromJSON(json: any): MCPTokenRequest {
  return MCPTokenRequestFromJSONTyped(json, false);
}

export function MCPTokenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): MCPTokenRequest {
  if (json == null) {
    return json;
  }
  return {
    clientId: json["client_id"],
    additionalPermissions: json["additional_permissions"] == null ? undefined : json["additional_permissions"],
  };
}

export function MCPTokenRequestToJSON(json: any): MCPTokenRequest {
  return MCPTokenRequestToJSONTyped(json, false);
}

export function MCPTokenRequestToJSONTyped(value?: MCPTokenRequest | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    client_id: value["clientId"],
    additional_permissions: value["additionalPermissions"],
  };
}
