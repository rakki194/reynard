/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface UserResponse
 */
export interface UserResponse {
  /**
   *
   * @type {number}
   * @memberof UserResponse
   */
  id: number;
  /**
   *
   * @type {string}
   * @memberof UserResponse
   */
  username: string;
  /**
   *
   * @type {string}
   * @memberof UserResponse
   */
  email: string;
  /**
   *
   * @type {string}
   * @memberof UserResponse
   */
  fullName?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof UserResponse
   */
  isActive: boolean;
  /**
   *
   * @type {Date}
   * @memberof UserResponse
   */
  createdAt: Date;
}

/**
 * Check if a given object implements the UserResponse interface.
 */
export function instanceOfUserResponse(value: object): value is UserResponse {
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("username" in value) || value["username"] === undefined) return false;
  if (!("email" in value) || value["email"] === undefined) return false;
  if (!("isActive" in value) || value["isActive"] === undefined) return false;
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
  return true;
}

export function UserResponseFromJSON(json: any): UserResponse {
  return UserResponseFromJSONTyped(json, false);
}

export function UserResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UserResponse {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"],
    username: json["username"],
    email: json["email"],
    fullName: json["full_name"] == null ? undefined : json["full_name"],
    isActive: json["is_active"],
    createdAt: new Date(json["created_at"]),
  };
}

export function UserResponseToJSON(json: any): UserResponse {
  return UserResponseToJSONTyped(json, false);
}

export function UserResponseToJSONTyped(
  value?: UserResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    username: value["username"],
    email: value["email"],
    full_name: value["fullName"],
    is_active: value["isActive"],
    created_at: value["createdAt"].toISOString(),
  };
}
