/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { UserRole } from "./UserRole";
import { UserRoleFromJSON, UserRoleFromJSONTyped, UserRoleToJSON, UserRoleToJSONTyped } from "./UserRole";

/**
 * User model for update requests.
 *
 * Allows updating user information without exposing sensitive data.
 *
 * Attributes:
 *     username (Optional[str]): New username
 *     email (Optional[str]): New email address
 *     role (Optional[UserRole]): New role
 *     is_active (Optional[bool]): Whether the user account is active
 *     profile_picture_url (Optional[str]): New profile picture URL
 *     metadata (Optional[Dict[str, Any]]): Additional user metadata
 * @export
 * @interface UserUpdate
 */
export interface UserUpdate {
  /**
   *
   * @type {string}
   * @memberof UserUpdate
   */
  username?: string | null;
  /**
   *
   * @type {string}
   * @memberof UserUpdate
   */
  email?: string | null;
  /**
   *
   * @type {UserRole}
   * @memberof UserUpdate
   */
  role?: UserRole | null;
  /**
   *
   * @type {boolean}
   * @memberof UserUpdate
   */
  isActive?: boolean | null;
  /**
   *
   * @type {string}
   * @memberof UserUpdate
   */
  profilePictureUrl?: string | null;
  /**
   *
   * @type {object}
   * @memberof UserUpdate
   */
  metadata?: object | null;
}

/**
 * Check if a given object implements the UserUpdate interface.
 */
export function instanceOfUserUpdate(value: object): value is UserUpdate {
  return true;
}

export function UserUpdateFromJSON(json: any): UserUpdate {
  return UserUpdateFromJSONTyped(json, false);
}

export function UserUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserUpdate {
  if (json == null) {
    return json;
  }
  return {
    username: json["username"] == null ? undefined : json["username"],
    email: json["email"] == null ? undefined : json["email"],
    role: json["role"] == null ? undefined : UserRoleFromJSON(json["role"]),
    isActive: json["is_active"] == null ? undefined : json["is_active"],
    profilePictureUrl: json["profile_picture_url"] == null ? undefined : json["profile_picture_url"],
    metadata: json["metadata"] == null ? undefined : json["metadata"],
  };
}

export function UserUpdateToJSON(json: any): UserUpdate {
  return UserUpdateToJSONTyped(json, false);
}

export function UserUpdateToJSONTyped(value?: UserUpdate | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    username: value["username"],
    email: value["email"],
    role: UserRoleToJSON(value["role"]),
    is_active: value["isActive"],
    profile_picture_url: value["profilePictureUrl"],
    metadata: value["metadata"],
  };
}
