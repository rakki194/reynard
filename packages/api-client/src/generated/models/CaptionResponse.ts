/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Response model for caption generation.
 * @export
 * @interface CaptionResponse
 */
export interface CaptionResponse {
    /**
     * 
     * @type {boolean}
     * @memberof CaptionResponse
     */
    success: boolean;
    /**
     * 
     * @type {string}
     * @memberof CaptionResponse
     */
    imagePath: string;
    /**
     * 
     * @type {string}
     * @memberof CaptionResponse
     */
    generatorName: string;
    /**
     * 
     * @type {string}
     * @memberof CaptionResponse
     */
    caption?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CaptionResponse
     */
    error?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CaptionResponse
     */
    errorType?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof CaptionResponse
     */
    retryable?: boolean;
    /**
     * 
     * @type {number}
     * @memberof CaptionResponse
     */
    processingTime?: number | null;
    /**
     * 
     * @type {string}
     * @memberof CaptionResponse
     */
    captionType?: string | null;
}

/**
 * Check if a given object implements the CaptionResponse interface.
 */
export function instanceOfCaptionResponse(value: object): value is CaptionResponse {
    if (!('success' in value) || value['success'] === undefined) return false;
    if (!('imagePath' in value) || value['imagePath'] === undefined) return false;
    if (!('generatorName' in value) || value['generatorName'] === undefined) return false;
    return true;
}

export function CaptionResponseFromJSON(json: any): CaptionResponse {
    return CaptionResponseFromJSONTyped(json, false);
}

export function CaptionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CaptionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'],
        'imagePath': json['image_path'],
        'generatorName': json['generator_name'],
        'caption': json['caption'] == null ? undefined : json['caption'],
        'error': json['error'] == null ? undefined : json['error'],
        'errorType': json['error_type'] == null ? undefined : json['error_type'],
        'retryable': json['retryable'] == null ? undefined : json['retryable'],
        'processingTime': json['processing_time'] == null ? undefined : json['processing_time'],
        'captionType': json['caption_type'] == null ? undefined : json['caption_type'],
    };
}

export function CaptionResponseToJSON(json: any): CaptionResponse {
    return CaptionResponseToJSONTyped(json, false);
}

export function CaptionResponseToJSONTyped(value?: CaptionResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'image_path': value['imagePath'],
        'generator_name': value['generatorName'],
        'caption': value['caption'],
        'error': value['error'],
        'error_type': value['errorType'],
        'retryable': value['retryable'],
        'processing_time': value['processingTime'],
        'caption_type': value['captionType'],
    };
}

