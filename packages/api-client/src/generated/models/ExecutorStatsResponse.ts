/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExecutorStatsResponse
 */
export interface ExecutorStatsResponse {
    /**
     * 
     * @type {number}
     * @memberof ExecutorStatsResponse
     */
    activeTasks: number;
    /**
     * 
     * @type {number}
     * @memberof ExecutorStatsResponse
     */
    completedTasks: number;
    /**
     * 
     * @type {number}
     * @memberof ExecutorStatsResponse
     */
    failedTasks: number;
    /**
     * 
     * @type {number}
     * @memberof ExecutorStatsResponse
     */
    averageExecutionTime: number;
    /**
     * 
     * @type {number}
     * @memberof ExecutorStatsResponse
     */
    totalExecutionTime: number;
    /**
     * 
     * @type {number}
     * @memberof ExecutorStatsResponse
     */
    maxConcurrentTasks: number;
    /**
     * 
     * @type {number}
     * @memberof ExecutorStatsResponse
     */
    currentConcurrentTasks: number;
}

/**
 * Check if a given object implements the ExecutorStatsResponse interface.
 */
export function instanceOfExecutorStatsResponse(value: object): value is ExecutorStatsResponse {
    if (!('activeTasks' in value) || value['activeTasks'] === undefined) return false;
    if (!('completedTasks' in value) || value['completedTasks'] === undefined) return false;
    if (!('failedTasks' in value) || value['failedTasks'] === undefined) return false;
    if (!('averageExecutionTime' in value) || value['averageExecutionTime'] === undefined) return false;
    if (!('totalExecutionTime' in value) || value['totalExecutionTime'] === undefined) return false;
    if (!('maxConcurrentTasks' in value) || value['maxConcurrentTasks'] === undefined) return false;
    if (!('currentConcurrentTasks' in value) || value['currentConcurrentTasks'] === undefined) return false;
    return true;
}

export function ExecutorStatsResponseFromJSON(json: any): ExecutorStatsResponse {
    return ExecutorStatsResponseFromJSONTyped(json, false);
}

export function ExecutorStatsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExecutorStatsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'activeTasks': json['active_tasks'],
        'completedTasks': json['completed_tasks'],
        'failedTasks': json['failed_tasks'],
        'averageExecutionTime': json['average_execution_time'],
        'totalExecutionTime': json['total_execution_time'],
        'maxConcurrentTasks': json['max_concurrent_tasks'],
        'currentConcurrentTasks': json['current_concurrent_tasks'],
    };
}

export function ExecutorStatsResponseToJSON(json: any): ExecutorStatsResponse {
    return ExecutorStatsResponseToJSONTyped(json, false);
}

export function ExecutorStatsResponseToJSONTyped(value?: ExecutorStatsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active_tasks': value['activeTasks'],
        'completed_tasks': value['completedTasks'],
        'failed_tasks': value['failedTasks'],
        'average_execution_time': value['averageExecutionTime'],
        'total_execution_time': value['totalExecutionTime'],
        'max_concurrent_tasks': value['maxConcurrentTasks'],
        'current_concurrent_tasks': value['currentConcurrentTasks'],
    };
}

