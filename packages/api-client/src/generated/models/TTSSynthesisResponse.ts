/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Response model for TTS synthesis.
 * @export
 * @interface TTSSynthesisResponse
 */
export interface TTSSynthesisResponse {
    /**
     * Whether synthesis was successful
     * @type {boolean}
     * @memberof TTSSynthesisResponse
     */
    success: boolean;
    /**
     * 
     * @type {string}
     * @memberof TTSSynthesisResponse
     */
    audioPath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TTSSynthesisResponse
     */
    audioUrl?: string | null;
    /**
     * 
     * @type {number}
     * @memberof TTSSynthesisResponse
     */
    duration?: number | null;
    /**
     * Backend that was used
     * @type {string}
     * @memberof TTSSynthesisResponse
     */
    backendUsed: string;
    /**
     * Processing time in seconds
     * @type {number}
     * @memberof TTSSynthesisResponse
     */
    processingTime: number;
    /**
     * 
     * @type {string}
     * @memberof TTSSynthesisResponse
     */
    error?: string | null;
}

/**
 * Check if a given object implements the TTSSynthesisResponse interface.
 */
export function instanceOfTTSSynthesisResponse(value: object): value is TTSSynthesisResponse {
    if (!('success' in value) || value['success'] === undefined) return false;
    if (!('backendUsed' in value) || value['backendUsed'] === undefined) return false;
    if (!('processingTime' in value) || value['processingTime'] === undefined) return false;
    return true;
}

export function TTSSynthesisResponseFromJSON(json: any): TTSSynthesisResponse {
    return TTSSynthesisResponseFromJSONTyped(json, false);
}

export function TTSSynthesisResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TTSSynthesisResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'],
        'audioPath': json['audio_path'] == null ? undefined : json['audio_path'],
        'audioUrl': json['audio_url'] == null ? undefined : json['audio_url'],
        'duration': json['duration'] == null ? undefined : json['duration'],
        'backendUsed': json['backend_used'],
        'processingTime': json['processing_time'],
        'error': json['error'] == null ? undefined : json['error'],
    };
}

export function TTSSynthesisResponseToJSON(json: any): TTSSynthesisResponse {
    return TTSSynthesisResponseToJSONTyped(json, false);
}

export function TTSSynthesisResponseToJSONTyped(value?: TTSSynthesisResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'audio_path': value['audioPath'],
        'audio_url': value['audioUrl'],
        'duration': value['duration'],
        'backend_used': value['backendUsed'],
        'processing_time': value['processingTime'],
        'error': value['error'],
    };
}

