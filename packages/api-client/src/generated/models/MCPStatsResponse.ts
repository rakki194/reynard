/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Response model for MCP system statistics.
 * @export
 * @interface MCPStatsResponse
 */
export interface MCPStatsResponse {
    /**
     * Total number of clients
     * @type {number}
     * @memberof MCPStatsResponse
     */
    totalClients: number;
    /**
     * Number of active clients
     * @type {number}
     * @memberof MCPStatsResponse
     */
    activeClients: number;
    /**
     * Count by client type
     * @type {{ [key: string]: number; }}
     * @memberof MCPStatsResponse
     */
    clientTypes: { [key: string]: number; };
    /**
     * All available permissions
     * @type {Array<string>}
     * @memberof MCPStatsResponse
     */
    permissions: Array<string>;
}

/**
 * Check if a given object implements the MCPStatsResponse interface.
 */
export function instanceOfMCPStatsResponse(value: object): value is MCPStatsResponse {
    if (!('totalClients' in value) || value['totalClients'] === undefined) return false;
    if (!('activeClients' in value) || value['activeClients'] === undefined) return false;
    if (!('clientTypes' in value) || value['clientTypes'] === undefined) return false;
    if (!('permissions' in value) || value['permissions'] === undefined) return false;
    return true;
}

export function MCPStatsResponseFromJSON(json: any): MCPStatsResponse {
    return MCPStatsResponseFromJSONTyped(json, false);
}

export function MCPStatsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MCPStatsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'totalClients': json['total_clients'],
        'activeClients': json['active_clients'],
        'clientTypes': json['client_types'],
        'permissions': json['permissions'],
    };
}

export function MCPStatsResponseToJSON(json: any): MCPStatsResponse {
    return MCPStatsResponseToJSONTyped(json, false);
}

export function MCPStatsResponseToJSONTyped(value?: MCPStatsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total_clients': value['totalClients'],
        'active_clients': value['activeClients'],
        'client_types': value['clientTypes'],
        'permissions': value['permissions'],
    };
}

