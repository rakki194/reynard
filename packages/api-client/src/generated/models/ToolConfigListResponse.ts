/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ToolConfigResponse } from './ToolConfigResponse';
import {
    ToolConfigResponseFromJSON,
    ToolConfigResponseFromJSONTyped,
    ToolConfigResponseToJSON,
    ToolConfigResponseToJSONTyped,
} from './ToolConfigResponse';

/**
 * Response model for tool configuration list.
 * @export
 * @interface ToolConfigListResponse
 */
export interface ToolConfigListResponse {
    /**
     * All tool configurations
     * @type {{ [key: string]: ToolConfigResponse; }}
     * @memberof ToolConfigListResponse
     */
    tools: { [key: string]: ToolConfigResponse; };
    /**
     * Total number of tools
     * @type {number}
     * @memberof ToolConfigListResponse
     */
    totalTools: number;
    /**
     * Number of enabled tools
     * @type {number}
     * @memberof ToolConfigListResponse
     */
    enabledTools: number;
    /**
     * Number of disabled tools
     * @type {number}
     * @memberof ToolConfigListResponse
     */
    disabledTools: number;
}

/**
 * Check if a given object implements the ToolConfigListResponse interface.
 */
export function instanceOfToolConfigListResponse(value: object): value is ToolConfigListResponse {
    if (!('tools' in value) || value['tools'] === undefined) return false;
    if (!('totalTools' in value) || value['totalTools'] === undefined) return false;
    if (!('enabledTools' in value) || value['enabledTools'] === undefined) return false;
    if (!('disabledTools' in value) || value['disabledTools'] === undefined) return false;
    return true;
}

export function ToolConfigListResponseFromJSON(json: any): ToolConfigListResponse {
    return ToolConfigListResponseFromJSONTyped(json, false);
}

export function ToolConfigListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolConfigListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'tools': (mapValues(json['tools'], ToolConfigResponseFromJSON)),
        'totalTools': json['total_tools'],
        'enabledTools': json['enabled_tools'],
        'disabledTools': json['disabled_tools'],
    };
}

export function ToolConfigListResponseToJSON(json: any): ToolConfigListResponse {
    return ToolConfigListResponseToJSONTyped(json, false);
}

export function ToolConfigListResponseToJSONTyped(value?: ToolConfigListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tools': (mapValues(value['tools'], ToolConfigResponseToJSON)),
        'total_tools': value['totalTools'],
        'enabled_tools': value['enabledTools'],
        'disabled_tools': value['disabledTools'],
    };
}

