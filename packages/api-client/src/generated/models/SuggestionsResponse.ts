/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QuerySuggestion } from './QuerySuggestion';
import {
    QuerySuggestionFromJSON,
    QuerySuggestionFromJSONTyped,
    QuerySuggestionToJSON,
    QuerySuggestionToJSONTyped,
} from './QuerySuggestion';

/**
 * Query suggestions response model.
 * @export
 * @interface SuggestionsResponse
 */
export interface SuggestionsResponse {
    /**
     * Whether suggestions were generated
     * @type {boolean}
     * @memberof SuggestionsResponse
     */
    success: boolean;
    /**
     * Original query
     * @type {string}
     * @memberof SuggestionsResponse
     */
    query: string;
    /**
     * Query suggestions
     * @type {Array<QuerySuggestion>}
     * @memberof SuggestionsResponse
     */
    suggestions: Array<QuerySuggestion>;
    /**
     * 
     * @type {string}
     * @memberof SuggestionsResponse
     */
    error?: string | null;
}

/**
 * Check if a given object implements the SuggestionsResponse interface.
 */
export function instanceOfSuggestionsResponse(value: object): value is SuggestionsResponse {
    if (!('success' in value) || value['success'] === undefined) return false;
    if (!('query' in value) || value['query'] === undefined) return false;
    if (!('suggestions' in value) || value['suggestions'] === undefined) return false;
    return true;
}

export function SuggestionsResponseFromJSON(json: any): SuggestionsResponse {
    return SuggestionsResponseFromJSONTyped(json, false);
}

export function SuggestionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuggestionsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'],
        'query': json['query'],
        'suggestions': ((json['suggestions'] as Array<any>).map(QuerySuggestionFromJSON)),
        'error': json['error'] == null ? undefined : json['error'],
    };
}

export function SuggestionsResponseToJSON(json: any): SuggestionsResponse {
    return SuggestionsResponseToJSONTyped(json, false);
}

export function SuggestionsResponseToJSONTyped(value?: SuggestionsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'query': value['query'],
        'suggestions': ((value['suggestions'] as Array<any>).map(QuerySuggestionToJSON)),
        'error': value['error'],
    };
}

