/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the OllamaAssistantRequest interface.
 */
export function instanceOfOllamaAssistantRequest(value) {
    if (!("message" in value) || value["message"] === undefined)
        return false;
    return true;
}
export function OllamaAssistantRequestFromJSON(json) {
    return OllamaAssistantRequestFromJSONTyped(json, false);
}
export function OllamaAssistantRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        message: json["message"],
        assistantType: json["assistant_type"] == null ? undefined : json["assistant_type"],
        model: json["model"] == null ? undefined : json["model"],
        temperature: json["temperature"] == null ? undefined : json["temperature"],
        maxTokens: json["max_tokens"] == null ? undefined : json["max_tokens"],
        stream: json["stream"] == null ? undefined : json["stream"],
        context: json["context"] == null ? undefined : json["context"],
        toolsEnabled: json["tools_enabled"] == null ? undefined : json["tools_enabled"],
    };
}
export function OllamaAssistantRequestToJSON(json) {
    return OllamaAssistantRequestToJSONTyped(json, false);
}
export function OllamaAssistantRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        message: value["message"],
        assistant_type: value["assistantType"],
        model: value["model"],
        temperature: value["temperature"],
        max_tokens: value["maxTokens"],
        stream: value["stream"],
        context: value["context"],
        tools_enabled: value["toolsEnabled"],
    };
}
