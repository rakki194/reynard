/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Id } from "./Id";
import { IdFromJSON, IdFromJSONTyped, IdToJSON, IdToJSONTyped } from "./Id";

/**
 * Individual search result hit.
 * @export
 * @interface RAGQueryHit
 */
export interface RAGQueryHit {
  /**
   *
   * @type {Id}
   * @memberof RAGQueryHit
   */
  id?: Id | null;
  /**
   * Similarity score
   * @type {number}
   * @memberof RAGQueryHit
   */
  score: number;
  /**
   *
   * @type {Array<string>}
   * @memberof RAGQueryHit
   */
  highlights?: Array<string> | null;
  /**
   *
   * @type {object}
   * @memberof RAGQueryHit
   */
  extra?: object | null;
  /**
   *
   * @type {string}
   * @memberof RAGQueryHit
   */
  filePath?: string | null;
  /**
   *
   * @type {string}
   * @memberof RAGQueryHit
   */
  fileContent?: string | null;
  /**
   *
   * @type {object}
   * @memberof RAGQueryHit
   */
  fileMetadata?: object | null;
  /**
   *
   * @type {number}
   * @memberof RAGQueryHit
   */
  chunkIndex?: number | null;
  /**
   *
   * @type {string}
   * @memberof RAGQueryHit
   */
  chunkText?: string | null;
  /**
   *
   * @type {number}
   * @memberof RAGQueryHit
   */
  chunkTokens?: number | null;
  /**
   *
   * @type {object}
   * @memberof RAGQueryHit
   */
  chunkMetadata?: object | null;
  /**
   *
   * @type {string}
   * @memberof RAGQueryHit
   */
  imagePath?: string | null;
  /**
   *
   * @type {string}
   * @memberof RAGQueryHit
   */
  imageId?: string | null;
  /**
   *
   * @type {string}
   * @memberof RAGQueryHit
   */
  thumbnailPath?: string | null;
  /**
   *
   * @type {string}
   * @memberof RAGQueryHit
   */
  previewPath?: string | null;
  /**
   *
   * @type {object}
   * @memberof RAGQueryHit
   */
  imageMetadata?: object | null;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof RAGQueryHit
   */
  imageDimensions?: { [key: string]: number } | null;
  /**
   *
   * @type {number}
   * @memberof RAGQueryHit
   */
  imageSize?: number | null;
  /**
   *
   * @type {string}
   * @memberof RAGQueryHit
   */
  imageFormat?: string | null;
  /**
   *
   * @type {Array<number>}
   * @memberof RAGQueryHit
   */
  embeddingVector?: Array<number> | null;
}

/**
 * Check if a given object implements the RAGQueryHit interface.
 */
export function instanceOfRAGQueryHit(value: object): value is RAGQueryHit {
  if (!("score" in value) || value["score"] === undefined) return false;
  return true;
}

export function RAGQueryHitFromJSON(json: any): RAGQueryHit {
  return RAGQueryHitFromJSONTyped(json, false);
}

export function RAGQueryHitFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): RAGQueryHit {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : IdFromJSON(json["id"]),
    score: json["score"],
    highlights: json["highlights"] == null ? undefined : json["highlights"],
    extra: json["extra"] == null ? undefined : json["extra"],
    filePath: json["file_path"] == null ? undefined : json["file_path"],
    fileContent:
      json["file_content"] == null ? undefined : json["file_content"],
    fileMetadata:
      json["file_metadata"] == null ? undefined : json["file_metadata"],
    chunkIndex: json["chunk_index"] == null ? undefined : json["chunk_index"],
    chunkText: json["chunk_text"] == null ? undefined : json["chunk_text"],
    chunkTokens:
      json["chunk_tokens"] == null ? undefined : json["chunk_tokens"],
    chunkMetadata:
      json["chunk_metadata"] == null ? undefined : json["chunk_metadata"],
    imagePath: json["image_path"] == null ? undefined : json["image_path"],
    imageId: json["image_id"] == null ? undefined : json["image_id"],
    thumbnailPath:
      json["thumbnail_path"] == null ? undefined : json["thumbnail_path"],
    previewPath:
      json["preview_path"] == null ? undefined : json["preview_path"],
    imageMetadata:
      json["image_metadata"] == null ? undefined : json["image_metadata"],
    imageDimensions:
      json["image_dimensions"] == null ? undefined : json["image_dimensions"],
    imageSize: json["image_size"] == null ? undefined : json["image_size"],
    imageFormat:
      json["image_format"] == null ? undefined : json["image_format"],
    embeddingVector:
      json["embedding_vector"] == null ? undefined : json["embedding_vector"],
  };
}

export function RAGQueryHitToJSON(json: any): RAGQueryHit {
  return RAGQueryHitToJSONTyped(json, false);
}

export function RAGQueryHitToJSONTyped(
  value?: RAGQueryHit | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: IdToJSON(value["id"]),
    score: value["score"],
    highlights: value["highlights"],
    extra: value["extra"],
    file_path: value["filePath"],
    file_content: value["fileContent"],
    file_metadata: value["fileMetadata"],
    chunk_index: value["chunkIndex"],
    chunk_text: value["chunkText"],
    chunk_tokens: value["chunkTokens"],
    chunk_metadata: value["chunkMetadata"],
    image_path: value["imagePath"],
    image_id: value["imageId"],
    thumbnail_path: value["thumbnailPath"],
    preview_path: value["previewPath"],
    image_metadata: value["imageMetadata"],
    image_dimensions: value["imageDimensions"],
    image_size: value["imageSize"],
    image_format: value["imageFormat"],
    embedding_vector: value["embeddingVector"],
  };
}
