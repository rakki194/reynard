/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Model } from './Model';
import {
    ModelFromJSON,
    ModelFromJSONTyped,
    ModelToJSON,
    ModelToJSONTyped,
} from './Model';
import type { MaxLength } from './MaxLength';
import {
    MaxLengthFromJSON,
    MaxLengthFromJSONTyped,
    MaxLengthToJSON,
    MaxLengthToJSONTyped,
} from './MaxLength';

/**
 * Secure summarization request model.
 * @export
 * @interface SecureSummarizationRequest
 */
export interface SecureSummarizationRequest {
    [key: string]: any | any;
    /**
     * Text to summarize
     * @type {string}
     * @memberof SecureSummarizationRequest
     */
    text: string;
    /**
     * Type of content
     * @type {string}
     * @memberof SecureSummarizationRequest
     */
    contentType?: string;
    /**
     * Level of detail for summary
     * @type {string}
     * @memberof SecureSummarizationRequest
     */
    summaryLevel?: string;
    /**
     * 
     * @type {MaxLength}
     * @memberof SecureSummarizationRequest
     */
    maxLength?: MaxLength;
    /**
     * 
     * @type {Model}
     * @memberof SecureSummarizationRequest
     */
    model?: Model;
}

/**
 * Check if a given object implements the SecureSummarizationRequest interface.
 */
export function instanceOfSecureSummarizationRequest(value: object): value is SecureSummarizationRequest {
    if (!('text' in value) || value['text'] === undefined) return false;
    return true;
}

export function SecureSummarizationRequestFromJSON(json: any): SecureSummarizationRequest {
    return SecureSummarizationRequestFromJSONTyped(json, false);
}

export function SecureSummarizationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecureSummarizationRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'text': json['text'],
        'contentType': json['content_type'] == null ? undefined : json['content_type'],
        'summaryLevel': json['summary_level'] == null ? undefined : json['summary_level'],
        'maxLength': json['max_length'] == null ? undefined : MaxLengthFromJSON(json['max_length']),
        'model': json['model'] == null ? undefined : ModelFromJSON(json['model']),
    };
}

export function SecureSummarizationRequestToJSON(json: any): SecureSummarizationRequest {
    return SecureSummarizationRequestToJSONTyped(json, false);
}

export function SecureSummarizationRequestToJSONTyped(value?: SecureSummarizationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'text': value['text'],
        'content_type': value['contentType'],
        'summary_level': value['summaryLevel'],
        'max_length': MaxLengthToJSON(value['maxLength']),
        'model': ModelToJSON(value['model']),
    };
}

