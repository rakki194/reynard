/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Response model for RAG statistics.
 * @export
 * @interface RAGStatsResponse
 */
export interface RAGStatsResponse {
  /**
   * Total number of documents
   * @type {number}
   * @memberof RAGStatsResponse
   */
  totalDocuments?: number;
  /**
   * Total number of chunks
   * @type {number}
   * @memberof RAGStatsResponse
   */
  totalChunks?: number;
  /**
   * Number of chunks with embeddings
   * @type {number}
   * @memberof RAGStatsResponse
   */
  chunksWithEmbeddings?: number;
  /**
   * Embedding coverage percentage
   * @type {number}
   * @memberof RAGStatsResponse
   */
  embeddingCoverage?: number;
  /**
   * Default embedding model
   * @type {string}
   * @memberof RAGStatsResponse
   */
  defaultModel?: string;
  /**
   * Whether vector database is enabled
   * @type {boolean}
   * @memberof RAGStatsResponse
   */
  vectorDbEnabled?: boolean;
  /**
   * Cache size in bytes
   * @type {number}
   * @memberof RAGStatsResponse
   */
  cacheSize?: number;
}

/**
 * Check if a given object implements the RAGStatsResponse interface.
 */
export function instanceOfRAGStatsResponse(value: object): value is RAGStatsResponse {
  return true;
}

export function RAGStatsResponseFromJSON(json: any): RAGStatsResponse {
  return RAGStatsResponseFromJSONTyped(json, false);
}

export function RAGStatsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RAGStatsResponse {
  if (json == null) {
    return json;
  }
  return {
    totalDocuments: json["total_documents"] == null ? undefined : json["total_documents"],
    totalChunks: json["total_chunks"] == null ? undefined : json["total_chunks"],
    chunksWithEmbeddings: json["chunks_with_embeddings"] == null ? undefined : json["chunks_with_embeddings"],
    embeddingCoverage: json["embedding_coverage"] == null ? undefined : json["embedding_coverage"],
    defaultModel: json["default_model"] == null ? undefined : json["default_model"],
    vectorDbEnabled: json["vector_db_enabled"] == null ? undefined : json["vector_db_enabled"],
    cacheSize: json["cache_size"] == null ? undefined : json["cache_size"],
  };
}

export function RAGStatsResponseToJSON(json: any): RAGStatsResponse {
  return RAGStatsResponseToJSONTyped(json, false);
}

export function RAGStatsResponseToJSONTyped(
  value?: RAGStatsResponse | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    total_documents: value["totalDocuments"],
    total_chunks: value["totalChunks"],
    chunks_with_embeddings: value["chunksWithEmbeddings"],
    embedding_coverage: value["embeddingCoverage"],
    default_model: value["defaultModel"],
    vector_db_enabled: value["vectorDbEnabled"],
    cache_size: value["cacheSize"],
  };
}
