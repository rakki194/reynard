/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Response model for RAG configuration.
 * @export
 * @interface RAGConfigResponse
 */
export interface RAGConfigResponse {
  /**
   * Current configuration
   * @type {object}
   * @memberof RAGConfigResponse
   */
  config: object;
  /**
   * Whether configuration was updated
   * @type {boolean}
   * @memberof RAGConfigResponse
   */
  updated?: boolean;
}

/**
 * Check if a given object implements the RAGConfigResponse interface.
 */
export function instanceOfRAGConfigResponse(value: object): value is RAGConfigResponse {
  if (!("config" in value) || value["config"] === undefined) return false;
  return true;
}

export function RAGConfigResponseFromJSON(json: any): RAGConfigResponse {
  return RAGConfigResponseFromJSONTyped(json, false);
}

export function RAGConfigResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RAGConfigResponse {
  if (json == null) {
    return json;
  }
  return {
    config: json["config"],
    updated: json["updated"] == null ? undefined : json["updated"],
  };
}

export function RAGConfigResponseToJSON(json: any): RAGConfigResponse {
  return RAGConfigResponseToJSONTyped(json, false);
}

export function RAGConfigResponseToJSONTyped(
  value?: RAGConfigResponse | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    config: value["config"],
    updated: value["updated"],
  };
}
