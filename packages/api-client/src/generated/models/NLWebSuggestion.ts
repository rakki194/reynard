/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { NLWebTool } from "./NLWebTool";
import { NLWebToolFromJSON, NLWebToolFromJSONTyped, NLWebToolToJSON, NLWebToolToJSONTyped } from "./NLWebTool";

/**
 * Tool suggestion with confidence scoring.
 * @export
 * @interface NLWebSuggestion
 */
export interface NLWebSuggestion {
  /**
   * Tool that was suggested
   * @type {NLWebTool}
   * @memberof NLWebSuggestion
   */
  tool: NLWebTool;
  /**
   * Confidence score (0-100)
   * @type {number}
   * @memberof NLWebSuggestion
   */
  score: number;
  /**
   * Suggested parameters for the tool
   * @type {object}
   * @memberof NLWebSuggestion
   */
  parameters?: object;
  /**
   * Reasoning for why this tool was suggested
   * @type {string}
   * @memberof NLWebSuggestion
   */
  reasoning: string;
  /**
   * Parameter hints for better execution
   * @type {object}
   * @memberof NLWebSuggestion
   */
  parameterHints?: object;
}

/**
 * Check if a given object implements the NLWebSuggestion interface.
 */
export function instanceOfNLWebSuggestion(value: object): value is NLWebSuggestion {
  if (!("tool" in value) || value["tool"] === undefined) return false;
  if (!("score" in value) || value["score"] === undefined) return false;
  if (!("reasoning" in value) || value["reasoning"] === undefined) return false;
  return true;
}

export function NLWebSuggestionFromJSON(json: any): NLWebSuggestion {
  return NLWebSuggestionFromJSONTyped(json, false);
}

export function NLWebSuggestionFromJSONTyped(json: any, ignoreDiscriminator: boolean): NLWebSuggestion {
  if (json == null) {
    return json;
  }
  return {
    tool: NLWebToolFromJSON(json["tool"]),
    score: json["score"],
    parameters: json["parameters"] == null ? undefined : json["parameters"],
    reasoning: json["reasoning"],
    parameterHints: json["parameter_hints"] == null ? undefined : json["parameter_hints"],
  };
}

export function NLWebSuggestionToJSON(json: any): NLWebSuggestion {
  return NLWebSuggestionToJSONTyped(json, false);
}

export function NLWebSuggestionToJSONTyped(value?: NLWebSuggestion | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    tool: NLWebToolToJSON(value["tool"]),
    score: value["score"],
    parameters: value["parameters"],
    reasoning: value["reasoning"],
    parameter_hints: value["parameterHints"],
  };
}
