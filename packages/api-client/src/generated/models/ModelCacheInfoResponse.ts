/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModelCacheInfoResponse
 */
export interface ModelCacheInfoResponse {
    /**
     * 
     * @type {string}
     * @memberof ModelCacheInfoResponse
     */
    repoId: string;
    /**
     * 
     * @type {string}
     * @memberof ModelCacheInfoResponse
     */
    cachePath: string;
    /**
     * 
     * @type {string}
     * @memberof ModelCacheInfoResponse
     */
    snapshotPath: string;
    /**
     * 
     * @type {boolean}
     * @memberof ModelCacheInfoResponse
     */
    isCached: boolean;
    /**
     * 
     * @type {number}
     * @memberof ModelCacheInfoResponse
     */
    size?: number | null;
    /**
     * 
     * @type {string}
     * @memberof ModelCacheInfoResponse
     */
    lastModified?: string | null;
}

/**
 * Check if a given object implements the ModelCacheInfoResponse interface.
 */
export function instanceOfModelCacheInfoResponse(value: object): value is ModelCacheInfoResponse {
    if (!('repoId' in value) || value['repoId'] === undefined) return false;
    if (!('cachePath' in value) || value['cachePath'] === undefined) return false;
    if (!('snapshotPath' in value) || value['snapshotPath'] === undefined) return false;
    if (!('isCached' in value) || value['isCached'] === undefined) return false;
    return true;
}

export function ModelCacheInfoResponseFromJSON(json: any): ModelCacheInfoResponse {
    return ModelCacheInfoResponseFromJSONTyped(json, false);
}

export function ModelCacheInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelCacheInfoResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'repoId': json['repo_id'],
        'cachePath': json['cache_path'],
        'snapshotPath': json['snapshot_path'],
        'isCached': json['is_cached'],
        'size': json['size'] == null ? undefined : json['size'],
        'lastModified': json['last_modified'] == null ? undefined : json['last_modified'],
    };
}

export function ModelCacheInfoResponseToJSON(json: any): ModelCacheInfoResponse {
    return ModelCacheInfoResponseToJSONTyped(json, false);
}

export function ModelCacheInfoResponseToJSONTyped(value?: ModelCacheInfoResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'repo_id': value['repoId'],
        'cache_path': value['cachePath'],
        'snapshot_path': value['snapshotPath'],
        'is_cached': value['isCached'],
        'size': value['size'],
        'last_modified': value['lastModified'],
    };
}

