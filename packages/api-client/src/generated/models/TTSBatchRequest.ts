/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Request model for batch TTS synthesis.
 * @export
 * @interface TTSBatchRequest
 */
export interface TTSBatchRequest {
    /**
     * List of texts to synthesize
     * @type {Array<string>}
     * @memberof TTSBatchRequest
     */
    texts: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof TTSBatchRequest
     */
    backend?: string | null;
    /**
     * Voice to use for synthesis
     * @type {string}
     * @memberof TTSBatchRequest
     */
    voice?: string;
    /**
     * Speech speed multiplier
     * @type {number}
     * @memberof TTSBatchRequest
     */
    speed?: number;
    /**
     * Language code
     * @type {string}
     * @memberof TTSBatchRequest
     */
    lang?: string;
    /**
     * Convert output to OGG format
     * @type {boolean}
     * @memberof TTSBatchRequest
     */
    toOgg?: boolean;
    /**
     * Convert output to Opus format
     * @type {boolean}
     * @memberof TTSBatchRequest
     */
    toOpus?: boolean;
}

/**
 * Check if a given object implements the TTSBatchRequest interface.
 */
export function instanceOfTTSBatchRequest(value: object): value is TTSBatchRequest {
    if (!('texts' in value) || value['texts'] === undefined) return false;
    return true;
}

export function TTSBatchRequestFromJSON(json: any): TTSBatchRequest {
    return TTSBatchRequestFromJSONTyped(json, false);
}

export function TTSBatchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TTSBatchRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'texts': json['texts'],
        'backend': json['backend'] == null ? undefined : json['backend'],
        'voice': json['voice'] == null ? undefined : json['voice'],
        'speed': json['speed'] == null ? undefined : json['speed'],
        'lang': json['lang'] == null ? undefined : json['lang'],
        'toOgg': json['to_ogg'] == null ? undefined : json['to_ogg'],
        'toOpus': json['to_opus'] == null ? undefined : json['to_opus'],
    };
}

export function TTSBatchRequestToJSON(json: any): TTSBatchRequest {
    return TTSBatchRequestToJSONTyped(json, false);
}

export function TTSBatchRequestToJSONTyped(value?: TTSBatchRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'texts': value['texts'],
        'backend': value['backend'],
        'voice': value['voice'],
        'speed': value['speed'],
        'lang': value['lang'],
        'to_ogg': value['toOgg'],
        'to_opus': value['toOpus'],
    };
}

