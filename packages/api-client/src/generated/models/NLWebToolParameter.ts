/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Parameter definition for NLWeb tools.
 * @export
 * @interface NLWebToolParameter
 */
export interface NLWebToolParameter {
    /**
     * Parameter name
     * @type {string}
     * @memberof NLWebToolParameter
     */
    name: string;
    /**
     * Parameter type (string, number, boolean, object, array)
     * @type {string}
     * @memberof NLWebToolParameter
     */
    type: string;
    /**
     * Human-readable description
     * @type {string}
     * @memberof NLWebToolParameter
     */
    description: string;
    /**
     * Whether the parameter is required
     * @type {boolean}
     * @memberof NLWebToolParameter
     */
    required?: boolean;
    /**
     * Default value if not provided
     * @type {}
     * @memberof NLWebToolParameter
     */
    _default?:  | null;
    /**
     * 
     * @type {object}
     * @memberof NLWebToolParameter
     */
    constraints?: object | null;
}

/**
 * Check if a given object implements the NLWebToolParameter interface.
 */
export function instanceOfNLWebToolParameter(value: object): value is NLWebToolParameter {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function NLWebToolParameterFromJSON(json: any): NLWebToolParameter {
    return NLWebToolParameterFromJSONTyped(json, false);
}

export function NLWebToolParameterFromJSONTyped(json: any, ignoreDiscriminator: boolean): NLWebToolParameter {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'description': json['description'],
        'required': json['required'] == null ? undefined : json['required'],
        '_default': json['default'] == null ? undefined : FromJSON(json['default']),
        'constraints': json['constraints'] == null ? undefined : json['constraints'],
    };
}

export function NLWebToolParameterToJSON(json: any): NLWebToolParameter {
    return NLWebToolParameterToJSONTyped(json, false);
}

export function NLWebToolParameterToJSONTyped(value?: NLWebToolParameter | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'type': value['type'],
        'description': value['description'],
        'required': value['required'],
        'default': ToJSON(value['_default']),
        'constraints': value['constraints'],
    };
}

