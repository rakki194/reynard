/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Response model for lazy loading configuration.
 * @export
 * @interface ConfigResponse
 */
export interface ConfigResponse {
  /**
   *
   * @type {boolean}
   * @memberof ConfigResponse
   */
  enablePerformanceMonitoring: boolean;
  /**
   *
   * @type {boolean}
   * @memberof ConfigResponse
   */
  autoCleanup: boolean;
  /**
   *
   * @type {string}
   * @memberof ConfigResponse
   */
  defaultValidationLevel: string;
  /**
   *
   * @type {number}
   * @memberof ConfigResponse
   */
  maxConcurrentLoads: number;
  /**
   *
   * @type {number}
   * @memberof ConfigResponse
   */
  memoryThreshold: number;
}

/**
 * Check if a given object implements the ConfigResponse interface.
 */
export function instanceOfConfigResponse(
  value: object,
): value is ConfigResponse {
  if (
    !("enablePerformanceMonitoring" in value) ||
    value["enablePerformanceMonitoring"] === undefined
  )
    return false;
  if (!("autoCleanup" in value) || value["autoCleanup"] === undefined)
    return false;
  if (
    !("defaultValidationLevel" in value) ||
    value["defaultValidationLevel"] === undefined
  )
    return false;
  if (
    !("maxConcurrentLoads" in value) ||
    value["maxConcurrentLoads"] === undefined
  )
    return false;
  if (!("memoryThreshold" in value) || value["memoryThreshold"] === undefined)
    return false;
  return true;
}

export function ConfigResponseFromJSON(json: any): ConfigResponse {
  return ConfigResponseFromJSONTyped(json, false);
}

export function ConfigResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ConfigResponse {
  if (json == null) {
    return json;
  }
  return {
    enablePerformanceMonitoring: json["enable_performance_monitoring"],
    autoCleanup: json["auto_cleanup"],
    defaultValidationLevel: json["default_validation_level"],
    maxConcurrentLoads: json["max_concurrent_loads"],
    memoryThreshold: json["memory_threshold"],
  };
}

export function ConfigResponseToJSON(json: any): ConfigResponse {
  return ConfigResponseToJSONTyped(json, false);
}

export function ConfigResponseToJSONTyped(
  value?: ConfigResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    enable_performance_monitoring: value["enablePerformanceMonitoring"],
    auto_cleanup: value["autoCleanup"],
    default_validation_level: value["defaultValidationLevel"],
    max_concurrent_loads: value["maxConcurrentLoads"],
    memory_threshold: value["memoryThreshold"],
  };
}
