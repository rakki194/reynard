/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Response model for content type detection.
 * @export
 * @interface ContentTypeDetectionResponse
 */
export interface ContentTypeDetectionResponse {
  /**
   * Detected content type
   * @type {string}
   * @memberof ContentTypeDetectionResponse
   */
  contentType: string;
  /**
   * Confidence score for detection
   * @type {number}
   * @memberof ContentTypeDetectionResponse
   */
  confidence?: number;
}

/**
 * Check if a given object implements the ContentTypeDetectionResponse interface.
 */
export function instanceOfContentTypeDetectionResponse(
  value: object,
): value is ContentTypeDetectionResponse {
  if (!("contentType" in value) || value["contentType"] === undefined)
    return false;
  return true;
}

export function ContentTypeDetectionResponseFromJSON(
  json: any,
): ContentTypeDetectionResponse {
  return ContentTypeDetectionResponseFromJSONTyped(json, false);
}

export function ContentTypeDetectionResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ContentTypeDetectionResponse {
  if (json == null) {
    return json;
  }
  return {
    contentType: json["content_type"],
    confidence: json["confidence"] == null ? undefined : json["confidence"],
  };
}

export function ContentTypeDetectionResponseToJSON(
  json: any,
): ContentTypeDetectionResponse {
  return ContentTypeDetectionResponseToJSONTyped(json, false);
}

export function ContentTypeDetectionResponseToJSONTyped(
  value?: ContentTypeDetectionResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    content_type: value["contentType"],
    confidence: value["confidence"],
  };
}
