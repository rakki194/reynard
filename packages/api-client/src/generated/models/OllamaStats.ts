/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Statistics for Ollama service.
 * @export
 * @interface OllamaStats
 */
export interface OllamaStats {
    /**
     * Total chat requests
     * @type {number}
     * @memberof OllamaStats
     */
    totalRequests: number;
    /**
     * Successful chat requests
     * @type {number}
     * @memberof OllamaStats
     */
    successfulRequests: number;
    /**
     * Failed chat requests
     * @type {number}
     * @memberof OllamaStats
     */
    failedRequests: number;
    /**
     * Average processing time in seconds
     * @type {number}
     * @memberof OllamaStats
     */
    averageProcessingTime: number;
    /**
     * Total tokens generated
     * @type {number}
     * @memberof OllamaStats
     */
    totalTokensGenerated: number;
    /**
     * Model usage statistics
     * @type {{ [key: string]: number; }}
     * @memberof OllamaStats
     */
    modelUsage: { [key: string]: number; };
    /**
     * Assistant usage statistics
     * @type {{ [key: string]: number; }}
     * @memberof OllamaStats
     */
    assistantUsage: { [key: string]: number; };
    /**
     * Tools usage statistics
     * @type {{ [key: string]: number; }}
     * @memberof OllamaStats
     */
    toolsUsage: { [key: string]: number; };
    /**
     * Error rate percentage
     * @type {number}
     * @memberof OllamaStats
     */
    errorRate: number;
}

/**
 * Check if a given object implements the OllamaStats interface.
 */
export function instanceOfOllamaStats(value: object): value is OllamaStats {
    if (!('totalRequests' in value) || value['totalRequests'] === undefined) return false;
    if (!('successfulRequests' in value) || value['successfulRequests'] === undefined) return false;
    if (!('failedRequests' in value) || value['failedRequests'] === undefined) return false;
    if (!('averageProcessingTime' in value) || value['averageProcessingTime'] === undefined) return false;
    if (!('totalTokensGenerated' in value) || value['totalTokensGenerated'] === undefined) return false;
    if (!('modelUsage' in value) || value['modelUsage'] === undefined) return false;
    if (!('assistantUsage' in value) || value['assistantUsage'] === undefined) return false;
    if (!('toolsUsage' in value) || value['toolsUsage'] === undefined) return false;
    if (!('errorRate' in value) || value['errorRate'] === undefined) return false;
    return true;
}

export function OllamaStatsFromJSON(json: any): OllamaStats {
    return OllamaStatsFromJSONTyped(json, false);
}

export function OllamaStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): OllamaStats {
    if (json == null) {
        return json;
    }
    return {
        
        'totalRequests': json['total_requests'],
        'successfulRequests': json['successful_requests'],
        'failedRequests': json['failed_requests'],
        'averageProcessingTime': json['average_processing_time'],
        'totalTokensGenerated': json['total_tokens_generated'],
        'modelUsage': json['model_usage'],
        'assistantUsage': json['assistant_usage'],
        'toolsUsage': json['tools_usage'],
        'errorRate': json['error_rate'],
    };
}

export function OllamaStatsToJSON(json: any): OllamaStats {
    return OllamaStatsToJSONTyped(json, false);
}

export function OllamaStatsToJSONTyped(value?: OllamaStats | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total_requests': value['totalRequests'],
        'successful_requests': value['successfulRequests'],
        'failed_requests': value['failedRequests'],
        'average_processing_time': value['averageProcessingTime'],
        'total_tokens_generated': value['totalTokensGenerated'],
        'model_usage': value['modelUsage'],
        'assistant_usage': value['assistantUsage'],
        'tools_usage': value['toolsUsage'],
        'error_rate': value['errorRate'],
    };
}

