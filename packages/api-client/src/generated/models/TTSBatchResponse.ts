/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { TTSSynthesisResponse } from "./TTSSynthesisResponse";
import {
  TTSSynthesisResponseFromJSON,
  TTSSynthesisResponseFromJSONTyped,
  TTSSynthesisResponseToJSON,
  TTSSynthesisResponseToJSONTyped,
} from "./TTSSynthesisResponse";

/**
 * Response model for batch TTS synthesis.
 * @export
 * @interface TTSBatchResponse
 */
export interface TTSBatchResponse {
  /**
   * Whether batch synthesis was successful
   * @type {boolean}
   * @memberof TTSBatchResponse
   */
  success: boolean;
  /**
   * Individual synthesis results
   * @type {Array<TTSSynthesisResponse>}
   * @memberof TTSBatchResponse
   */
  results: Array<TTSSynthesisResponse>;
  /**
   * Total processing time in seconds
   * @type {number}
   * @memberof TTSBatchResponse
   */
  totalProcessingTime: number;
  /**
   *
   * @type {string}
   * @memberof TTSBatchResponse
   */
  error?: string | null;
}

/**
 * Check if a given object implements the TTSBatchResponse interface.
 */
export function instanceOfTTSBatchResponse(
  value: object,
): value is TTSBatchResponse {
  if (!("success" in value) || value["success"] === undefined) return false;
  if (!("results" in value) || value["results"] === undefined) return false;
  if (
    !("totalProcessingTime" in value) ||
    value["totalProcessingTime"] === undefined
  )
    return false;
  return true;
}

export function TTSBatchResponseFromJSON(json: any): TTSBatchResponse {
  return TTSBatchResponseFromJSONTyped(json, false);
}

export function TTSBatchResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): TTSBatchResponse {
  if (json == null) {
    return json;
  }
  return {
    success: json["success"],
    results: (json["results"] as Array<any>).map(TTSSynthesisResponseFromJSON),
    totalProcessingTime: json["total_processing_time"],
    error: json["error"] == null ? undefined : json["error"],
  };
}

export function TTSBatchResponseToJSON(json: any): TTSBatchResponse {
  return TTSBatchResponseToJSONTyped(json, false);
}

export function TTSBatchResponseToJSONTyped(
  value?: TTSBatchResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    success: value["success"],
    results: (value["results"] as Array<any>).map(TTSSynthesisResponseToJSON),
    total_processing_time: value["totalProcessingTime"],
    error: value["error"],
  };
}
