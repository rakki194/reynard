/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Model for voice information.
 * @export
 * @interface TTSVoiceInfo
 */
export interface TTSVoiceInfo {
    /**
     * Voice name
     * @type {string}
     * @memberof TTSVoiceInfo
     */
    name: string;
    /**
     * Language code
     * @type {string}
     * @memberof TTSVoiceInfo
     */
    language: string;
    /**
     * 
     * @type {string}
     * @memberof TTSVoiceInfo
     */
    gender?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TTSVoiceInfo
     */
    description?: string | null;
    /**
     * Whether voice is available
     * @type {boolean}
     * @memberof TTSVoiceInfo
     */
    available: boolean;
}

/**
 * Check if a given object implements the TTSVoiceInfo interface.
 */
export function instanceOfTTSVoiceInfo(value: object): value is TTSVoiceInfo {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('available' in value) || value['available'] === undefined) return false;
    return true;
}

export function TTSVoiceInfoFromJSON(json: any): TTSVoiceInfo {
    return TTSVoiceInfoFromJSONTyped(json, false);
}

export function TTSVoiceInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TTSVoiceInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'language': json['language'],
        'gender': json['gender'] == null ? undefined : json['gender'],
        'description': json['description'] == null ? undefined : json['description'],
        'available': json['available'],
    };
}

export function TTSVoiceInfoToJSON(json: any): TTSVoiceInfo {
    return TTSVoiceInfoToJSONTyped(json, false);
}

export function TTSVoiceInfoToJSONTyped(value?: TTSVoiceInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'language': value['language'],
        'gender': value['gender'],
        'description': value['description'],
        'available': value['available'],
    };
}

