/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface TaskInfoResponse
 */
export interface TaskInfoResponse {
  /**
   *
   * @type {string}
   * @memberof TaskInfoResponse
   */
  taskId: string;
  /**
   *
   * @type {string}
   * @memberof TaskInfoResponse
   */
  functionName: string;
  /**
   *
   * @type {number}
   * @memberof TaskInfoResponse
   */
  startTime: number;
  /**
   *
   * @type {number}
   * @memberof TaskInfoResponse
   */
  timeout: number;
  /**
   *
   * @type {number}
   * @memberof TaskInfoResponse
   */
  retryCount: number;
  /**
   *
   * @type {number}
   * @memberof TaskInfoResponse
   */
  maxRetries: number;
}

/**
 * Check if a given object implements the TaskInfoResponse interface.
 */
export function instanceOfTaskInfoResponse(
  value: object,
): value is TaskInfoResponse {
  if (!("taskId" in value) || value["taskId"] === undefined) return false;
  if (!("functionName" in value) || value["functionName"] === undefined)
    return false;
  if (!("startTime" in value) || value["startTime"] === undefined) return false;
  if (!("timeout" in value) || value["timeout"] === undefined) return false;
  if (!("retryCount" in value) || value["retryCount"] === undefined)
    return false;
  if (!("maxRetries" in value) || value["maxRetries"] === undefined)
    return false;
  return true;
}

export function TaskInfoResponseFromJSON(json: any): TaskInfoResponse {
  return TaskInfoResponseFromJSONTyped(json, false);
}

export function TaskInfoResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): TaskInfoResponse {
  if (json == null) {
    return json;
  }
  return {
    taskId: json["task_id"],
    functionName: json["function_name"],
    startTime: json["start_time"],
    timeout: json["timeout"],
    retryCount: json["retry_count"],
    maxRetries: json["max_retries"],
  };
}

export function TaskInfoResponseToJSON(json: any): TaskInfoResponse {
  return TaskInfoResponseToJSONTyped(json, false);
}

export function TaskInfoResponseToJSONTyped(
  value?: TaskInfoResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    task_id: value["taskId"],
    function_name: value["functionName"],
    start_time: value["startTime"],
    timeout: value["timeout"],
    retry_count: value["retryCount"],
    max_retries: value["maxRetries"],
  };
}
