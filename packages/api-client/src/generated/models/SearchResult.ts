/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Individual search result model.
 * @export
 * @interface SearchResult
 */
export interface SearchResult {
    /**
     * Path to the file
     * @type {string}
     * @memberof SearchResult
     */
    filePath: string;
    /**
     * Line number of the match
     * @type {number}
     * @memberof SearchResult
     */
    lineNumber: number;
    /**
     * Content of the match
     * @type {string}
     * @memberof SearchResult
     */
    content: string;
    /**
     * Relevance score
     * @type {number}
     * @memberof SearchResult
     */
    score: number;
    /**
     * Type of match: semantic, syntax, hybrid
     * @type {string}
     * @memberof SearchResult
     */
    matchType: string;
    /**
     * 
     * @type {string}
     * @memberof SearchResult
     */
    context?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SearchResult
     */
    snippet?: string | null;
    /**
     * 
     * @type {object}
     * @memberof SearchResult
     */
    metadata?: object | null;
}

/**
 * Check if a given object implements the SearchResult interface.
 */
export function instanceOfSearchResult(value: object): value is SearchResult {
    if (!('filePath' in value) || value['filePath'] === undefined) return false;
    if (!('lineNumber' in value) || value['lineNumber'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('score' in value) || value['score'] === undefined) return false;
    if (!('matchType' in value) || value['matchType'] === undefined) return false;
    return true;
}

export function SearchResultFromJSON(json: any): SearchResult {
    return SearchResultFromJSONTyped(json, false);
}

export function SearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchResult {
    if (json == null) {
        return json;
    }
    return {
        
        'filePath': json['file_path'],
        'lineNumber': json['line_number'],
        'content': json['content'],
        'score': json['score'],
        'matchType': json['match_type'],
        'context': json['context'] == null ? undefined : json['context'],
        'snippet': json['snippet'] == null ? undefined : json['snippet'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
    };
}

export function SearchResultToJSON(json: any): SearchResult {
    return SearchResultToJSONTyped(json, false);
}

export function SearchResultToJSONTyped(value?: SearchResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'file_path': value['filePath'],
        'line_number': value['lineNumber'],
        'content': value['content'],
        'score': value['score'],
        'match_type': value['matchType'],
        'context': value['context'],
        'snippet': value['snippet'],
        'metadata': value['metadata'],
    };
}

