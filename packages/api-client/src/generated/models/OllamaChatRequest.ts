/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Request model for Ollama chat.
 * @export
 * @interface OllamaChatRequest
 */
export interface OllamaChatRequest {
    /**
     * User message
     * @type {string}
     * @memberof OllamaChatRequest
     */
    message: string;
    /**
     * Ollama model to use
     * @type {string}
     * @memberof OllamaChatRequest
     */
    model?: string;
    /**
     * 
     * @type {string}
     * @memberof OllamaChatRequest
     */
    systemPrompt?: string | null;
    /**
     * Sampling temperature
     * @type {number}
     * @memberof OllamaChatRequest
     */
    temperature?: number;
    /**
     * Maximum tokens to generate
     * @type {number}
     * @memberof OllamaChatRequest
     */
    maxTokens?: number;
    /**
     * Enable streaming response
     * @type {boolean}
     * @memberof OllamaChatRequest
     */
    stream?: boolean;
    /**
     * 
     * @type {Array<object>}
     * @memberof OllamaChatRequest
     */
    tools?: Array<object> | null;
    /**
     * 
     * @type {object}
     * @memberof OllamaChatRequest
     */
    context?: object | null;
}

/**
 * Check if a given object implements the OllamaChatRequest interface.
 */
export function instanceOfOllamaChatRequest(value: object): value is OllamaChatRequest {
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function OllamaChatRequestFromJSON(json: any): OllamaChatRequest {
    return OllamaChatRequestFromJSONTyped(json, false);
}

export function OllamaChatRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): OllamaChatRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'],
        'model': json['model'] == null ? undefined : json['model'],
        'systemPrompt': json['system_prompt'] == null ? undefined : json['system_prompt'],
        'temperature': json['temperature'] == null ? undefined : json['temperature'],
        'maxTokens': json['max_tokens'] == null ? undefined : json['max_tokens'],
        'stream': json['stream'] == null ? undefined : json['stream'],
        'tools': json['tools'] == null ? undefined : json['tools'],
        'context': json['context'] == null ? undefined : json['context'],
    };
}

export function OllamaChatRequestToJSON(json: any): OllamaChatRequest {
    return OllamaChatRequestToJSONTyped(json, false);
}

export function OllamaChatRequestToJSONTyped(value?: OllamaChatRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'message': value['message'],
        'model': value['model'],
        'system_prompt': value['systemPrompt'],
        'temperature': value['temperature'],
        'max_tokens': value['maxTokens'],
        'stream': value['stream'],
        'tools': value['tools'],
        'context': value['context'],
    };
}

