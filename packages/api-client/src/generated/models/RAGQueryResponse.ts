/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RAGQueryHit } from './RAGQueryHit';
import {
    RAGQueryHitFromJSON,
    RAGQueryHitFromJSONTyped,
    RAGQueryHitToJSON,
    RAGQueryHitToJSONTyped,
} from './RAGQueryHit';

/**
 * Response model for RAG search queries.
 * @export
 * @interface RAGQueryResponse
 */
export interface RAGQueryResponse {
    /**
     * Search results
     * @type {Array<RAGQueryHit>}
     * @memberof RAGQueryResponse
     */
    hits: Array<RAGQueryHit>;
    /**
     * Total number of results
     * @type {number}
     * @memberof RAGQueryResponse
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof RAGQueryResponse
     */
    queryTime?: number | null;
    /**
     * 
     * @type {number}
     * @memberof RAGQueryResponse
     */
    embeddingTime?: number | null;
    /**
     * 
     * @type {number}
     * @memberof RAGQueryResponse
     */
    searchTime?: number | null;
    /**
     * 
     * @type {object}
     * @memberof RAGQueryResponse
     */
    metadata?: object | null;
}

/**
 * Check if a given object implements the RAGQueryResponse interface.
 */
export function instanceOfRAGQueryResponse(value: object): value is RAGQueryResponse {
    if (!('hits' in value) || value['hits'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function RAGQueryResponseFromJSON(json: any): RAGQueryResponse {
    return RAGQueryResponseFromJSONTyped(json, false);
}

export function RAGQueryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RAGQueryResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'hits': ((json['hits'] as Array<any>).map(RAGQueryHitFromJSON)),
        'total': json['total'],
        'queryTime': json['query_time'] == null ? undefined : json['query_time'],
        'embeddingTime': json['embedding_time'] == null ? undefined : json['embedding_time'],
        'searchTime': json['search_time'] == null ? undefined : json['search_time'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
    };
}

export function RAGQueryResponseToJSON(json: any): RAGQueryResponse {
    return RAGQueryResponseToJSONTyped(json, false);
}

export function RAGQueryResponseToJSONTyped(value?: RAGQueryResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'hits': ((value['hits'] as Array<any>).map(RAGQueryHitToJSON)),
        'total': value['total'],
        'query_time': value['queryTime'],
        'embedding_time': value['embeddingTime'],
        'search_time': value['searchTime'],
        'metadata': value['metadata'],
    };
}

