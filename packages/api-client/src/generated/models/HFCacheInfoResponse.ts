/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HFCacheInfoResponse
 */
export interface HFCacheInfoResponse {
    /**
     * 
     * @type {string}
     * @memberof HFCacheInfoResponse
     */
    cacheDir: string;
    /**
     * 
     * @type {string}
     * @memberof HFCacheInfoResponse
     */
    hubDir: string;
    /**
     * 
     * @type {number}
     * @memberof HFCacheInfoResponse
     */
    size: number;
    /**
     * 
     * @type {number}
     * @memberof HFCacheInfoResponse
     */
    modelCount: number;
}

/**
 * Check if a given object implements the HFCacheInfoResponse interface.
 */
export function instanceOfHFCacheInfoResponse(value: object): value is HFCacheInfoResponse {
    if (!('cacheDir' in value) || value['cacheDir'] === undefined) return false;
    if (!('hubDir' in value) || value['hubDir'] === undefined) return false;
    if (!('size' in value) || value['size'] === undefined) return false;
    if (!('modelCount' in value) || value['modelCount'] === undefined) return false;
    return true;
}

export function HFCacheInfoResponseFromJSON(json: any): HFCacheInfoResponse {
    return HFCacheInfoResponseFromJSONTyped(json, false);
}

export function HFCacheInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HFCacheInfoResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'cacheDir': json['cache_dir'],
        'hubDir': json['hub_dir'],
        'size': json['size'],
        'modelCount': json['model_count'],
    };
}

export function HFCacheInfoResponseToJSON(json: any): HFCacheInfoResponse {
    return HFCacheInfoResponseToJSONTyped(json, false);
}

export function HFCacheInfoResponseToJSONTyped(value?: HFCacheInfoResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cache_dir': value['cacheDir'],
        'hub_dir': value['hubDir'],
        'size': value['size'],
        'model_count': value['modelCount'],
    };
}

