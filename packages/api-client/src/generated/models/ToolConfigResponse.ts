/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Response model for tool configuration.
 * @export
 * @interface ToolConfigResponse
 */
export interface ToolConfigResponse {
    /**
     * Tool name
     * @type {string}
     * @memberof ToolConfigResponse
     */
    name: string;
    /**
     * Tool category
     * @type {string}
     * @memberof ToolConfigResponse
     */
    category: string;
    /**
     * Whether tool is enabled
     * @type {boolean}
     * @memberof ToolConfigResponse
     */
    enabled: boolean;
    /**
     * Tool description
     * @type {string}
     * @memberof ToolConfigResponse
     */
    description: string;
    /**
     * Tool dependencies
     * @type {Array<string>}
     * @memberof ToolConfigResponse
     */
    dependencies?: Array<string>;
    /**
     * Tool configuration
     * @type {object}
     * @memberof ToolConfigResponse
     */
    config?: object;
}

/**
 * Check if a given object implements the ToolConfigResponse interface.
 */
export function instanceOfToolConfigResponse(value: object): value is ToolConfigResponse {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('enabled' in value) || value['enabled'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function ToolConfigResponseFromJSON(json: any): ToolConfigResponse {
    return ToolConfigResponseFromJSONTyped(json, false);
}

export function ToolConfigResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolConfigResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'category': json['category'],
        'enabled': json['enabled'],
        'description': json['description'],
        'dependencies': json['dependencies'] == null ? undefined : json['dependencies'],
        'config': json['config'] == null ? undefined : json['config'],
    };
}

export function ToolConfigResponseToJSON(json: any): ToolConfigResponse {
    return ToolConfigResponseToJSONTyped(json, false);
}

export function ToolConfigResponseToJSONTyped(value?: ToolConfigResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'category': value['category'],
        'enabled': value['enabled'],
        'description': value['description'],
        'dependencies': value['dependencies'],
        'config': value['config'],
    };
}

