/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { NLWebToolParameter } from "./NLWebToolParameter";
import {
  NLWebToolParameterFromJSON,
  NLWebToolParameterFromJSONTyped,
  NLWebToolParameterToJSON,
  NLWebToolParameterToJSONTyped,
} from "./NLWebToolParameter";

/**
 * NLWeb tool definition.
 * @export
 * @interface NLWebTool
 */
export interface NLWebTool {
  /**
   * Unique identifier for the tool
   * @type {string}
   * @memberof NLWebTool
   */
  name: string;
  /**
   * Human-readable description of what the tool does
   * @type {string}
   * @memberof NLWebTool
   */
  description: string;
  /**
   * Category for grouping tools
   * @type {string}
   * @memberof NLWebTool
   */
  category: string;
  /**
   * Tags for search and filtering
   * @type {Array<string>}
   * @memberof NLWebTool
   */
  tags?: Array<string>;
  /**
   * Tool execution path or endpoint
   * @type {string}
   * @memberof NLWebTool
   */
  path: string;
  /**
   * HTTP method for tool execution
   * @type {string}
   * @memberof NLWebTool
   */
  method?: string;
  /**
   * Required parameters
   * @type {Array<NLWebToolParameter>}
   * @memberof NLWebTool
   */
  parameters?: Array<NLWebToolParameter>;
  /**
   * Example usage prompts
   * @type {Array<string>}
   * @memberof NLWebTool
   */
  examples?: Array<string>;
  /**
   * Whether the tool is currently enabled
   * @type {boolean}
   * @memberof NLWebTool
   */
  enabled?: boolean;
  /**
   * Priority for tool selection (higher = more likely to be selected)
   * @type {number}
   * @memberof NLWebTool
   */
  priority?: number;
  /**
   * Execution timeout in milliseconds
   * @type {number}
   * @memberof NLWebTool
   */
  timeout?: number;
}

/**
 * Check if a given object implements the NLWebTool interface.
 */
export function instanceOfNLWebTool(value: object): value is NLWebTool {
  if (!("name" in value) || value["name"] === undefined) return false;
  if (!("description" in value) || value["description"] === undefined) return false;
  if (!("category" in value) || value["category"] === undefined) return false;
  if (!("path" in value) || value["path"] === undefined) return false;
  return true;
}

export function NLWebToolFromJSON(json: any): NLWebTool {
  return NLWebToolFromJSONTyped(json, false);
}

export function NLWebToolFromJSONTyped(json: any, ignoreDiscriminator: boolean): NLWebTool {
  if (json == null) {
    return json;
  }
  return {
    name: json["name"],
    description: json["description"],
    category: json["category"],
    tags: json["tags"] == null ? undefined : json["tags"],
    path: json["path"],
    method: json["method"] == null ? undefined : json["method"],
    parameters:
      json["parameters"] == null ? undefined : (json["parameters"] as Array<any>).map(NLWebToolParameterFromJSON),
    examples: json["examples"] == null ? undefined : json["examples"],
    enabled: json["enabled"] == null ? undefined : json["enabled"],
    priority: json["priority"] == null ? undefined : json["priority"],
    timeout: json["timeout"] == null ? undefined : json["timeout"],
  };
}

export function NLWebToolToJSON(json: any): NLWebTool {
  return NLWebToolToJSONTyped(json, false);
}

export function NLWebToolToJSONTyped(value?: NLWebTool | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    name: value["name"],
    description: value["description"],
    category: value["category"],
    tags: value["tags"],
    path: value["path"],
    method: value["method"],
    parameters:
      value["parameters"] == null ? undefined : (value["parameters"] as Array<any>).map(NLWebToolParameterToJSON),
    examples: value["examples"],
    enabled: value["enabled"],
    priority: value["priority"],
    timeout: value["timeout"],
  };
}
