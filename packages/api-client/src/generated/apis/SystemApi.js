/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
/**
 *
 */
export class SystemApi extends runtime.BaseAPI {
    /**
     * Retrieve current application configuration (development environment only).  This endpoint provides access to the current application configuration including environment settings, debug flags, and service-specific configurations. Access is restricted to development environments for security purposes.  Returns:     dict: Application configuration containing:         - environment: Current deployment environment         - debug: Debug mode status         - services: Service-specific configuration details including:             - enabled: Service activation status             - timeout: Service timeout configurations  Raises:     HTTPException: 404 Not Found if accessed in production environment.
     * Get Configuration
     */
    async getConfigurationApiConfigGetRaw(initOverrides) {
        const queryParameters = {};
        const headerParameters = {};
        let urlPath = `/api/config`;
        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response);
    }
    /**
     * Retrieve current application configuration (development environment only).  This endpoint provides access to the current application configuration including environment settings, debug flags, and service-specific configurations. Access is restricted to development environments for security purposes.  Returns:     dict: Application configuration containing:         - environment: Current deployment environment         - debug: Debug mode status         - services: Service-specific configuration details including:             - enabled: Service activation status             - timeout: Service timeout configurations  Raises:     HTTPException: 404 Not Found if accessed in production environment.
     * Get Configuration
     */
    async getConfigurationApiConfigGet(initOverrides) {
        const response = await this.getConfigurationApiConfigGetRaw(initOverrides);
        return await response.value();
    }
}
