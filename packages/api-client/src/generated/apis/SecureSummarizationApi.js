/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { SecureSummarizationRequestToJSON, } from '../models/index';
/**
 *
 */
export class SecureSummarizationApi extends runtime.BaseAPI {
    /**
     * Securely get supported content types.  This endpoint provides content type information without exposing sensitive details.  Args:     current_user: Current authenticated user      Returns:     Dict containing supported content types      Raises:     HTTPException: If content type retrieval fails
     * Secure Get Content Types
     */
    async secureGetContentTypesApiSecureSummarizationContentTypesGetRaw(initOverrides) {
        const queryParameters = {};
        const headerParameters = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("HTTPBearer", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        let urlPath = `/api/secure/summarization/content-types`;
        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response);
    }
    /**
     * Securely get supported content types.  This endpoint provides content type information without exposing sensitive details.  Args:     current_user: Current authenticated user      Returns:     Dict containing supported content types      Raises:     HTTPException: If content type retrieval fails
     * Secure Get Content Types
     */
    async secureGetContentTypesApiSecureSummarizationContentTypesGet(initOverrides) {
        const response = await this.secureGetContentTypesApiSecureSummarizationContentTypesGetRaw(initOverrides);
        return await response.value();
    }
    /**
     * Securely get available summarization models.  This endpoint provides model information without exposing sensitive system details.  Args:     current_user: Current authenticated user      Returns:     Dict containing available models (sanitized)      Raises:     HTTPException: If model retrieval fails
     * Secure Get Models
     */
    async secureGetModelsApiSecureSummarizationModelsGetRaw(initOverrides) {
        const queryParameters = {};
        const headerParameters = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("HTTPBearer", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        let urlPath = `/api/secure/summarization/models`;
        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response);
    }
    /**
     * Securely get available summarization models.  This endpoint provides model information without exposing sensitive system details.  Args:     current_user: Current authenticated user      Returns:     Dict containing available models (sanitized)      Raises:     HTTPException: If model retrieval fails
     * Secure Get Models
     */
    async secureGetModelsApiSecureSummarizationModelsGet(initOverrides) {
        const response = await this.secureGetModelsApiSecureSummarizationModelsGetRaw(initOverrides);
        return await response.value();
    }
    /**
     * Securely process a summarization request with comprehensive input validation.  This endpoint prevents command injection, information disclosure, and other security vulnerabilities through comprehensive input validation and response sanitization.  Args:     request: Validated summarization request data     current_user: Current authenticated user      Returns:     Dict containing summarization response (sanitized)      Raises:     HTTPException: If summarization fails or security violation detected
     * Secure Summarize
     */
    async secureSummarizeApiSecureSummarizationSummarizePostRaw(requestParameters, initOverrides) {
        if (requestParameters['secureSummarizationRequest'] == null) {
            throw new runtime.RequiredError('secureSummarizationRequest', 'Required parameter "secureSummarizationRequest" was null or undefined when calling secureSummarizeApiSecureSummarizationSummarizePost().');
        }
        const queryParameters = {};
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("HTTPBearer", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        let urlPath = `/api/secure/summarization/summarize`;
        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SecureSummarizationRequestToJSON(requestParameters['secureSummarizationRequest']),
        }, initOverrides);
        return new runtime.JSONApiResponse(response);
    }
    /**
     * Securely process a summarization request with comprehensive input validation.  This endpoint prevents command injection, information disclosure, and other security vulnerabilities through comprehensive input validation and response sanitization.  Args:     request: Validated summarization request data     current_user: Current authenticated user      Returns:     Dict containing summarization response (sanitized)      Raises:     HTTPException: If summarization fails or security violation detected
     * Secure Summarize
     */
    async secureSummarizeApiSecureSummarizationSummarizePost(requestParameters, initOverrides) {
        const response = await this.secureSummarizeApiSecureSummarizationSummarizePostRaw(requestParameters, initOverrides);
        return await response.value();
    }
}
