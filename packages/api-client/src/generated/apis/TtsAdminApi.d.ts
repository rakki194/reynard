/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { TTSStatsResponse } from "../models/index";
export interface ReloadBackendApiTtsApiTtsAdminBackendsBackendNameReloadPostRequest {
    backendName: string;
}
/**
 * TtsAdminApi - interface
 *
 * @export
 * @interface TtsAdminApiInterface
 */
export interface TtsAdminApiInterface {
    /**
     * Clean up old audio files.
     * @summary Cleanup Audio Files
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsAdminApiInterface
     */
    cleanupAudioFilesApiTtsApiTtsAdminCleanupPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Clean up old audio files.
     * Cleanup Audio Files
     */
    cleanupAudioFilesApiTtsApiTtsAdminCleanupPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Get list of available TTS backends.
     * @summary Get Available Backends
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsAdminApiInterface
     */
    getAvailableBackendsApiTtsApiTtsAdminBackendsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Get list of available TTS backends.
     * Get Available Backends
     */
    getAvailableBackendsApiTtsApiTtsAdminBackendsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Get TTS service statistics.
     * @summary Get Tts Stats
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsAdminApiInterface
     */
    getTtsStatsApiTtsApiTtsAdminStatsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TTSStatsResponse>>;
    /**
     * Get TTS service statistics.
     * Get Tts Stats
     */
    getTtsStatsApiTtsApiTtsAdminStatsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TTSStatsResponse>;
    /**
     * Perform TTS service health check.
     * @summary Health Check
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsAdminApiInterface
     */
    healthCheckApiTtsApiTtsAdminHealthGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Perform TTS service health check.
     * Health Check
     */
    healthCheckApiTtsApiTtsAdminHealthGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Reload a specific TTS backend.
     * @summary Reload Backend
     * @param {string} backendName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsAdminApiInterface
     */
    reloadBackendApiTtsApiTtsAdminBackendsBackendNameReloadPostRaw(requestParameters: ReloadBackendApiTtsApiTtsAdminBackendsBackendNameReloadPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Reload a specific TTS backend.
     * Reload Backend
     */
    reloadBackendApiTtsApiTtsAdminBackendsBackendNameReloadPost(requestParameters: ReloadBackendApiTtsApiTtsAdminBackendsBackendNameReloadPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
}
/**
 *
 */
export declare class TtsAdminApi extends runtime.BaseAPI implements TtsAdminApiInterface {
    /**
     * Clean up old audio files.
     * Cleanup Audio Files
     */
    cleanupAudioFilesApiTtsApiTtsAdminCleanupPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Clean up old audio files.
     * Cleanup Audio Files
     */
    cleanupAudioFilesApiTtsApiTtsAdminCleanupPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Get list of available TTS backends.
     * Get Available Backends
     */
    getAvailableBackendsApiTtsApiTtsAdminBackendsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Get list of available TTS backends.
     * Get Available Backends
     */
    getAvailableBackendsApiTtsApiTtsAdminBackendsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Get TTS service statistics.
     * Get Tts Stats
     */
    getTtsStatsApiTtsApiTtsAdminStatsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TTSStatsResponse>>;
    /**
     * Get TTS service statistics.
     * Get Tts Stats
     */
    getTtsStatsApiTtsApiTtsAdminStatsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TTSStatsResponse>;
    /**
     * Perform TTS service health check.
     * Health Check
     */
    healthCheckApiTtsApiTtsAdminHealthGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Perform TTS service health check.
     * Health Check
     */
    healthCheckApiTtsApiTtsAdminHealthGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Reload a specific TTS backend.
     * Reload Backend
     */
    reloadBackendApiTtsApiTtsAdminBackendsBackendNameReloadPostRaw(requestParameters: ReloadBackendApiTtsApiTtsAdminBackendsBackendNameReloadPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Reload a specific TTS backend.
     * Reload Backend
     */
    reloadBackendApiTtsApiTtsAdminBackendsBackendNameReloadPost(requestParameters: ReloadBackendApiTtsApiTtsAdminBackendsBackendNameReloadPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
}
