/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AgentEmailConfig,
  AgentEmailStats,
  AgentEmailTemplate,
  BodyCreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPost,
  BodySendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPost,
  BodySendAgentEmailApiEmailAgentsAgentIdSendPost,
  BodyTriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPost,
  BodyUpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPut,
  EmailBulkResponse,
  EmailSendResponse,
  HTTPValidationError,
} from '../models/index';
import {
    AgentEmailConfigFromJSON,
    AgentEmailConfigToJSON,
    AgentEmailStatsFromJSON,
    AgentEmailStatsToJSON,
    AgentEmailTemplateFromJSON,
    AgentEmailTemplateToJSON,
    BodyCreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPostFromJSON,
    BodyCreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPostToJSON,
    BodySendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPostFromJSON,
    BodySendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPostToJSON,
    BodySendAgentEmailApiEmailAgentsAgentIdSendPostFromJSON,
    BodySendAgentEmailApiEmailAgentsAgentIdSendPostToJSON,
    BodyTriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPostFromJSON,
    BodyTriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPostToJSON,
    BodyUpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPutFromJSON,
    BodyUpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPutToJSON,
    EmailBulkResponseFromJSON,
    EmailBulkResponseToJSON,
    EmailSendResponseFromJSON,
    EmailSendResponseToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
} from '../models/index';

export interface CreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPostRequest {
    agentId: string;
    bodyCreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPost: BodyCreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPost;
}

export interface DeleteAgentEmailTemplateApiEmailAgentsAgentIdTemplatesTemplateIdDeleteRequest {
    agentId: string;
    templateId: string;
    requestBody: { [key: string]: string; };
}

export interface GetAgentEmailConfigApiEmailAgentsAgentIdConfigGetRequest {
    agentId: string;
    requestBody: { [key: string]: string; };
}

export interface GetAgentEmailInteractionsApiEmailAgentsAgentIdInteractionsGetRequest {
    agentId: string;
    requestBody: { [key: string]: string; };
    limit?: number;
    offset?: number;
}

export interface GetAgentEmailMessagesApiEmailAgentsAgentIdMessagesGetRequest {
    agentId: string;
    requestBody: { [key: string]: string; };
    limit?: number;
    offset?: number;
}

export interface GetAgentEmailStatsApiEmailAgentsAgentIdStatsGetRequest {
    agentId: string;
    requestBody: { [key: string]: string; };
}

export interface GetAgentEmailTemplatesApiEmailAgentsAgentIdTemplatesGetRequest {
    agentId: string;
    requestBody: { [key: string]: string; };
}

export interface SendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPostRequest {
    agentId: string;
    bodySendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPost: BodySendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPost;
}

export interface SendAgentEmailApiEmailAgentsAgentIdSendPostRequest {
    agentId: string;
    bodySendAgentEmailApiEmailAgentsAgentIdSendPost: BodySendAgentEmailApiEmailAgentsAgentIdSendPost;
}

export interface TriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPostRequest {
    agentId: string;
    bodyTriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPost: BodyTriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPost;
}

export interface UpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPutRequest {
    agentId: string;
    bodyUpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPut: BodyUpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPut;
}

/**
 * AgentEmailApi - interface
 * 
 * @export
 * @interface AgentEmailApiInterface
 */
export interface AgentEmailApiInterface {
    /**
     * Create agent email template.  Args:     agent_id: Agent ID     template: Agent email template     current_user: Current authenticated user  Returns:     AgentEmailTemplate: Created agent email template
     * @summary Create Agent Email Template
     * @param {string} agentId 
     * @param {BodyCreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPost} bodyCreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPost 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentEmailApiInterface
     */
    createAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPostRaw(requestParameters: CreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentEmailTemplate>>;

    /**
     * Create agent email template.  Args:     agent_id: Agent ID     template: Agent email template     current_user: Current authenticated user  Returns:     AgentEmailTemplate: Created agent email template
     * Create Agent Email Template
     */
    createAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPost(requestParameters: CreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentEmailTemplate>;

    /**
     * Delete agent email template.  Args:     agent_id: Agent ID     template_id: Template ID     current_user: Current authenticated user  Returns:     Dict: Deletion result
     * @summary Delete Agent Email Template
     * @param {string} agentId 
     * @param {string} templateId 
     * @param {{ [key: string]: string; }} requestBody 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentEmailApiInterface
     */
    deleteAgentEmailTemplateApiEmailAgentsAgentIdTemplatesTemplateIdDeleteRaw(requestParameters: DeleteAgentEmailTemplateApiEmailAgentsAgentIdTemplatesTemplateIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;

    /**
     * Delete agent email template.  Args:     agent_id: Agent ID     template_id: Template ID     current_user: Current authenticated user  Returns:     Dict: Deletion result
     * Delete Agent Email Template
     */
    deleteAgentEmailTemplateApiEmailAgentsAgentIdTemplatesTemplateIdDelete(requestParameters: DeleteAgentEmailTemplateApiEmailAgentsAgentIdTemplatesTemplateIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;

    /**
     * Get agent email configuration.  Args:     agent_id: Agent ID     current_user: Current authenticated user  Returns:     AgentEmailConfig: Agent email configuration
     * @summary Get Agent Email Config
     * @param {string} agentId 
     * @param {{ [key: string]: string; }} requestBody 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentEmailApiInterface
     */
    getAgentEmailConfigApiEmailAgentsAgentIdConfigGetRaw(requestParameters: GetAgentEmailConfigApiEmailAgentsAgentIdConfigGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentEmailConfig>>;

    /**
     * Get agent email configuration.  Args:     agent_id: Agent ID     current_user: Current authenticated user  Returns:     AgentEmailConfig: Agent email configuration
     * Get Agent Email Config
     */
    getAgentEmailConfigApiEmailAgentsAgentIdConfigGet(requestParameters: GetAgentEmailConfigApiEmailAgentsAgentIdConfigGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentEmailConfig>;

    /**
     * Get agent email interactions.  Args:     agent_id: Agent ID     limit: Number of interactions to return     offset: Number of interactions to skip     current_user: Current authenticated user  Returns:     Dict: Agent email interactions
     * @summary Get Agent Email Interactions
     * @param {string} agentId 
     * @param {{ [key: string]: string; }} requestBody 
     * @param {number} [limit] 
     * @param {number} [offset] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentEmailApiInterface
     */
    getAgentEmailInteractionsApiEmailAgentsAgentIdInteractionsGetRaw(requestParameters: GetAgentEmailInteractionsApiEmailAgentsAgentIdInteractionsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;

    /**
     * Get agent email interactions.  Args:     agent_id: Agent ID     limit: Number of interactions to return     offset: Number of interactions to skip     current_user: Current authenticated user  Returns:     Dict: Agent email interactions
     * Get Agent Email Interactions
     */
    getAgentEmailInteractionsApiEmailAgentsAgentIdInteractionsGet(requestParameters: GetAgentEmailInteractionsApiEmailAgentsAgentIdInteractionsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;

    /**
     * Get agent email messages.  Args:     agent_id: Agent ID     limit: Number of messages to return     offset: Number of messages to skip     current_user: Current authenticated user  Returns:     Dict: Agent email messages
     * @summary Get Agent Email Messages
     * @param {string} agentId 
     * @param {{ [key: string]: string; }} requestBody 
     * @param {number} [limit] 
     * @param {number} [offset] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentEmailApiInterface
     */
    getAgentEmailMessagesApiEmailAgentsAgentIdMessagesGetRaw(requestParameters: GetAgentEmailMessagesApiEmailAgentsAgentIdMessagesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;

    /**
     * Get agent email messages.  Args:     agent_id: Agent ID     limit: Number of messages to return     offset: Number of messages to skip     current_user: Current authenticated user  Returns:     Dict: Agent email messages
     * Get Agent Email Messages
     */
    getAgentEmailMessagesApiEmailAgentsAgentIdMessagesGet(requestParameters: GetAgentEmailMessagesApiEmailAgentsAgentIdMessagesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;

    /**
     * Get agent email statistics.  Args:     agent_id: Agent ID     current_user: Current authenticated user  Returns:     AgentEmailStats: Agent email statistics
     * @summary Get Agent Email Stats
     * @param {string} agentId 
     * @param {{ [key: string]: string; }} requestBody 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentEmailApiInterface
     */
    getAgentEmailStatsApiEmailAgentsAgentIdStatsGetRaw(requestParameters: GetAgentEmailStatsApiEmailAgentsAgentIdStatsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentEmailStats>>;

    /**
     * Get agent email statistics.  Args:     agent_id: Agent ID     current_user: Current authenticated user  Returns:     AgentEmailStats: Agent email statistics
     * Get Agent Email Stats
     */
    getAgentEmailStatsApiEmailAgentsAgentIdStatsGet(requestParameters: GetAgentEmailStatsApiEmailAgentsAgentIdStatsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentEmailStats>;

    /**
     * Get agent email templates.  Args:     agent_id: Agent ID     current_user: Current authenticated user  Returns:     List[AgentEmailTemplate]: Agent email templates
     * @summary Get Agent Email Templates
     * @param {string} agentId 
     * @param {{ [key: string]: string; }} requestBody 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentEmailApiInterface
     */
    getAgentEmailTemplatesApiEmailAgentsAgentIdTemplatesGetRaw(requestParameters: GetAgentEmailTemplatesApiEmailAgentsAgentIdTemplatesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<AgentEmailTemplate>>>;

    /**
     * Get agent email templates.  Args:     agent_id: Agent ID     current_user: Current authenticated user  Returns:     List[AgentEmailTemplate]: Agent email templates
     * Get Agent Email Templates
     */
    getAgentEmailTemplatesApiEmailAgentsAgentIdTemplatesGet(requestParameters: GetAgentEmailTemplatesApiEmailAgentsAgentIdTemplatesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<AgentEmailTemplate>>;

    /**
     * Send bulk emails from one agent to multiple agents.  Args:     agent_id: Sender agent ID     request: Agent bulk email request     current_user: Current authenticated user  Returns:     EmailBulkResponse: Bulk send results
     * @summary Send Agent Bulk Email
     * @param {string} agentId 
     * @param {BodySendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPost} bodySendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPost 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentEmailApiInterface
     */
    sendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPostRaw(requestParameters: SendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmailBulkResponse>>;

    /**
     * Send bulk emails from one agent to multiple agents.  Args:     agent_id: Sender agent ID     request: Agent bulk email request     current_user: Current authenticated user  Returns:     EmailBulkResponse: Bulk send results
     * Send Agent Bulk Email
     */
    sendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPost(requestParameters: SendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmailBulkResponse>;

    /**
     * Send email from one agent to another.  Args:     agent_id: Sender agent ID     request: Agent email send request     current_user: Current authenticated user  Returns:     EmailSendResponse: Send result
     * @summary Send Agent Email
     * @param {string} agentId 
     * @param {BodySendAgentEmailApiEmailAgentsAgentIdSendPost} bodySendAgentEmailApiEmailAgentsAgentIdSendPost 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentEmailApiInterface
     */
    sendAgentEmailApiEmailAgentsAgentIdSendPostRaw(requestParameters: SendAgentEmailApiEmailAgentsAgentIdSendPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmailSendResponse>>;

    /**
     * Send email from one agent to another.  Args:     agent_id: Sender agent ID     request: Agent email send request     current_user: Current authenticated user  Returns:     EmailSendResponse: Send result
     * Send Agent Email
     */
    sendAgentEmailApiEmailAgentsAgentIdSendPost(requestParameters: SendAgentEmailApiEmailAgentsAgentIdSendPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmailSendResponse>;

    /**
     * Trigger automated email for an agent based on events.  Args:     agent_id: Agent ID     request: Trigger request     background_tasks: Background tasks     current_user: Current authenticated user  Returns:     Dict: Trigger result
     * @summary Trigger Agent Automated Email
     * @param {string} agentId 
     * @param {BodyTriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPost} bodyTriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPost 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentEmailApiInterface
     */
    triggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPostRaw(requestParameters: TriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;

    /**
     * Trigger automated email for an agent based on events.  Args:     agent_id: Agent ID     request: Trigger request     background_tasks: Background tasks     current_user: Current authenticated user  Returns:     Dict: Trigger result
     * Trigger Agent Automated Email
     */
    triggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPost(requestParameters: TriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;

    /**
     * Update agent email configuration.  Args:     agent_id: Agent ID     config: New agent email configuration     current_user: Current authenticated user  Returns:     AgentEmailConfig: Updated agent email configuration
     * @summary Update Agent Email Config
     * @param {string} agentId 
     * @param {BodyUpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPut} bodyUpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPut 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentEmailApiInterface
     */
    updateAgentEmailConfigApiEmailAgentsAgentIdConfigPutRaw(requestParameters: UpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentEmailConfig>>;

    /**
     * Update agent email configuration.  Args:     agent_id: Agent ID     config: New agent email configuration     current_user: Current authenticated user  Returns:     AgentEmailConfig: Updated agent email configuration
     * Update Agent Email Config
     */
    updateAgentEmailConfigApiEmailAgentsAgentIdConfigPut(requestParameters: UpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentEmailConfig>;

}

/**
 * 
 */
export class AgentEmailApi extends runtime.BaseAPI implements AgentEmailApiInterface {

    /**
     * Create agent email template.  Args:     agent_id: Agent ID     template: Agent email template     current_user: Current authenticated user  Returns:     AgentEmailTemplate: Created agent email template
     * Create Agent Email Template
     */
    async createAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPostRaw(requestParameters: CreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentEmailTemplate>> {
        if (requestParameters['agentId'] == null) {
            throw new runtime.RequiredError(
                'agentId',
                'Required parameter "agentId" was null or undefined when calling createAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPost().'
            );
        }

        if (requestParameters['bodyCreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPost'] == null) {
            throw new runtime.RequiredError(
                'bodyCreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPost',
                'Required parameter "bodyCreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPost" was null or undefined when calling createAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/email/agents/{agent_id}/templates`;
        urlPath = urlPath.replace(`{${"agent_id"}}`, encodeURIComponent(String(requestParameters['agentId'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BodyCreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPostToJSON(requestParameters['bodyCreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPost']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AgentEmailTemplateFromJSON(jsonValue));
    }

    /**
     * Create agent email template.  Args:     agent_id: Agent ID     template: Agent email template     current_user: Current authenticated user  Returns:     AgentEmailTemplate: Created agent email template
     * Create Agent Email Template
     */
    async createAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPost(requestParameters: CreateAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentEmailTemplate> {
        const response = await this.createAgentEmailTemplateApiEmailAgentsAgentIdTemplatesPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Delete agent email template.  Args:     agent_id: Agent ID     template_id: Template ID     current_user: Current authenticated user  Returns:     Dict: Deletion result
     * Delete Agent Email Template
     */
    async deleteAgentEmailTemplateApiEmailAgentsAgentIdTemplatesTemplateIdDeleteRaw(requestParameters: DeleteAgentEmailTemplateApiEmailAgentsAgentIdTemplatesTemplateIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['agentId'] == null) {
            throw new runtime.RequiredError(
                'agentId',
                'Required parameter "agentId" was null or undefined when calling deleteAgentEmailTemplateApiEmailAgentsAgentIdTemplatesTemplateIdDelete().'
            );
        }

        if (requestParameters['templateId'] == null) {
            throw new runtime.RequiredError(
                'templateId',
                'Required parameter "templateId" was null or undefined when calling deleteAgentEmailTemplateApiEmailAgentsAgentIdTemplatesTemplateIdDelete().'
            );
        }

        if (requestParameters['requestBody'] == null) {
            throw new runtime.RequiredError(
                'requestBody',
                'Required parameter "requestBody" was null or undefined when calling deleteAgentEmailTemplateApiEmailAgentsAgentIdTemplatesTemplateIdDelete().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/email/agents/{agent_id}/templates/{template_id}`;
        urlPath = urlPath.replace(`{${"agent_id"}}`, encodeURIComponent(String(requestParameters['agentId'])));
        urlPath = urlPath.replace(`{${"template_id"}}`, encodeURIComponent(String(requestParameters['templateId'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['requestBody'],
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Delete agent email template.  Args:     agent_id: Agent ID     template_id: Template ID     current_user: Current authenticated user  Returns:     Dict: Deletion result
     * Delete Agent Email Template
     */
    async deleteAgentEmailTemplateApiEmailAgentsAgentIdTemplatesTemplateIdDelete(requestParameters: DeleteAgentEmailTemplateApiEmailAgentsAgentIdTemplatesTemplateIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.deleteAgentEmailTemplateApiEmailAgentsAgentIdTemplatesTemplateIdDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get agent email configuration.  Args:     agent_id: Agent ID     current_user: Current authenticated user  Returns:     AgentEmailConfig: Agent email configuration
     * Get Agent Email Config
     */
    async getAgentEmailConfigApiEmailAgentsAgentIdConfigGetRaw(requestParameters: GetAgentEmailConfigApiEmailAgentsAgentIdConfigGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentEmailConfig>> {
        if (requestParameters['agentId'] == null) {
            throw new runtime.RequiredError(
                'agentId',
                'Required parameter "agentId" was null or undefined when calling getAgentEmailConfigApiEmailAgentsAgentIdConfigGet().'
            );
        }

        if (requestParameters['requestBody'] == null) {
            throw new runtime.RequiredError(
                'requestBody',
                'Required parameter "requestBody" was null or undefined when calling getAgentEmailConfigApiEmailAgentsAgentIdConfigGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/email/agents/{agent_id}/config`;
        urlPath = urlPath.replace(`{${"agent_id"}}`, encodeURIComponent(String(requestParameters['agentId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['requestBody'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AgentEmailConfigFromJSON(jsonValue));
    }

    /**
     * Get agent email configuration.  Args:     agent_id: Agent ID     current_user: Current authenticated user  Returns:     AgentEmailConfig: Agent email configuration
     * Get Agent Email Config
     */
    async getAgentEmailConfigApiEmailAgentsAgentIdConfigGet(requestParameters: GetAgentEmailConfigApiEmailAgentsAgentIdConfigGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentEmailConfig> {
        const response = await this.getAgentEmailConfigApiEmailAgentsAgentIdConfigGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get agent email interactions.  Args:     agent_id: Agent ID     limit: Number of interactions to return     offset: Number of interactions to skip     current_user: Current authenticated user  Returns:     Dict: Agent email interactions
     * Get Agent Email Interactions
     */
    async getAgentEmailInteractionsApiEmailAgentsAgentIdInteractionsGetRaw(requestParameters: GetAgentEmailInteractionsApiEmailAgentsAgentIdInteractionsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['agentId'] == null) {
            throw new runtime.RequiredError(
                'agentId',
                'Required parameter "agentId" was null or undefined when calling getAgentEmailInteractionsApiEmailAgentsAgentIdInteractionsGet().'
            );
        }

        if (requestParameters['requestBody'] == null) {
            throw new runtime.RequiredError(
                'requestBody',
                'Required parameter "requestBody" was null or undefined when calling getAgentEmailInteractionsApiEmailAgentsAgentIdInteractionsGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/email/agents/{agent_id}/interactions`;
        urlPath = urlPath.replace(`{${"agent_id"}}`, encodeURIComponent(String(requestParameters['agentId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['requestBody'],
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Get agent email interactions.  Args:     agent_id: Agent ID     limit: Number of interactions to return     offset: Number of interactions to skip     current_user: Current authenticated user  Returns:     Dict: Agent email interactions
     * Get Agent Email Interactions
     */
    async getAgentEmailInteractionsApiEmailAgentsAgentIdInteractionsGet(requestParameters: GetAgentEmailInteractionsApiEmailAgentsAgentIdInteractionsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.getAgentEmailInteractionsApiEmailAgentsAgentIdInteractionsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get agent email messages.  Args:     agent_id: Agent ID     limit: Number of messages to return     offset: Number of messages to skip     current_user: Current authenticated user  Returns:     Dict: Agent email messages
     * Get Agent Email Messages
     */
    async getAgentEmailMessagesApiEmailAgentsAgentIdMessagesGetRaw(requestParameters: GetAgentEmailMessagesApiEmailAgentsAgentIdMessagesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['agentId'] == null) {
            throw new runtime.RequiredError(
                'agentId',
                'Required parameter "agentId" was null or undefined when calling getAgentEmailMessagesApiEmailAgentsAgentIdMessagesGet().'
            );
        }

        if (requestParameters['requestBody'] == null) {
            throw new runtime.RequiredError(
                'requestBody',
                'Required parameter "requestBody" was null or undefined when calling getAgentEmailMessagesApiEmailAgentsAgentIdMessagesGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/email/agents/{agent_id}/messages`;
        urlPath = urlPath.replace(`{${"agent_id"}}`, encodeURIComponent(String(requestParameters['agentId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['requestBody'],
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Get agent email messages.  Args:     agent_id: Agent ID     limit: Number of messages to return     offset: Number of messages to skip     current_user: Current authenticated user  Returns:     Dict: Agent email messages
     * Get Agent Email Messages
     */
    async getAgentEmailMessagesApiEmailAgentsAgentIdMessagesGet(requestParameters: GetAgentEmailMessagesApiEmailAgentsAgentIdMessagesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.getAgentEmailMessagesApiEmailAgentsAgentIdMessagesGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get agent email statistics.  Args:     agent_id: Agent ID     current_user: Current authenticated user  Returns:     AgentEmailStats: Agent email statistics
     * Get Agent Email Stats
     */
    async getAgentEmailStatsApiEmailAgentsAgentIdStatsGetRaw(requestParameters: GetAgentEmailStatsApiEmailAgentsAgentIdStatsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentEmailStats>> {
        if (requestParameters['agentId'] == null) {
            throw new runtime.RequiredError(
                'agentId',
                'Required parameter "agentId" was null or undefined when calling getAgentEmailStatsApiEmailAgentsAgentIdStatsGet().'
            );
        }

        if (requestParameters['requestBody'] == null) {
            throw new runtime.RequiredError(
                'requestBody',
                'Required parameter "requestBody" was null or undefined when calling getAgentEmailStatsApiEmailAgentsAgentIdStatsGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/email/agents/{agent_id}/stats`;
        urlPath = urlPath.replace(`{${"agent_id"}}`, encodeURIComponent(String(requestParameters['agentId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['requestBody'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AgentEmailStatsFromJSON(jsonValue));
    }

    /**
     * Get agent email statistics.  Args:     agent_id: Agent ID     current_user: Current authenticated user  Returns:     AgentEmailStats: Agent email statistics
     * Get Agent Email Stats
     */
    async getAgentEmailStatsApiEmailAgentsAgentIdStatsGet(requestParameters: GetAgentEmailStatsApiEmailAgentsAgentIdStatsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentEmailStats> {
        const response = await this.getAgentEmailStatsApiEmailAgentsAgentIdStatsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get agent email templates.  Args:     agent_id: Agent ID     current_user: Current authenticated user  Returns:     List[AgentEmailTemplate]: Agent email templates
     * Get Agent Email Templates
     */
    async getAgentEmailTemplatesApiEmailAgentsAgentIdTemplatesGetRaw(requestParameters: GetAgentEmailTemplatesApiEmailAgentsAgentIdTemplatesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<AgentEmailTemplate>>> {
        if (requestParameters['agentId'] == null) {
            throw new runtime.RequiredError(
                'agentId',
                'Required parameter "agentId" was null or undefined when calling getAgentEmailTemplatesApiEmailAgentsAgentIdTemplatesGet().'
            );
        }

        if (requestParameters['requestBody'] == null) {
            throw new runtime.RequiredError(
                'requestBody',
                'Required parameter "requestBody" was null or undefined when calling getAgentEmailTemplatesApiEmailAgentsAgentIdTemplatesGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/email/agents/{agent_id}/templates`;
        urlPath = urlPath.replace(`{${"agent_id"}}`, encodeURIComponent(String(requestParameters['agentId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['requestBody'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(AgentEmailTemplateFromJSON));
    }

    /**
     * Get agent email templates.  Args:     agent_id: Agent ID     current_user: Current authenticated user  Returns:     List[AgentEmailTemplate]: Agent email templates
     * Get Agent Email Templates
     */
    async getAgentEmailTemplatesApiEmailAgentsAgentIdTemplatesGet(requestParameters: GetAgentEmailTemplatesApiEmailAgentsAgentIdTemplatesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<AgentEmailTemplate>> {
        const response = await this.getAgentEmailTemplatesApiEmailAgentsAgentIdTemplatesGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Send bulk emails from one agent to multiple agents.  Args:     agent_id: Sender agent ID     request: Agent bulk email request     current_user: Current authenticated user  Returns:     EmailBulkResponse: Bulk send results
     * Send Agent Bulk Email
     */
    async sendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPostRaw(requestParameters: SendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmailBulkResponse>> {
        if (requestParameters['agentId'] == null) {
            throw new runtime.RequiredError(
                'agentId',
                'Required parameter "agentId" was null or undefined when calling sendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPost().'
            );
        }

        if (requestParameters['bodySendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPost'] == null) {
            throw new runtime.RequiredError(
                'bodySendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPost',
                'Required parameter "bodySendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPost" was null or undefined when calling sendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/email/agents/{agent_id}/send-bulk`;
        urlPath = urlPath.replace(`{${"agent_id"}}`, encodeURIComponent(String(requestParameters['agentId'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BodySendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPostToJSON(requestParameters['bodySendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPost']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmailBulkResponseFromJSON(jsonValue));
    }

    /**
     * Send bulk emails from one agent to multiple agents.  Args:     agent_id: Sender agent ID     request: Agent bulk email request     current_user: Current authenticated user  Returns:     EmailBulkResponse: Bulk send results
     * Send Agent Bulk Email
     */
    async sendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPost(requestParameters: SendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmailBulkResponse> {
        const response = await this.sendAgentBulkEmailApiEmailAgentsAgentIdSendBulkPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Send email from one agent to another.  Args:     agent_id: Sender agent ID     request: Agent email send request     current_user: Current authenticated user  Returns:     EmailSendResponse: Send result
     * Send Agent Email
     */
    async sendAgentEmailApiEmailAgentsAgentIdSendPostRaw(requestParameters: SendAgentEmailApiEmailAgentsAgentIdSendPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmailSendResponse>> {
        if (requestParameters['agentId'] == null) {
            throw new runtime.RequiredError(
                'agentId',
                'Required parameter "agentId" was null or undefined when calling sendAgentEmailApiEmailAgentsAgentIdSendPost().'
            );
        }

        if (requestParameters['bodySendAgentEmailApiEmailAgentsAgentIdSendPost'] == null) {
            throw new runtime.RequiredError(
                'bodySendAgentEmailApiEmailAgentsAgentIdSendPost',
                'Required parameter "bodySendAgentEmailApiEmailAgentsAgentIdSendPost" was null or undefined when calling sendAgentEmailApiEmailAgentsAgentIdSendPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/email/agents/{agent_id}/send`;
        urlPath = urlPath.replace(`{${"agent_id"}}`, encodeURIComponent(String(requestParameters['agentId'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BodySendAgentEmailApiEmailAgentsAgentIdSendPostToJSON(requestParameters['bodySendAgentEmailApiEmailAgentsAgentIdSendPost']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmailSendResponseFromJSON(jsonValue));
    }

    /**
     * Send email from one agent to another.  Args:     agent_id: Sender agent ID     request: Agent email send request     current_user: Current authenticated user  Returns:     EmailSendResponse: Send result
     * Send Agent Email
     */
    async sendAgentEmailApiEmailAgentsAgentIdSendPost(requestParameters: SendAgentEmailApiEmailAgentsAgentIdSendPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmailSendResponse> {
        const response = await this.sendAgentEmailApiEmailAgentsAgentIdSendPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Trigger automated email for an agent based on events.  Args:     agent_id: Agent ID     request: Trigger request     background_tasks: Background tasks     current_user: Current authenticated user  Returns:     Dict: Trigger result
     * Trigger Agent Automated Email
     */
    async triggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPostRaw(requestParameters: TriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['agentId'] == null) {
            throw new runtime.RequiredError(
                'agentId',
                'Required parameter "agentId" was null or undefined when calling triggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPost().'
            );
        }

        if (requestParameters['bodyTriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPost'] == null) {
            throw new runtime.RequiredError(
                'bodyTriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPost',
                'Required parameter "bodyTriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPost" was null or undefined when calling triggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/email/agents/{agent_id}/trigger`;
        urlPath = urlPath.replace(`{${"agent_id"}}`, encodeURIComponent(String(requestParameters['agentId'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BodyTriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPostToJSON(requestParameters['bodyTriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPost']),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Trigger automated email for an agent based on events.  Args:     agent_id: Agent ID     request: Trigger request     background_tasks: Background tasks     current_user: Current authenticated user  Returns:     Dict: Trigger result
     * Trigger Agent Automated Email
     */
    async triggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPost(requestParameters: TriggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.triggerAgentAutomatedEmailApiEmailAgentsAgentIdTriggerPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Update agent email configuration.  Args:     agent_id: Agent ID     config: New agent email configuration     current_user: Current authenticated user  Returns:     AgentEmailConfig: Updated agent email configuration
     * Update Agent Email Config
     */
    async updateAgentEmailConfigApiEmailAgentsAgentIdConfigPutRaw(requestParameters: UpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentEmailConfig>> {
        if (requestParameters['agentId'] == null) {
            throw new runtime.RequiredError(
                'agentId',
                'Required parameter "agentId" was null or undefined when calling updateAgentEmailConfigApiEmailAgentsAgentIdConfigPut().'
            );
        }

        if (requestParameters['bodyUpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPut'] == null) {
            throw new runtime.RequiredError(
                'bodyUpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPut',
                'Required parameter "bodyUpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPut" was null or undefined when calling updateAgentEmailConfigApiEmailAgentsAgentIdConfigPut().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/email/agents/{agent_id}/config`;
        urlPath = urlPath.replace(`{${"agent_id"}}`, encodeURIComponent(String(requestParameters['agentId'])));

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: BodyUpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPutToJSON(requestParameters['bodyUpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPut']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AgentEmailConfigFromJSON(jsonValue));
    }

    /**
     * Update agent email configuration.  Args:     agent_id: Agent ID     config: New agent email configuration     current_user: Current authenticated user  Returns:     AgentEmailConfig: Updated agent email configuration
     * Update Agent Email Config
     */
    async updateAgentEmailConfigApiEmailAgentsAgentIdConfigPut(requestParameters: UpdateAgentEmailConfigApiEmailAgentsAgentIdConfigPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentEmailConfig> {
        const response = await this.updateAgentEmailConfigApiEmailAgentsAgentIdConfigPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
