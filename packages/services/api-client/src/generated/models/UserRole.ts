/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * User role options for access control.
 *
 * Defines the different roles a user can have within the application:
 * - admin: Full administrative privileges
 * - regular: Standard user with view and edit permissions for own content
 * - guest: Limited view-only access
 * @export
 */
export const UserRole = {
  Admin: "admin",
  Regular: "regular",
  Guest: "guest",
} as const;
export type UserRole = (typeof UserRole)[keyof typeof UserRole];

export function instanceOfUserRole(value: any): boolean {
  for (const key in UserRole) {
    if (Object.prototype.hasOwnProperty.call(UserRole, key)) {
      if (UserRole[key as keyof typeof UserRole] === value) {
        return true;
      }
    }
  }
  return false;
}

export function UserRoleFromJSON(json: any): UserRole {
  return UserRoleFromJSONTyped(json, false);
}

export function UserRoleFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserRole {
  return json as UserRole;
}

export function UserRoleToJSON(value?: UserRole | null): any {
  return value as any;
}

export function UserRoleToJSONTyped(value: any, ignoreDiscriminator: boolean): UserRole {
  return value as UserRole;
}
