/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Query suggestion model.
 * @export
 * @interface QuerySuggestion
 */
export interface QuerySuggestion {
  /**
   * Suggested query
   * @type {string}
   * @memberof QuerySuggestion
   */
  suggestion: string;
  /**
   * Confidence score
   * @type {number}
   * @memberof QuerySuggestion
   */
  confidence: number;
  /**
   * Suggestion type: synonym, pattern, completion
   * @type {string}
   * @memberof QuerySuggestion
   */
  type: string;
}

/**
 * Check if a given object implements the QuerySuggestion interface.
 */
export function instanceOfQuerySuggestion(value: object): value is QuerySuggestion {
  if (!("suggestion" in value) || value["suggestion"] === undefined) return false;
  if (!("confidence" in value) || value["confidence"] === undefined) return false;
  if (!("type" in value) || value["type"] === undefined) return false;
  return true;
}

export function QuerySuggestionFromJSON(json: any): QuerySuggestion {
  return QuerySuggestionFromJSONTyped(json, false);
}

export function QuerySuggestionFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuerySuggestion {
  if (json == null) {
    return json;
  }
  return {
    suggestion: json["suggestion"],
    confidence: json["confidence"],
    type: json["type"],
  };
}

export function QuerySuggestionToJSON(json: any): QuerySuggestion {
  return QuerySuggestionToJSONTyped(json, false);
}

export function QuerySuggestionToJSONTyped(value?: QuerySuggestion | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    suggestion: value["suggestion"],
    confidence: value["confidence"],
    type: value["type"],
  };
}
