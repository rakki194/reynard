/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Context information for NLWeb queries.
 * @export
 * @interface NLWebContext
 */
export interface NLWebContext {
  /**
   *
   * @type {string}
   * @memberof NLWebContext
   */
  currentPath?: string | null;
  /**
   *
   * @type {Array<string>}
   * @memberof NLWebContext
   */
  selectedItems?: Array<string> | null;
  /**
   *
   * @type {object}
   * @memberof NLWebContext
   */
  gitStatus?: object | null;
  /**
   *
   * @type {object}
   * @memberof NLWebContext
   */
  userPreferences?: object | null;
  /**
   *
   * @type {object}
   * @memberof NLWebContext
   */
  applicationState?: object | null;
  /**
   *
   * @type {string}
   * @memberof NLWebContext
   */
  userId?: string | null;
  /**
   *
   * @type {string}
   * @memberof NLWebContext
   */
  sessionId?: string | null;
}

/**
 * Check if a given object implements the NLWebContext interface.
 */
export function instanceOfNLWebContext(value: object): value is NLWebContext {
  return true;
}

export function NLWebContextFromJSON(json: any): NLWebContext {
  return NLWebContextFromJSONTyped(json, false);
}

export function NLWebContextFromJSONTyped(json: any, ignoreDiscriminator: boolean): NLWebContext {
  if (json == null) {
    return json;
  }
  return {
    currentPath: json["current_path"] == null ? undefined : json["current_path"],
    selectedItems: json["selected_items"] == null ? undefined : json["selected_items"],
    gitStatus: json["git_status"] == null ? undefined : json["git_status"],
    userPreferences: json["user_preferences"] == null ? undefined : json["user_preferences"],
    applicationState: json["application_state"] == null ? undefined : json["application_state"],
    userId: json["user_id"] == null ? undefined : json["user_id"],
    sessionId: json["session_id"] == null ? undefined : json["session_id"],
  };
}

export function NLWebContextToJSON(json: any): NLWebContext {
  return NLWebContextToJSONTyped(json, false);
}

export function NLWebContextToJSONTyped(value?: NLWebContext | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    current_path: value["currentPath"],
    selected_items: value["selectedItems"],
    git_status: value["gitStatus"],
    user_preferences: value["userPreferences"],
    application_state: value["applicationState"],
    user_id: value["userId"],
    session_id: value["sessionId"],
  };
}
