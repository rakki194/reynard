/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Request model for bulk email sending.
 * @export
 * @interface EmailBulkRequest
 */
export interface EmailBulkRequest {
  /**
   * List of recipient email addresses
   * @type {Array<string>}
   * @memberof EmailBulkRequest
   */
  toEmails: Array<string>;
  /**
   * Email subject
   * @type {string}
   * @memberof EmailBulkRequest
   */
  subject: string;
  /**
   * Plain text email body
   * @type {string}
   * @memberof EmailBulkRequest
   */
  body: string;
  /**
   *
   * @type {string}
   * @memberof EmailBulkRequest
   */
  htmlBody?: string | null;
  /**
   * Number of emails to send per batch
   * @type {number}
   * @memberof EmailBulkRequest
   */
  batchSize?: number;
  /**
   * Delay between batches in seconds
   * @type {number}
   * @memberof EmailBulkRequest
   */
  delayBetweenBatches?: number;
}

/**
 * Check if a given object implements the EmailBulkRequest interface.
 */
export function instanceOfEmailBulkRequest(value: object): value is EmailBulkRequest {
  if (!("toEmails" in value) || value["toEmails"] === undefined) return false;
  if (!("subject" in value) || value["subject"] === undefined) return false;
  if (!("body" in value) || value["body"] === undefined) return false;
  return true;
}

export function EmailBulkRequestFromJSON(json: any): EmailBulkRequest {
  return EmailBulkRequestFromJSONTyped(json, false);
}

export function EmailBulkRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailBulkRequest {
  if (json == null) {
    return json;
  }
  return {
    toEmails: json["to_emails"],
    subject: json["subject"],
    body: json["body"],
    htmlBody: json["html_body"] == null ? undefined : json["html_body"],
    batchSize: json["batch_size"] == null ? undefined : json["batch_size"],
    delayBetweenBatches: json["delay_between_batches"] == null ? undefined : json["delay_between_batches"],
  };
}

export function EmailBulkRequestToJSON(json: any): EmailBulkRequest {
  return EmailBulkRequestToJSONTyped(json, false);
}

export function EmailBulkRequestToJSONTyped(
  value?: EmailBulkRequest | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    to_emails: value["toEmails"],
    subject: value["subject"],
    body: value["body"],
    html_body: value["htmlBody"],
    batch_size: value["batchSize"],
    delay_between_batches: value["delayBetweenBatches"],
  };
}
