/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Email status model.
 * @export
 * @interface EmailStatusModel
 */
export interface EmailStatusModel {
  /**
   * Whether email service is properly configured
   * @type {boolean}
   * @memberof EmailStatusModel
   */
  serviceConfigured: boolean;
  /**
   * SMTP server being used
   * @type {string}
   * @memberof EmailStatusModel
   */
  smtpServer: string;
  /**
   * Default from email
   * @type {string}
   * @memberof EmailStatusModel
   */
  fromEmail: string;
  /**
   * Whether SMTP connection test passed
   * @type {boolean}
   * @memberof EmailStatusModel
   */
  testConnection: boolean;
  /**
   *
   * @type {Date}
   * @memberof EmailStatusModel
   */
  lastTestTime?: Date | null;
}

/**
 * Check if a given object implements the EmailStatusModel interface.
 */
export function instanceOfEmailStatusModel(value: object): value is EmailStatusModel {
  if (!("serviceConfigured" in value) || value["serviceConfigured"] === undefined) return false;
  if (!("smtpServer" in value) || value["smtpServer"] === undefined) return false;
  if (!("fromEmail" in value) || value["fromEmail"] === undefined) return false;
  if (!("testConnection" in value) || value["testConnection"] === undefined) return false;
  return true;
}

export function EmailStatusModelFromJSON(json: any): EmailStatusModel {
  return EmailStatusModelFromJSONTyped(json, false);
}

export function EmailStatusModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailStatusModel {
  if (json == null) {
    return json;
  }
  return {
    serviceConfigured: json["service_configured"],
    smtpServer: json["smtp_server"],
    fromEmail: json["from_email"],
    testConnection: json["test_connection"],
    lastTestTime: json["last_test_time"] == null ? undefined : new Date(json["last_test_time"]),
  };
}

export function EmailStatusModelToJSON(json: any): EmailStatusModel {
  return EmailStatusModelToJSONTyped(json, false);
}

export function EmailStatusModelToJSONTyped(
  value?: EmailStatusModel | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    service_configured: value["serviceConfigured"],
    smtp_server: value["smtpServer"],
    from_email: value["fromEmail"],
    test_connection: value["testConnection"],
    last_test_time: value["lastTestTime"] === null ? null : (value["lastTestTime"] as any)?.toISOString(),
  };
}
