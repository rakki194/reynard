/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Secure user creation model.
 * @export
 * @interface SecureUserCreate
 */
export interface SecureUserCreate {
  [key: string]: any | any;
  /**
   * Username
   * @type {string}
   * @memberof SecureUserCreate
   */
  username: string;
  /**
   * Email address
   * @type {string}
   * @memberof SecureUserCreate
   */
  email: string;
  /**
   * Password
   * @type {string}
   * @memberof SecureUserCreate
   */
  password: string;
  /**
   * Full name
   * @type {string}
   * @memberof SecureUserCreate
   */
  fullName: string;
}

/**
 * Check if a given object implements the SecureUserCreate interface.
 */
export function instanceOfSecureUserCreate(value: object): value is SecureUserCreate {
  if (!("username" in value) || value["username"] === undefined) return false;
  if (!("email" in value) || value["email"] === undefined) return false;
  if (!("password" in value) || value["password"] === undefined) return false;
  if (!("fullName" in value) || value["fullName"] === undefined) return false;
  return true;
}

export function SecureUserCreateFromJSON(json: any): SecureUserCreate {
  return SecureUserCreateFromJSONTyped(json, false);
}

export function SecureUserCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecureUserCreate {
  if (json == null) {
    return json;
  }
  return {
    ...json,
    username: json["username"],
    email: json["email"],
    password: json["password"],
    fullName: json["full_name"],
  };
}

export function SecureUserCreateToJSON(json: any): SecureUserCreate {
  return SecureUserCreateToJSONTyped(json, false);
}

export function SecureUserCreateToJSONTyped(
  value?: SecureUserCreate | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    ...value,
    username: value["username"],
    email: value["email"],
    password: value["password"],
    full_name: value["fullName"],
  };
}
