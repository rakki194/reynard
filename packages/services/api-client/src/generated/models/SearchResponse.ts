/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { SearchResult } from "./SearchResult";
import {
  SearchResultFromJSON,
  SearchResultFromJSONTyped,
  SearchResultToJSON,
  SearchResultToJSONTyped,
} from "./SearchResult";

/**
 * Search response model.
 * @export
 * @interface SearchResponse
 */
export interface SearchResponse {
  /**
   * Whether the search was successful
   * @type {boolean}
   * @memberof SearchResponse
   */
  success: boolean;
  /**
   * Original search query
   * @type {string}
   * @memberof SearchResponse
   */
  query: string;
  /**
   * Total number of results found
   * @type {number}
   * @memberof SearchResponse
   */
  totalResults: number;
  /**
   * Search results
   * @type {Array<SearchResult>}
   * @memberof SearchResponse
   */
  results: Array<SearchResult>;
  /**
   * Search execution time in seconds
   * @type {number}
   * @memberof SearchResponse
   */
  searchTime: number;
  /**
   * Search strategies used
   * @type {Array<string>}
   * @memberof SearchResponse
   */
  searchStrategies?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof SearchResponse
   */
  error?: string | null;
}

/**
 * Check if a given object implements the SearchResponse interface.
 */
export function instanceOfSearchResponse(value: object): value is SearchResponse {
  if (!("success" in value) || value["success"] === undefined) return false;
  if (!("query" in value) || value["query"] === undefined) return false;
  if (!("totalResults" in value) || value["totalResults"] === undefined) return false;
  if (!("results" in value) || value["results"] === undefined) return false;
  if (!("searchTime" in value) || value["searchTime"] === undefined) return false;
  return true;
}

export function SearchResponseFromJSON(json: any): SearchResponse {
  return SearchResponseFromJSONTyped(json, false);
}

export function SearchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchResponse {
  if (json == null) {
    return json;
  }
  return {
    success: json["success"],
    query: json["query"],
    totalResults: json["total_results"],
    results: (json["results"] as Array<any>).map(SearchResultFromJSON),
    searchTime: json["search_time"],
    searchStrategies: json["search_strategies"] == null ? undefined : json["search_strategies"],
    error: json["error"] == null ? undefined : json["error"],
  };
}

export function SearchResponseToJSON(json: any): SearchResponse {
  return SearchResponseToJSONTyped(json, false);
}

export function SearchResponseToJSONTyped(value?: SearchResponse | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    success: value["success"],
    query: value["query"],
    total_results: value["totalResults"],
    results: (value["results"] as Array<any>).map(SearchResultToJSON),
    search_time: value["searchTime"],
    search_strategies: value["searchStrategies"],
    error: value["error"],
  };
}
