/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { EmailAttachmentModel } from "./EmailAttachmentModel";
import {
  EmailAttachmentModelFromJSON,
  EmailAttachmentModelFromJSONTyped,
  EmailAttachmentModelToJSON,
  EmailAttachmentModelToJSONTyped,
} from "./EmailAttachmentModel";

/**
 * Request model for sending emails.
 * @export
 * @interface EmailSendRequest
 */
export interface EmailSendRequest {
  /**
   * List of recipient email addresses
   * @type {Array<string>}
   * @memberof EmailSendRequest
   */
  toEmails: Array<string>;
  /**
   * Email subject
   * @type {string}
   * @memberof EmailSendRequest
   */
  subject: string;
  /**
   * Plain text email body
   * @type {string}
   * @memberof EmailSendRequest
   */
  body: string;
  /**
   *
   * @type {string}
   * @memberof EmailSendRequest
   */
  htmlBody?: string | null;
  /**
   *
   * @type {Array<string>}
   * @memberof EmailSendRequest
   */
  ccEmails?: Array<string> | null;
  /**
   *
   * @type {Array<string>}
   * @memberof EmailSendRequest
   */
  bccEmails?: Array<string> | null;
  /**
   *
   * @type {Array<EmailAttachmentModel>}
   * @memberof EmailSendRequest
   */
  attachments?: Array<EmailAttachmentModel> | null;
  /**
   *
   * @type {string}
   * @memberof EmailSendRequest
   */
  replyTo?: string | null;
}

/**
 * Check if a given object implements the EmailSendRequest interface.
 */
export function instanceOfEmailSendRequest(value: object): value is EmailSendRequest {
  if (!("toEmails" in value) || value["toEmails"] === undefined) return false;
  if (!("subject" in value) || value["subject"] === undefined) return false;
  if (!("body" in value) || value["body"] === undefined) return false;
  return true;
}

export function EmailSendRequestFromJSON(json: any): EmailSendRequest {
  return EmailSendRequestFromJSONTyped(json, false);
}

export function EmailSendRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailSendRequest {
  if (json == null) {
    return json;
  }
  return {
    toEmails: json["to_emails"],
    subject: json["subject"],
    body: json["body"],
    htmlBody: json["html_body"] == null ? undefined : json["html_body"],
    ccEmails: json["cc_emails"] == null ? undefined : json["cc_emails"],
    bccEmails: json["bcc_emails"] == null ? undefined : json["bcc_emails"],
    attachments:
      json["attachments"] == null ? undefined : (json["attachments"] as Array<any>).map(EmailAttachmentModelFromJSON),
    replyTo: json["reply_to"] == null ? undefined : json["reply_to"],
  };
}

export function EmailSendRequestToJSON(json: any): EmailSendRequest {
  return EmailSendRequestToJSONTyped(json, false);
}

export function EmailSendRequestToJSONTyped(
  value?: EmailSendRequest | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    to_emails: value["toEmails"],
    subject: value["subject"],
    body: value["body"],
    html_body: value["htmlBody"],
    cc_emails: value["ccEmails"],
    bcc_emails: value["bccEmails"],
    attachments:
      value["attachments"] == null ? undefined : (value["attachments"] as Array<any>).map(EmailAttachmentModelToJSON),
    reply_to: value["replyTo"],
  };
}
