/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Response model for document ingestion.
 * @export
 * @interface RAGIngestResponse
 */
export interface RAGIngestResponse {
  /**
   * Number of documents processed
   * @type {number}
   * @memberof RAGIngestResponse
   */
  processed: number;
  /**
   * Total number of documents
   * @type {number}
   * @memberof RAGIngestResponse
   */
  total: number;
  /**
   * Number of failed documents
   * @type {number}
   * @memberof RAGIngestResponse
   */
  failures?: number;
  /**
   *
   * @type {number}
   * @memberof RAGIngestResponse
   */
  processingTime?: number | null;
  /**
   *
   * @type {string}
   * @memberof RAGIngestResponse
   */
  message?: string | null;
}

/**
 * Check if a given object implements the RAGIngestResponse interface.
 */
export function instanceOfRAGIngestResponse(value: object): value is RAGIngestResponse {
  if (!("processed" in value) || value["processed"] === undefined) return false;
  if (!("total" in value) || value["total"] === undefined) return false;
  return true;
}

export function RAGIngestResponseFromJSON(json: any): RAGIngestResponse {
  return RAGIngestResponseFromJSONTyped(json, false);
}

export function RAGIngestResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RAGIngestResponse {
  if (json == null) {
    return json;
  }
  return {
    processed: json["processed"],
    total: json["total"],
    failures: json["failures"] == null ? undefined : json["failures"],
    processingTime: json["processing_time"] == null ? undefined : json["processing_time"],
    message: json["message"] == null ? undefined : json["message"],
  };
}

export function RAGIngestResponseToJSON(json: any): RAGIngestResponse {
  return RAGIngestResponseToJSONTyped(json, false);
}

export function RAGIngestResponseToJSONTyped(
  value?: RAGIngestResponse | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    processed: value["processed"],
    total: value["total"],
    failures: value["failures"],
    processing_time: value["processingTime"],
    message: value["message"],
  };
}
