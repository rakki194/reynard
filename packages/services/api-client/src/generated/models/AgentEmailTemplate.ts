/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Agent email template model.
 * @export
 * @interface AgentEmailTemplate
 */
export interface AgentEmailTemplate {
  /**
   * Template ID
   * @type {string}
   * @memberof AgentEmailTemplate
   */
  id: string;
  /**
   * Agent ID
   * @type {string}
   * @memberof AgentEmailTemplate
   */
  agentId: string;
  /**
   * Template name
   * @type {string}
   * @memberof AgentEmailTemplate
   */
  name: string;
  /**
   * Email subject
   * @type {string}
   * @memberof AgentEmailTemplate
   */
  subject: string;
  /**
   * Email body
   * @type {string}
   * @memberof AgentEmailTemplate
   */
  body: string;
  /**
   *
   * @type {string}
   * @memberof AgentEmailTemplate
   */
  htmlBody?: string | null;
  /**
   * Template trigger conditions
   * @type {object}
   * @memberof AgentEmailTemplate
   */
  triggerConditions?: object;
  /**
   * Template variables
   * @type {Array<string>}
   * @memberof AgentEmailTemplate
   */
  variables?: Array<string>;
  /**
   * Creation timestamp
   * @type {Date}
   * @memberof AgentEmailTemplate
   */
  createdAt?: Date;
  /**
   * Last update timestamp
   * @type {Date}
   * @memberof AgentEmailTemplate
   */
  updatedAt?: Date;
}

/**
 * Check if a given object implements the AgentEmailTemplate interface.
 */
export function instanceOfAgentEmailTemplate(value: object): value is AgentEmailTemplate {
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("agentId" in value) || value["agentId"] === undefined) return false;
  if (!("name" in value) || value["name"] === undefined) return false;
  if (!("subject" in value) || value["subject"] === undefined) return false;
  if (!("body" in value) || value["body"] === undefined) return false;
  return true;
}

export function AgentEmailTemplateFromJSON(json: any): AgentEmailTemplate {
  return AgentEmailTemplateFromJSONTyped(json, false);
}

export function AgentEmailTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentEmailTemplate {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"],
    agentId: json["agent_id"],
    name: json["name"],
    subject: json["subject"],
    body: json["body"],
    htmlBody: json["html_body"] == null ? undefined : json["html_body"],
    triggerConditions: json["trigger_conditions"] == null ? undefined : json["trigger_conditions"],
    variables: json["variables"] == null ? undefined : json["variables"],
    createdAt: json["created_at"] == null ? undefined : new Date(json["created_at"]),
    updatedAt: json["updated_at"] == null ? undefined : new Date(json["updated_at"]),
  };
}

export function AgentEmailTemplateToJSON(json: any): AgentEmailTemplate {
  return AgentEmailTemplateToJSONTyped(json, false);
}

export function AgentEmailTemplateToJSONTyped(
  value?: AgentEmailTemplate | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    agent_id: value["agentId"],
    name: value["name"],
    subject: value["subject"],
    body: value["body"],
    html_body: value["htmlBody"],
    trigger_conditions: value["triggerConditions"],
    variables: value["variables"],
    created_at: value["createdAt"] == null ? undefined : value["createdAt"].toISOString(),
    updated_at: value["updatedAt"] == null ? undefined : value["updatedAt"].toISOString(),
  };
}
