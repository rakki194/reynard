/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { EmailSendResponse } from "./EmailSendResponse";
import {
  EmailSendResponseFromJSON,
  EmailSendResponseFromJSONTyped,
  EmailSendResponseToJSON,
  EmailSendResponseToJSONTyped,
} from "./EmailSendResponse";

/**
 * Response model for bulk email sending.
 * @export
 * @interface EmailBulkResponse
 */
export interface EmailBulkResponse {
  /**
   * Total number of recipients
   * @type {number}
   * @memberof EmailBulkResponse
   */
  totalRecipients: number;
  /**
   * Number of successful sends
   * @type {number}
   * @memberof EmailBulkResponse
   */
  successfulSends: number;
  /**
   * Number of failed sends
   * @type {number}
   * @memberof EmailBulkResponse
   */
  failedSends: number;
  /**
   * Number of batches processed
   * @type {number}
   * @memberof EmailBulkResponse
   */
  batchCount: number;
  /**
   * Total processing time in seconds
   * @type {number}
   * @memberof EmailBulkResponse
   */
  processingTime: number;
  /**
   * Individual send results
   * @type {Array<EmailSendResponse>}
   * @memberof EmailBulkResponse
   */
  results: Array<EmailSendResponse>;
}

/**
 * Check if a given object implements the EmailBulkResponse interface.
 */
export function instanceOfEmailBulkResponse(value: object): value is EmailBulkResponse {
  if (!("totalRecipients" in value) || value["totalRecipients"] === undefined) return false;
  if (!("successfulSends" in value) || value["successfulSends"] === undefined) return false;
  if (!("failedSends" in value) || value["failedSends"] === undefined) return false;
  if (!("batchCount" in value) || value["batchCount"] === undefined) return false;
  if (!("processingTime" in value) || value["processingTime"] === undefined) return false;
  if (!("results" in value) || value["results"] === undefined) return false;
  return true;
}

export function EmailBulkResponseFromJSON(json: any): EmailBulkResponse {
  return EmailBulkResponseFromJSONTyped(json, false);
}

export function EmailBulkResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailBulkResponse {
  if (json == null) {
    return json;
  }
  return {
    totalRecipients: json["total_recipients"],
    successfulSends: json["successful_sends"],
    failedSends: json["failed_sends"],
    batchCount: json["batch_count"],
    processingTime: json["processing_time"],
    results: (json["results"] as Array<any>).map(EmailSendResponseFromJSON),
  };
}

export function EmailBulkResponseToJSON(json: any): EmailBulkResponse {
  return EmailBulkResponseToJSONTyped(json, false);
}

export function EmailBulkResponseToJSONTyped(
  value?: EmailBulkResponse | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    total_recipients: value["totalRecipients"],
    successful_sends: value["successfulSends"],
    failed_sends: value["failedSends"],
    batch_count: value["batchCount"],
    processing_time: value["processingTime"],
    results: (value["results"] as Array<any>).map(EmailSendResponseToJSON),
  };
}
