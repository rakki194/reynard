/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { EventType } from "./EventType";
import { EventTypeFromJSON, EventTypeFromJSONTyped, EventTypeToJSON, EventTypeToJSONTyped } from "./EventType";

/**
 * Request model for triggering automated agent emails.
 * @export
 * @interface AgentEmailTriggerRequest
 */
export interface AgentEmailTriggerRequest {
  /**
   * Event type
   * @type {EventType}
   * @memberof AgentEmailTriggerRequest
   */
  eventType: EventType;
  /**
   * Event context
   * @type {object}
   * @memberof AgentEmailTriggerRequest
   */
  context?: object;
}

/**
 * Check if a given object implements the AgentEmailTriggerRequest interface.
 */
export function instanceOfAgentEmailTriggerRequest(value: object): value is AgentEmailTriggerRequest {
  if (!("eventType" in value) || value["eventType"] === undefined) return false;
  return true;
}

export function AgentEmailTriggerRequestFromJSON(json: any): AgentEmailTriggerRequest {
  return AgentEmailTriggerRequestFromJSONTyped(json, false);
}

export function AgentEmailTriggerRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): AgentEmailTriggerRequest {
  if (json == null) {
    return json;
  }
  return {
    eventType: EventTypeFromJSON(json["event_type"]),
    context: json["context"] == null ? undefined : json["context"],
  };
}

export function AgentEmailTriggerRequestToJSON(json: any): AgentEmailTriggerRequest {
  return AgentEmailTriggerRequestToJSONTyped(json, false);
}

export function AgentEmailTriggerRequestToJSONTyped(
  value?: AgentEmailTriggerRequest | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    event_type: EventTypeToJSON(value["eventType"]),
    context: value["context"],
  };
}
