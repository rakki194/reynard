/* tslint:disable */
/* eslint-disable */
/**
 * Reynard API
 * Secure API backend for Reynard applications
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Response model for lazy export operations.
 * @export
 * @interface LazyExportResponse
 */
export interface LazyExportResponse {
  /**
   *
   * @type {string}
   * @memberof LazyExportResponse
   */
  packageName: string;
  /**
   *
   * @type {boolean}
   * @memberof LazyExportResponse
   */
  isLoaded: boolean;
  /**
   *
   * @type {object}
   * @memberof LazyExportResponse
   */
  metadata: object;
}

/**
 * Check if a given object implements the LazyExportResponse interface.
 */
export function instanceOfLazyExportResponse(value: object): value is LazyExportResponse {
  if (!("packageName" in value) || value["packageName"] === undefined) return false;
  if (!("isLoaded" in value) || value["isLoaded"] === undefined) return false;
  if (!("metadata" in value) || value["metadata"] === undefined) return false;
  return true;
}

export function LazyExportResponseFromJSON(json: any): LazyExportResponse {
  return LazyExportResponseFromJSONTyped(json, false);
}

export function LazyExportResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LazyExportResponse {
  if (json == null) {
    return json;
  }
  return {
    packageName: json["package_name"],
    isLoaded: json["is_loaded"],
    metadata: json["metadata"],
  };
}

export function LazyExportResponseToJSON(json: any): LazyExportResponse {
  return LazyExportResponseToJSONTyped(json, false);
}

export function LazyExportResponseToJSONTyped(
  value?: LazyExportResponse | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    package_name: value["packageName"],
    is_loaded: value["isLoaded"],
    metadata: value["metadata"],
  };
}
