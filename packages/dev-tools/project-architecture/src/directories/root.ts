/**
 * ðŸ¦Š Root Directory Definitions
 * =============================
 *
 * Root-level directory definitions for the Reynard project architecture.
 * Contains the main organizational directories that contain other packages.
 */

import type { DirectoryDefinition } from "../types.js";
import { createDirectoryDefinition } from "../builders/directory-builder.js";
import { buildRelationships, COMMON_RELATIONSHIPS } from "../builders/relationship-builder.js";
import { INFRASTRUCTURE_METADATA } from "../config/metadata.js";
import { PACKAGE_EXCLUDE_PATTERNS, PACKAGE_INCLUDE_PATTERNS } from "../config/patterns.js";

/**
 * Root directory definitions
 */
export const ROOT_DIRECTORIES: DirectoryDefinition[] = [
  createDirectoryDefinition(
    "packages",
    "packages",
    "source",
    "critical",
    ["typescript", "javascript", "json", "markdown", "css", "html"],
    "Main packages directory containing all source code packages organized by category (core, ai, ui, services, data, media, dev-tools, docs)",
    {
      relationships: buildRelationships(
        COMMON_RELATIONSHIPS.BACKEND_SIBLING,
        COMMON_RELATIONSHIPS.EXAMPLES_SIBLING,
        COMMON_RELATIONSHIPS.TEMPLATES_SIBLING
      ),
      excludePatterns: [...PACKAGE_EXCLUDE_PATTERNS],
      includePatterns: [...PACKAGE_INCLUDE_PATTERNS, "**/*.css", "**/*.html"],
      metadata: INFRASTRUCTURE_METADATA,
    }
  ),

  createDirectoryDefinition(
    "services",
    "services",
    "services",
    "critical",
    ["python", "json", "yaml", "markdown", "toml"],
    "Root-level microservices and standalone service components (3 packages): Agent naming system, gatekeeper authentication, and MCP server with comprehensive development tools",
    {
      relationships: buildRelationships(COMMON_RELATIONSHIPS.BACKEND_SIBLING, COMMON_RELATIONSHIPS.SCRIPTS_SIBLING, {
        directory: "packages",
        type: "sibling",
        description: "Frontend packages",
      }),
      excludePatterns: ["**/__pycache__/**", "**/htmlcov/**", "**/*.egg-info/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.py", "**/*.json", "**/*.yaml", "**/*.yml", "**/*.md", "**/*.toml", "**/*.sh"],
      metadata: INFRASTRUCTURE_METADATA,
    }
  ),

  createDirectoryDefinition(
    "docs",
    "docs",
    "documentation",
    "important",
    ["markdown", "yaml", "json", "html"],
    "Project documentation and guides - provides comprehensive documentation for the Reynard project including architecture guides, development workflows, and usage examples",
    {
      relationships: buildRelationships(COMMON_RELATIONSHIPS.PACKAGES_DEPENDENCY, {
        directory: "packages",
        type: "documents",
        description: "Generated by packages",
      }),
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.md", "**/*.mdx", "**/*.yaml", "**/*.yml", "**/*.json", "**/*.html"],
      metadata: INFRASTRUCTURE_METADATA,
    }
  ),

  createDirectoryDefinition(
    ".cursor",
    ".cursor",
    "configuration",
    "important",
    ["markdown", "json", "yaml"],
    "Cursor IDE configuration and workspace management - provides Cursor-specific configuration, prompts, rules, and workspace management",
    {
      relationships: buildRelationships(COMMON_RELATIONSHIPS.PACKAGES_DEPENDENCY),
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.md", "**/*.json", "**/*.yaml", "**/*.yml"],
      metadata: INFRASTRUCTURE_METADATA,
    }
  ),

  createDirectoryDefinition(
    "backend",
    "backend",
    "source",
    "critical",
    ["python", "json", "yaml", "markdown", "sql"],
    "Python backend services and API (1 package): Main backend application",
    {
      relationships: buildRelationships(COMMON_RELATIONSHIPS.SCRIPTS_SIBLING, COMMON_RELATIONSHIPS.SCRIPTS_SIBLING),
      excludePatterns: ["**/__pycache__/**", "**/venv/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.py", "**/*.json", "**/*.yaml", "**/*.yml", "**/*.md", "**/*.sql"],
      metadata: INFRASTRUCTURE_METADATA,
    }
  ),
];
