/**
 * ðŸ¦Š Reynard Project Architecture Definition
 *
 * Centralized definition of the Reynard project structure with semantic
 * and syntactic pathing, relationships, and comprehensive documentation.
 */

import type { ProjectArchitecture } from "./types.js";

/**
 * Reynard Project Architecture Definition
 *
 * This is the single source of truth for all project structure information.
 * All tools, watchers, and build systems should use this definition.
 */
export const REYNARD_ARCHITECTURE: ProjectArchitecture = {
  name: "Reynard",
  rootPath: "/home/kade/runeset/reynard",

  directories: [
    // === SOURCE CODE DIRECTORIES ===
    {
      name: "packages",
      path: "packages",
      category: "source",
      importance: "critical",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Main source code packages - all TypeScript/JavaScript packages organized by semantic categories (77 total packages)",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "examples", type: "sibling", description: "Examples use packages" },
        { directory: "templates", type: "sibling", description: "Templates use packages" },
        { directory: "e2e", type: "tests", description: "E2E tests test packages" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
      buildConfig: {
        command: "pnpm",
        args: ["build"],
        parallel: true,
        dependencies: ["backend"],
      },
      testConfig: {
        framework: "vitest",
        command: "pnpm",
        args: ["test"],
        coverage: {
          enabled: true,
          threshold: 80,
          reporters: ["text", "html"],
        },
      },
      lintConfig: {
        command: "pnpm",
        args: ["lint"],
        autoFix: true,
        strict: true,
      },
      metadata: {
        tags: ["core", "source", "typescript"],
        health: "healthy",
        notes: "Central package directory containing all framework packages",
      },
    },

    // === PACKAGE CATEGORIES ===
    {
      name: "packages/ai",
      path: "packages/ai",
      category: "source",
      importance: "critical",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "AI and machine learning packages (17 packages): Shared AI utilities, annotation tools (Florence2, Joy, JTP2, WDV3), caption systems (core, multimodal, UI), ComfyUI integration, model management, multimodal processing, natural language web, RAG (Retrieval-Augmented Generation), and tool calling",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/ui", type: "dependency", description: "Uses UI components" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/algorithms",
      path: "packages/algorithms",
      category: "source",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Algorithm implementations and data structures (1 package): Core algorithmic utilities, data structures, and computational algorithms for performance-critical operations",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core", type: "dependency", description: "Uses core utilities" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/core",
      path: "packages/core",
      category: "source",
      importance: "critical",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Core framework packages (9 packages): Composables (reusable logic), config (environment and settings), connection (HTTP/WebSocket pools), core utilities (base framework), features (feature flags), i18n (internationalization), settings (user preferences), testing (test utilities), and validation (data validation)",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/ui", type: "dependency", description: "Used by UI packages" },
        { directory: "packages/ai", type: "dependency", description: "Used by AI packages" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/data",
      path: "packages/data",
      category: "source",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Data processing and repository packages (7 packages): File processing (upload, conversion, metadata), repository systems (core, multimodal, search, storage), web scraping utilities, and unified repository abstraction layer",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/ai", type: "dependency", description: "Used by AI packages" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/dev-tools",
      path: "packages/dev-tools",
      category: "tools",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Development tools and utilities (7 packages): ADR system (Architecture Decision Records), code quality (linting, formatting), dev server management, git automation, humility parser (documentation parsing), project architecture (structure definitions), and queue watcher (build queue monitoring)",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core", type: "dependency", description: "Uses core utilities" },
        { directory: "scripts", type: "sibling", description: "Related automation scripts" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/docs",
      path: "packages/docs",
      category: "documentation",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Documentation generation packages (5 packages): Diagram generator (Mermaid, flowcharts), docs components (UI components for docs), docs core (documentation engine), docs generator (content generation), and docs site (static site generation)",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/ui", type: "dependency", description: "Uses UI components" },
        { directory: "docs", type: "documents", description: "Generates documentation" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/media",
      path: "packages/media",
      category: "source",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown", "css"],
      description: "Media processing and visualization packages (9 packages): 3D rendering and visualization, audio processing and playback, bounding box annotation, gallery systems (AI-powered, download), image processing and display, segmentation tools, and video processing",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/ui", type: "dependency", description: "Uses UI components" },
        { directory: "packages/ai", type: "dependency", description: "Used by AI packages" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md", "**/*.css"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/services",
      path: "packages/services",
      category: "source",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Service layer packages (5 packages): API client (HTTP client utilities), auth (authentication and authorization), chat (messaging and communication), email (email service integration), and service manager (service orchestration)",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/ui", type: "dependency", description: "Uses UI components" },
        { directory: "backend", type: "sibling", description: "Related backend services" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/ui",
      path: "packages/ui",
      category: "source",
      importance: "critical",
      fileTypes: ["typescript", "javascript", "json", "markdown", "css"],
      description: "User interface packages (17 packages): Animation (transitions and effects), charts (data visualization), colors (color system and palettes), components (core primitives, charts, dashboard, themes, utils), dashboard (admin interface), error boundaries (error handling), floating panel (overlay UI), fluent icons (Microsoft Fluent icons), games (game engine and ECS), monaco (code editor), themes (design system), and UI utilities",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/ai", type: "dependency", description: "Used by AI packages" },
        { directory: "packages/media", type: "dependency", description: "Used by media packages" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md", "**/*.css"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    // === INDIVIDUAL PACKAGE DEFINITIONS ===
    
    // AI Packages
    {
      name: "packages/ai/ai-shared",
      path: "packages/ai/ai-shared",
      category: "source",
      importance: "critical",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Shared AI/ML utilities and base classes - provides common interfaces, types, and utilities for all AI/ML packages in the Reynard ecosystem",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/ai/annotating-core", type: "dependency", description: "Used by annotation tools" },
        { directory: "packages/ai/caption-core", type: "dependency", description: "Used by caption systems" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/ai/rag",
      path: "packages/ai/rag",
      category: "source",
      importance: "critical",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Retrieval-Augmented Generation (RAG) system - provides semantic search, vector embeddings, and document indexing capabilities for AI applications",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/ai/ai-shared", type: "dependency", description: "Uses AI shared utilities" },
        { directory: "packages/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/data/repository-core", type: "dependency", description: "Uses repository system" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    // Core Packages
    {
      name: "packages/core/core",
      path: "packages/core/core",
      category: "source",
      importance: "critical",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Core utilities and modules for Reynard framework - provides base classes, utilities, security, image processing, and fundamental framework capabilities",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core/validation", type: "dependency", description: "Uses validation utilities" },
        { directory: "packages/ui/components-core", type: "dependency", description: "Used by UI components" },
        { directory: "packages/ai/ai-shared", type: "dependency", description: "Used by AI packages" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/core/testing",
      path: "packages/core/testing",
      category: "source",
      importance: "critical",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Testing utilities and shared test infrastructure - provides test helpers, mocks, utilities, and testing patterns used across all Reynard packages",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/core/validation", type: "dependency", description: "Uses validation utilities" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    // UI Packages
    {
      name: "packages/ui/components-core",
      path: "packages/ui/components-core",
      category: "source",
      importance: "critical",
      fileTypes: ["typescript", "javascript", "json", "markdown", "css"],
      description: "Core UI primitives, navigation, and layout components - provides fundamental UI building blocks including buttons, inputs, navigation, and layout systems",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/ui/fluent-icons", type: "dependency", description: "Uses fluent icons" },
        { directory: "packages/ui/components-charts", type: "dependency", description: "Used by chart components" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md", "**/*.css"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/ui/games",
      path: "packages/ui/games",
      category: "source",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Game engine and ECS (Entity Component System) - provides game development utilities, spatial hash, collision detection, geometry, performance monitoring, and roguelike game systems",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/ui/components-core", type: "dependency", description: "Uses UI components" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    // Media Packages
    {
      name: "packages/media/image",
      path: "packages/media/image",
      category: "source",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Image processing and display components - provides image upload, processing, metadata extraction, gallery display, and image manipulation capabilities",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/ui/components-core", type: "dependency", description: "Uses UI components" },
        { directory: "packages/data/file-processing", type: "dependency", description: "Uses file processing" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    // Data Packages
    {
      name: "packages/data/repository-core",
      path: "packages/data/repository-core",
      category: "source",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Repository core system - provides data persistence, 3D data handling, chart data management, and unified repository abstraction layer",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/ai/rag", type: "dependency", description: "Used by RAG system" },
        { directory: "packages/data/unified-repository", type: "dependency", description: "Used by unified repository" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    // Dev Tools Packages
    {
      name: "packages/dev-tools/project-architecture",
      path: "packages/dev-tools/project-architecture",
      category: "tools",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Project architecture definition system - provides centralized project structure definitions, VS Code task generation, health monitoring, and development workflow automation",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core/core", type: "dependency", description: "Uses core utilities" },
        { directory: "scripts", type: "sibling", description: "Generates automation scripts" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    // Additional Key Packages
    {
      name: "packages/ai/annotating-core",
      path: "packages/ai/annotating-core",
      category: "source",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Core annotation system - provides base annotation functionality, data structures, and interfaces for image and document annotation tools",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/ai/ai-shared", type: "dependency", description: "Uses AI shared utilities" },
        { directory: "packages/ai/annotating-florence2", type: "dependency", description: "Used by Florence2 annotator" },
        { directory: "packages/ai/annotating-joy", type: "dependency", description: "Used by Joy annotator" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/ai/caption-core",
      path: "packages/ai/caption-core",
      category: "source",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Core caption generation system - provides base caption functionality, models, and interfaces for image and video caption generation",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/ai/ai-shared", type: "dependency", description: "Uses AI shared utilities" },
        { directory: "packages/ai/caption-multimodal", type: "dependency", description: "Used by multimodal captions" },
        { directory: "packages/ai/caption-ui", type: "dependency", description: "Used by caption UI" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/ui/charts",
      path: "packages/ui/charts",
      category: "source",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Chart and data visualization components - provides comprehensive charting capabilities, data visualization tools, and interactive chart components",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/ui/components-core", type: "dependency", description: "Uses UI components" },
        { directory: "packages/data/repository-core", type: "dependency", description: "Uses repository for chart data" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/ui/fluent-icons",
      path: "packages/ui/fluent-icons",
      category: "source",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Microsoft Fluent Icons integration - provides comprehensive icon system with Fluent Design icons, icon components, and icon utilities",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/ui/components-core", type: "dependency", description: "Used by UI components" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/media/3d",
      path: "packages/media/3d",
      category: "source",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "3D rendering and visualization - provides Three.js integration, 3D scene management, rendering utilities, and 3D visualization components",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/ui/components-core", type: "dependency", description: "Uses UI components" },
        { directory: "packages/data/repository-core", type: "dependency", description: "Uses repository for 3D data" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/data/file-processing",
      path: "packages/data/file-processing",
      category: "source",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "File processing and management - provides file upload, conversion, metadata extraction, format detection, and file manipulation utilities",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/media/image", type: "dependency", description: "Used by image processing" },
        { directory: "packages/data/repository-core", type: "dependency", description: "Used by repository system" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/services/api-client",
      path: "packages/services/api-client",
      category: "source",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "API client utilities - provides HTTP client, request/response handling, authentication, error handling, and API communication utilities",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/core/connection", type: "dependency", description: "Uses connection utilities" },
        { directory: "packages/services/auth", type: "dependency", description: "Used by auth service" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "packages/docs/docs-generator",
      path: "packages/docs/docs-generator",
      category: "documentation",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "Documentation generator - provides automated documentation generation, content processing, and documentation site building capabilities",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages/core/core", type: "dependency", description: "Uses core utilities" },
        { directory: "packages/docs/docs-core", type: "dependency", description: "Uses docs core" },
        { directory: "packages/docs/docs-site", type: "dependency", description: "Generates docs site" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "services",
      path: "services",
      category: "services",
      importance: "critical",
      fileTypes: ["python", "json", "yaml", "markdown", "toml"],
      description: "Root-level microservices and standalone service components (3 packages): Agent naming system, gatekeeper authentication, and MCP server with comprehensive development tools",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "backend", type: "sibling", description: "Related backend services" },
        { directory: "scripts", type: "sibling", description: "Service automation scripts" },
        { directory: "packages/services", type: "sibling", description: "Frontend service packages" },
      ],
      excludePatterns: ["**/__pycache__/**", "**/venv/**", "**/dist/**", "**/build/**", "**/htmlcov/**", "**/*.egg-info/**"],
      includePatterns: ["**/*.py", "**/*.json", "**/*.yaml", "**/*.yml", "**/*.md", "**/*.toml", "**/*.sh"],
      optional: false,
      generated: false,
      thirdParty: false,
      buildConfig: {
        command: "pip",
        args: ["install", "-e", "."],
        parallel: false,
        dependencies: ["backend"],
      },
      testConfig: {
        framework: "pytest",
        command: "python",
        args: ["-m", "pytest"],
        coverage: {
          enabled: true,
          threshold: 80,
          reporters: ["text", "html", "xml"],
        },
      },
      lintConfig: {
        command: "python",
        args: ["-m", "ruff"],
        autoFix: true,
        strict: true,
      },
      metadata: {
        tags: ["python", "microservices", "mcp", "agent-naming", "gatekeeper"],
        health: "healthy",
        notes: "Root-level Python microservices including agent naming, authentication, and MCP server",
      },
    },

    // === INDIVIDUAL SERVICE PACKAGES ===
    {
      name: "services/agent-naming",
      path: "services/agent-naming",
      category: "services",
      importance: "important",
      fileTypes: ["python", "json", "markdown", "toml"],
      description: "Agent naming system with animal spirit themes - generates and manages agent names with 105+ spirit types and multiple naming styles",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "services/mcp-server", type: "dependency", description: "Used by MCP server for agent naming" },
      ],
      excludePatterns: ["**/__pycache__/**", "**/htmlcov/**", "**/*.egg-info/**"],
      includePatterns: ["**/*.py", "**/*.json", "**/*.md", "**/*.toml"],
      optional: false,
      generated: false,
      thirdParty: false,
      buildConfig: {
        command: "pip",
        args: ["install", "-e", "."],
        parallel: false,
      },
      testConfig: {
        framework: "pytest",
        command: "python",
        args: ["-m", "pytest"],
        coverage: {
          enabled: true,
          threshold: 85,
          reporters: ["text", "html", "xml"],
        },
      },
      metadata: {
        tags: ["python", "agent-naming", "spirits", "naming"],
        health: "healthy",
        notes: "Pure Python agent naming system with no external dependencies",
      },
    },

    {
      name: "services/gatekeeper",
      path: "services/gatekeeper",
      category: "services",
      importance: "important",
      fileTypes: ["python", "json", "markdown", "toml"],
      description: "Authentication and authorization system - provides secure access control and user management",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "services/mcp-server", type: "dependency", description: "Used by MCP server for authentication" },
      ],
      excludePatterns: ["**/__pycache__/**", "**/htmlcov/**", "**/*.egg-info/**"],
      includePatterns: ["**/*.py", "**/*.json", "**/*.md", "**/*.toml"],
      optional: false,
      generated: false,
      thirdParty: false,
      buildConfig: {
        command: "pip",
        args: ["install", "-e", "."],
        parallel: false,
      },
      testConfig: {
        framework: "pytest",
        command: "python",
        args: ["-m", "pytest"],
        coverage: {
          enabled: true,
          threshold: 85,
          reporters: ["text", "html", "xml"],
        },
      },
      metadata: {
        tags: ["python", "authentication", "authorization", "security"],
        health: "healthy",
        notes: "FastAPI-based authentication and authorization system",
      },
    },

    {
      name: "services/mcp-server",
      path: "services/mcp-server",
      category: "services",
      importance: "critical",
      fileTypes: ["python", "json", "markdown", "toml", "sh"],
      description: "MCP server with comprehensive development tools - provides 47+ tools across 8 categories for development workflow automation",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "services/agent-naming", type: "dependency", description: "Uses agent naming system" },
        { directory: "services/gatekeeper", type: "dependency", description: "Uses authentication system" },
        { directory: "packages/dev-tools", type: "dependency", description: "Uses dev tools packages" },
      ],
      excludePatterns: ["**/__pycache__/**", "**/htmlcov/**", "**/*.egg-info/**", "**/data/**"],
      includePatterns: ["**/*.py", "**/*.json", "**/*.md", "**/*.toml", "**/*.sh"],
      optional: false,
      generated: false,
      thirdParty: false,
      buildConfig: {
        command: "pip",
        args: ["install", "-e", "."],
        parallel: false,
        dependencies: ["services/agent-naming", "services/gatekeeper"],
      },
      testConfig: {
        framework: "pytest",
        command: "python",
        args: ["-m", "pytest"],
        coverage: {
          enabled: true,
          threshold: 80,
          reporters: ["text", "html", "xml"],
        },
      },
      metadata: {
        tags: ["python", "mcp", "development-tools", "automation"],
        health: "healthy",
        notes: "Comprehensive MCP server with 47+ development tools and ECS world simulation",
      },
    },

    // === DOCUMENTATION DIRECTORIES ===
    {
      name: "docs",
      path: "docs",
      category: "documentation",
      importance: "critical",
      fileTypes: ["markdown", "yaml", "json", "html"],
      description: "Project documentation, guides, and API references",
      watchable: true,
      buildable: false,
      testable: false,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages", type: "documents", description: "Documents package APIs" },
        { directory: "backend", type: "documents", description: "Documents backend APIs" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.md", "**/*.mdx", "**/*.yaml", "**/*.yml", "**/*.json", "**/*.html"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: ".cursor/docs",
      path: ".cursor/docs",
      category: "documentation",
      importance: "important",
      fileTypes: ["markdown"],
      description: "Cursor IDE specific documentation and guides",
      watchable: true,
      buildable: false,
      testable: false,
      lintable: true,
      documentable: true,
      relationships: [{ directory: "docs", type: "sibling", description: "IDE-specific documentation" }],
      excludePatterns: [],
      includePatterns: ["**/*.md"],
      optional: true,
      generated: false,
      thirdParty: false,
    },

    {
      name: ".cursor/prompts",
      path: ".cursor/prompts",
      category: "documentation",
      importance: "important",
      fileTypes: ["markdown"],
      description: "Cursor IDE prompt templates and configurations",
      watchable: true,
      buildable: false,
      testable: false,
      lintable: true,
      documentable: false,
      relationships: [{ directory: ".cursor/docs", type: "sibling", description: "IDE configuration" }],
      excludePatterns: [],
      includePatterns: ["**/*.md"],
      optional: true,
      generated: false,
      thirdParty: false,
    },

    {
      name: ".cursor/rules",
      path: ".cursor/rules",
      category: "configuration",
      importance: "important",
      fileTypes: ["markdown"],
      description: "Cursor IDE rules and coding standards",
      watchable: true,
      buildable: false,
      testable: false,
      lintable: true,
      documentable: false,
      relationships: [{ directory: ".cursor/prompts", type: "sibling", description: "IDE configuration" }],
      excludePatterns: [],
      includePatterns: ["**/*.md"],
      optional: true,
      generated: false,
      thirdParty: false,
    },

    // === TEMPLATES AND EXAMPLES ===
    {
      name: "examples",
      path: "examples",
      category: "templates",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown", "css", "html"],
      description: "Example applications and usage demonstrations (22 packages): 3D demo, algorithm bench, auth app, basic app, clock, comfy demo, comprehensive dashboard, ECS agent tracker, email app, embedding visualization, error demo, features app, file test, hue shifting, i18n demo, icons demo, image caption, multi-theme, prompt note, RAG demo, test app, tutorial app",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages", type: "dependency", description: "Uses packages" },
        { directory: "templates", type: "sibling", description: "Related templates" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md", "**/*.css", "**/*.html"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "templates",
      path: "templates",
      category: "templates",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown", "css", "html"],
      description: "Project templates and boilerplates (1 package): Starter template",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages", type: "dependency", description: "Uses packages" },
        { directory: "examples", type: "sibling", description: "Related examples" },
      ],
      excludePatterns: ["**/node_modules/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md", "**/*.css", "**/*.html"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    // === TESTING DIRECTORIES ===
    {
      name: "e2e",
      path: "e2e",
      category: "testing",
      importance: "important",
      fileTypes: ["typescript", "javascript", "json", "markdown"],
      description: "End-to-end tests and test configurations (1 package): Comprehensive E2E testing suite",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "packages", type: "tests", description: "Tests packages" },
        { directory: "examples", type: "tests", description: "Tests examples" },
      ],
      excludePatterns: [
        "**/node_modules/**",
        "**/dist/**",
        "**/build/**",
        "**/test-results/**",
        "**/playwright-report/**",
      ],
      includePatterns: ["**/*.ts", "**/*.js", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    // === AUTOMATION AND SCRIPTS ===
    {
      name: "scripts",
      path: "scripts",
      category: "scripts",
      importance: "important",
      fileTypes: ["python", "shell", "javascript", "json", "markdown"],
      description: "Automation scripts, utilities, and development tools (2 packages): CSS validation and workflow validation tools",
      watchable: true,
      buildable: false,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "backend", type: "sibling", description: "Backend automation" },
        { directory: "services", type: "sibling", description: "Service automation" },
      ],
      excludePatterns: ["**/__pycache__/**", "**/venv/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.py", "**/*.sh", "**/*.js", "**/*.json", "**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    // === DATA AND CONFIGURATION ===
    {
      name: "data",
      path: "data",
      category: "data",
      importance: "optional",
      fileTypes: ["json", "yaml", "sql", "data"],
      description: "Data files, datasets, and configuration data",
      watchable: true,
      buildable: false,
      testable: false,
      lintable: false,
      documentable: true,
      relationships: [{ directory: "backend", type: "dependency", description: "Backend data" }],
      excludePatterns: ["**/cache/**", "**/tmp/**"],
      includePatterns: ["**/*.json", "**/*.yaml", "**/*.yml", "**/*.sql", "**/*.csv", "**/*.tsv"],
      optional: true,
      generated: false,
      thirdParty: false,
    },

    {
      name: ".cursor/todos",
      path: ".cursor/todos",
      category: "documentation",
      importance: "important",
      fileTypes: ["markdown"],
      description: "TODO lists and task tracking organized by project areas",
      watchable: true,
      buildable: false,
      testable: false,
      lintable: true,
      documentable: false,
      relationships: [
        { directory: ".cursor/docs", type: "sibling", description: "IDE-specific documentation" },
        { directory: ".cursor/prompts", type: "sibling", description: "IDE configuration" },
      ],
      excludePatterns: [],
      includePatterns: ["**/*.md"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    // === INFRASTRUCTURE ===
    {
      name: "nginx",
      path: "nginx",
      category: "configuration",
      importance: "optional",
      fileTypes: ["config", "shell"],
      description: "Nginx configuration and deployment scripts",
      watchable: true,
      buildable: false,
      testable: false,
      lintable: true,
      documentable: true,
      relationships: [{ directory: "backend", type: "configures", description: "Configures backend" }],
      excludePatterns: [],
      includePatterns: ["**/*.conf", "**/*.sh", "**/*.md"],
      optional: true,
      generated: false,
      thirdParty: false,
    },

    {
      name: "fenrir",
      path: "fenrir",
      category: "tools",
      importance: "optional",
      fileTypes: ["python", "json", "markdown"],
      description: "Fenrir development tools and utilities",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [{ directory: "scripts", type: "sibling", description: "Development tools" }],
      excludePatterns: ["**/__pycache__/**", "**/venv/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.py", "**/*.json", "**/*.md"],
      optional: true,
      generated: false,
      thirdParty: false,
    },

    // === ADDITIONAL PACKAGES ===
    {
      name: "backend",
      path: "backend",
      category: "source",
      importance: "critical",
      fileTypes: ["python", "json", "yaml", "markdown", "sql"],
      description: "Python backend services and API (1 package): Main backend application",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "services", type: "sibling", description: "Related microservices" },
        { directory: "scripts", type: "sibling", description: "Backend automation scripts" },
      ],
      excludePatterns: ["**/__pycache__/**", "**/venv/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.py", "**/*.json", "**/*.yaml", "**/*.yml", "**/*.md", "**/*.sql"],
      optional: false,
      generated: false,
      thirdParty: false,
    },

    {
      name: "experimental",
      path: "experimental",
      category: "tools",
      importance: "optional",
      fileTypes: ["python", "javascript", "typescript", "json", "markdown"],
      description: "Experimental packages and prototypes (1 package): Phoenix control system",
      watchable: true,
      buildable: true,
      testable: true,
      lintable: true,
      documentable: true,
      relationships: [
        { directory: "backend", type: "sibling", description: "Experimental backend features" },
      ],
      excludePatterns: ["**/__pycache__/**", "**/venv/**", "**/dist/**", "**/build/**"],
      includePatterns: ["**/*.py", "**/*.js", "**/*.ts", "**/*.json", "**/*.md"],
      optional: true,
      generated: false,
      thirdParty: false,
    },

    {
      name: ".vscode",
      path: ".vscode",
      category: "configuration",
      importance: "optional",
      fileTypes: ["json", "markdown"],
      description: "VS Code workspace configuration (1 package): IDE settings and tasks",
      watchable: true,
      buildable: false,
      testable: false,
      lintable: true,
      documentable: false,
      relationships: [],
      excludePatterns: [],
      includePatterns: ["**/*.json", "**/*.md"],
      optional: true,
      generated: false,
      thirdParty: false,
    },

    // === THIRD-PARTY CODE ===
    {
      name: "third_party",
      path: "third_party",
      category: "third-party",
      importance: "excluded",
      fileTypes: ["python", "javascript", "typescript", "json", "markdown", "other"],
      description: "Third-party dependencies and external code (3 packages): P4RS3LT0NGV3, pawprint frontend, yipyap",
      watchable: false,
      buildable: false,
      testable: false,
      lintable: false,
      documentable: false,
      relationships: [],
      excludePatterns: ["**/*"],
      includePatterns: [],
      optional: true,
      generated: false,
      thirdParty: true,
    },
  ],

  // Global patterns
  globalExcludePatterns: [
    "**/node_modules/**",
    "**/dist/**",
    "**/build/**",
    "**/coverage/**",
    "**/.nyc_output/**",
    "**/.cache/**",
    "**/tmp/**",
    "**/venv/**",
    "**/__pycache__/**",
    "**/.pytest_cache/**",
    "**/.mypy_cache/**",
    "**/.tox/**",
    "**/.coverage/**",
    "**/.eggs/**",
    "**/.eggs-info/**",
    "**/reynard.*.egg-info/**",
    "**/test-results/**",
    "**/playwright-report/**",
    "**/dombench-results/**",
    "**/results/**",
    "**/.tsbuildinfo",
    "**/pnpm-lock.yaml",
    "**/package-lock.json",
    "**/yarn.lock",
    "**/.DS_Store",
    "**/Thumbs.db",
    "**/.env",
    "**/.env.*",
    "**/.git/**",
    "**/.vscode/**",
  ],

  globalIncludePatterns: [
    "**/*.ts",
    "**/*.tsx",
    "**/*.js",
    "**/*.jsx",
    "**/*.py",
    "**/*.md",
    "**/*.mdx",
    "**/*.json",
    "**/*.yaml",
    "**/*.yml",
    "**/*.css",
    "**/*.html",
    "**/*.htm",
    "**/*.sh",
    "**/*.sql",
    "**/*.conf",
    "**/*.toml",
  ],

  // Default configurations
  defaultWatching: {
    enabled: true,
    recursive: true,
    debounceMs: 2000,
  },

  defaultBuild: {
    enabled: true,
    parallel: true,
    maxConcurrency: 4,
  },

  defaultTesting: {
    enabled: true,
    framework: "vitest",
    coverage: true,
  },

  defaultLinting: {
    enabled: true,
    autoFix: true,
    strict: true,
  },
};

/**
 * Get all directories that should be watched for changes
 */
export function getWatchableDirectories(): string[] {
  return REYNARD_ARCHITECTURE.directories
    .filter(dir => dir.watchable && dir.importance !== "excluded")
    .map(dir => dir.path);
}

/**
 * Get all directories that should be included in builds
 */
export function getBuildableDirectories(): string[] {
  return REYNARD_ARCHITECTURE.directories
    .filter(dir => dir.buildable && dir.importance !== "excluded")
    .map(dir => dir.path);
}

/**
 * Get all directories that should be included in testing
 */
export function getTestableDirectories(): string[] {
  return REYNARD_ARCHITECTURE.directories
    .filter(dir => dir.testable && dir.importance !== "excluded")
    .map(dir => dir.path);
}

/**
 * Get all directories that should be included in linting
 */
export function getLintableDirectories(): string[] {
  return REYNARD_ARCHITECTURE.directories
    .filter(dir => dir.lintable && dir.importance !== "excluded")
    .map(dir => dir.path);
}

/**
 * Get all directories that should be included in documentation generation
 */
export function getDocumentableDirectories(): string[] {
  return REYNARD_ARCHITECTURE.directories
    .filter(dir => dir.documentable && dir.importance !== "excluded")
    .map(dir => dir.path);
}

/**
 * Get all global exclude patterns
 */
export function getGlobalExcludePatterns(): string[] {
  return REYNARD_ARCHITECTURE.globalExcludePatterns;
}

/**
 * Get all global include patterns
 */
export function getGlobalIncludePatterns(): string[] {
  return REYNARD_ARCHITECTURE.globalIncludePatterns;
}
