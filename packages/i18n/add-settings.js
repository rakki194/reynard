#!/usr/bin/env node

const fs = require("fs");
const path = require("path");

// Basic settings object to add to all language files
const basicSettings = `  settings: {
    title: 'Settings',
    appearance: 'Appearance',
    theme: {
      light: 'Light',
      gray: 'Gray',
      dark: 'Dark',
      banana: 'Banana',
      strawberry: 'Strawberry',
      peanut: 'Peanut',
      'high-contrast-black': 'High Contrast Black',
      'high-contrast-inverse': 'High Contrast Inverse',
    },
    disableAnimations: 'Disable Animations',
    disableAnimationsTooltip: 'Disable all animations for better performance',
    language: 'Language',
    languageTooltip: 'Select your preferred language',
    disableNonsense: 'Disable Nonsense',
    disableNonsenseTooltip: 'Disable non-essential features',
    disableCollisionHandling: 'Disable Collision Handling',
    disableCollisionHandlingTooltip: 'Disable collision detection',
    disableModelDownloads: 'Disable Model Downloads',
    disableModelDownloadsTooltip: 'Prevent automatic model downloads',
    modelSettings: 'Model Settings',
    modelManagement: {
      title: 'Model Management',
    },
    jtp2Threshold: 'JTP2 Threshold',
    jtp2ThresholdTooltip: 'Threshold for JTP2 processing',
    jtp2ForceCpu: 'JTP2 Force CPU',
    jtp2ForceCpuTooltip: 'Force CPU processing for JTP2',
    downloadModel: 'Download Model',
    downloadTags: 'Download Tags',
    wdv3ModelName: 'WDV3 Model Name',
    wdv3ModelNameTooltip: 'Name of the WDV3 model',
    wdv3GenThreshold: 'WDV3 Generation Threshold',
    wdv3GenThresholdTooltip: 'Threshold for WDV3 generation',
    wdv3CharThreshold: 'WDV3 Character Threshold',
    wdv3CharThresholdTooltip: 'Character threshold for WDV3',
    wdv3ForceCpu: 'WDV3 Force CPU',
    wdv3ForceCpuTooltip: 'Force CPU processing for WDV3',
    wdv3ConfigUpdateError: 'WDV3 Configuration Update Error',
    viewMode: 'View Mode',
    gridView: 'Grid View',
    listView: 'List View',
    sortBy: 'Sort By',
    sortByName: 'Sort by Name',
    sortByBasename: 'Sort by Basename',
    sortByDate: 'Sort by Date',
    sortByDateOldest: 'Sort by Date (Oldest)',
    sortBySize: 'Sort by Size',
    sortBySizeSmallest: 'Sort by Size (Smallest)',
    experimentalFeatures: 'Experimental Features',
    enableZoom: 'Enable Zoom',
    enableZoomTooltip: 'Enable zoom functionality',
    enableMinimap: 'Enable Minimap',
    enableMinimapTooltip: 'Show minimap in editor',
    alwaysShowCaptionEditor: 'Always Show Caption Editor',
    alwaysShowCaptionEditorTooltip: 'Keep caption editor always visible',
    treatMetadataAsText: 'Treat Metadata as Text',
    treatMetadataAsTextTooltip: 'Display metadata as plain text',
    showMetadataInBreadcrumb: 'Show Metadata in Breadcrumb',
    showMetadataInBreadcrumbTooltip: 'Include metadata in breadcrumb navigation',
    instantDelete: 'Instant Delete',
    instantDeleteTooltip: 'Delete files without confirmation',
    warning: 'Warning',
    gallery: 'Gallery',
    preserveLatents: 'Preserve Latents',
    preserveLatentsTooltip: 'Keep latent data when processing',
    preserveTxt: 'Preserve TXT',
    preserveTxtTooltip: 'Keep TXT files when processing',
    thumbnailSize: 'Thumbnail Size',
    thumbnailSizeDescription: 'Size of generated thumbnails',
    thumbnailSizeUpdateError: 'Thumbnail Size Update Error',
    replaceUnderscores: 'Replace Underscores',
    replaceUnderscoresDesc: 'Replace underscores with spaces',
    tagSuggestions: {
      title: 'Tag Suggestions',
      advanced: 'Advanced',
    },
    tagSuggestionsPath: 'Tag Suggestions Path',
    tagSuggestionsPathTooltip: 'Path to tag suggestions file',
    tagSuggestionsPathDescription: 'Location of the tag suggestions configuration',
    tagBubbles: {
      title: 'Tag Bubbles',
    },
    tagBubbleFontSize: 'Tag Bubble Font Size',
    tagBubbleFontSizeTooltip: 'Font size for tag bubbles',
    tagBubbleColorIntensity: 'Tag Bubble Color Intensity',
    tagBubbleColorIntensityTooltip: 'Color intensity for tag bubbles',
    tagBubbleBorderRadius: 'Tag Bubble Border Radius',
    tagBubbleBorderRadiusTooltip: 'Border radius for tag bubbles',
    tagBubblePadding: 'Tag Bubble Padding',
    tagBubblePaddingTooltip: 'Padding for tag bubbles',
    tagBubbleSpacing: 'Tag Bubble Spacing',
    tagBubbleSpacingTooltip: 'Spacing between tag bubbles',
    enableTagBubbleAnimations: 'Enable Tag Bubble Animations',
    enableTagBubbleAnimationsTooltip: 'Animate tag bubbles',
    enableTagBubbleShadows: 'Enable Tag Bubble Shadows',
    enableTagBubbleShadowsTooltip: 'Add shadows to tag bubbles',
    minCharactersForSuggestions: 'Min Characters for Suggestions',
    minCharactersForSuggestionsTooltip: 'Minimum characters to trigger suggestions',
    maxSuggestions: 'Max Suggestions',
    maxSuggestionsTooltip: 'Maximum number of suggestions to show',
    captionTypes: {
      title: 'Caption Types',
      description: 'Manage caption types',
      add: 'Add',
      edit: 'Edit',
      remove: 'Remove',
      enable: 'Enable',
      disable: 'Disable',
      reset: 'Reset',
      resetTooltip: 'Reset to defaults',
      confirmRemove: 'Confirm Removal',
      confirmReset: 'Confirm Reset',
      addTitle: 'Add Caption Type',
      editTitle: 'Edit Caption Type',
      idLabel: 'ID',
      nameLabel: 'Name',
      descriptionLabel: 'Description',
      iconLabel: 'Icon',
      colorLabel: 'Color',
      resetColor: 'Reset Color',
      colorHelp: 'Color help text',
      idPattern: 'ID Pattern',
      idHelp: 'ID help text',
      descriptionPlaceholder: 'Enter description',
    },
    boundingBox: {
      title: 'Bounding Box',
      exportFormat: {
        title: 'Export Format',
        label: 'Label',
        tooltip: 'Tooltip',
        description: 'Description',
      },
      labelDisplay: {
        title: 'Label Display',
      },
      appearance: {
        title: 'Appearance',
      },
      interaction: {
        title: 'Interaction',
      },
      advanced: {
        title: 'Advanced',
      },
      showLabels: 'Show Labels',
      showLabelsTooltip: 'Display labels on bounding boxes',
      labelFontSize: 'Label Font Size',
      labelFontSizeTooltip: 'Font size for labels',
      boxOpacity: 'Box Opacity',
      boxOpacityTooltip: 'Opacity of bounding boxes',
      borderWidth: 'Border Width',
      borderWidthTooltip: 'Width of box borders',
      colorCodedLabels: 'Color Coded Labels',
      colorCodedLabelsTooltip: 'Use colors to distinguish labels',
      autoSave: 'Auto Save',
      autoSaveTooltip: 'Automatically save changes',
      confirmDelete: 'Confirm Delete',
      confirmDeleteTooltip: 'Ask for confirmation before deleting',
      snapToGrid: 'Snap to Grid',
      snapToGridTooltip: 'Snap boxes to grid',
      gridSize: 'Grid Size',
      gridSizeTooltip: 'Size of the grid',
      minBoxSize: 'Minimum Box Size',
      minBoxSizeTooltip: 'Minimum size for bounding boxes',
      defaultLabel: 'Default Label',
      defaultLabelTooltip: 'Default label for new boxes',
      defaultLabelDescription: 'Default label description',
      formatChanged: 'Format Changed',
      convertingBoxes: 'Converting Boxes',
      conversionSuccess: 'Conversion Successful',
      conversionNoBoxes: 'No Boxes to Convert',
      conversionNoGallery: 'No Gallery Available',
      conversionErrors: 'Conversion Errors',
      conversionFailed: 'Conversion Failed',
    },
    performance: {
      title: 'Performance',
      subtitle: 'Performance Settings',
      thumbnailThreads: 'Thumbnail Threads',
      thumbnailThreadsDescription: 'Number of threads for thumbnail generation',
      imageInfoThreads: 'Image Info Threads',
      imageInfoThreadsDescription: 'Number of threads for image info processing',
      systemCores: 'System Cores',
      currentThumbnailThreads: 'Current Thumbnail Threads',
      currentImageInfoThreads: 'Current Image Info Threads',
      low: 'Low',
      balanced: 'Balanced',
      high: 'High',
      maximum: 'Maximum',
      hint: 'Hint',
      modelUsageTracking: 'Model Usage Tracking',
      modelUsageTrackingDescription: 'Track model usage statistics',
      modelUsageStatistics: 'Model Usage Statistics',
      modelUsageStatisticsDescription: 'View model usage statistics',
      trackedModels: 'Tracked Models',
      loadedModels: 'Loaded Models',
      cleanupInterval: 'Cleanup Interval',
      cleanupIntervalDescription: 'Interval for cleanup operations',
      refreshStats: 'Refresh Statistics',
    },
    danger: {
      title: 'Danger Zone',
      subtitle: 'Dangerous Operations',
      warning: 'Warning',
    },
    dangerZone: 'Danger Zone',
    dangerZoneDescription: 'Dangerous operations that cannot be undone',
    versionControl: {
      title: 'Version Control',
      gitLfsEnabled: 'Git LFS Enabled',
      gitLfsEnabledTooltip: 'Enable Git Large File Storage',
      gitLfsPatterns: 'Git LFS Patterns',
      gitLfsPatternsTooltip: 'File patterns for Git LFS',
      gitLfsPatternsDescription: 'Patterns to track with Git LFS',
      gitAuthorName: 'Git Author Name',
      gitAuthorNameTooltip: 'Name for Git commits',
      gitAuthorEmail: 'Git Author Email',
      gitAuthorEmailTooltip: 'Email for Git commits',
      setPathTooltip: 'Set Path Tooltip',
      setPathDescription: 'Description for setting path',
      defaultGitignore: 'Default Gitignore',
      defaultGitignoreTooltip: 'Use default Git ignore patterns',
      defaultGitignoreDescription: 'Default Git ignore patterns',
      addPattern: 'Add Pattern',
      savePatterns: 'Save Patterns',
      saveGitignore: 'Save Gitignore',
      gitConfigSaved: 'Git Configuration Saved',
      gitConfigError: 'Git Configuration Error',
    },
    captioner: {
      title: 'Captioner',
      description: 'Caption generation settings',
      noCaptioneersAvailable: 'No Captioneers Available',
      loadingCaptioners: 'Loading Captioneers',
      configuration: 'Configuration',
      saveConfiguration: 'Save Configuration',
      resetConfiguration: 'Reset Configuration',
      configurationSaved: 'Configuration Saved',
      configurationFailed: 'Configuration Failed',
      generalSettings: 'General Settings',
      advancedSettings: 'Advanced Settings',
      captionGeneration: {
        title: 'Caption Generation',
        postProcessing: {
          title: 'Post Processing',
          description: 'Post processing options',
          enabled: 'Enabled',
          enabledTooltip: 'Enable post processing',
          replaceUnderscores: 'Replace Underscores',
          replaceUnderscoresTooltip: 'Replace underscores with spaces',
          caseConversion: 'Case Conversion',
          caseConversionTooltip: 'Convert case of generated text',
          caseConversionOptions: {
            none: 'None',
            lowercase: 'Lowercase',
            uppercase: 'Uppercase',
            titlecase: 'Title Case',
          },
          trimWhitespace: 'Trim Whitespace',
          trimWhitespaceTooltip: 'Remove leading and trailing whitespace',
          removeDuplicateSpaces: 'Remove Duplicate Spaces',
          removeDuplicateSpacesTooltip: 'Remove multiple consecutive spaces',
        },
        generators: {
          title: 'Generators',
          description: 'Caption generators',
          selectPlaceholder: 'Select Generator',
        },
      },
    },
  },`;

const langDir = path.join(__dirname, "src", "lang");
const files = fs
  .readdirSync(langDir)
  .filter((file) => file.endsWith(".ts") && file !== "en.ts");

console.log(`Adding settings to ${files.length} language files...`);

files.forEach((file) => {
  const filePath = path.join(langDir, file);
  const content = fs.readFileSync(filePath, "utf8");

  // Find the last closing brace before "} as const satisfies Translations;"
  const lastBraceIndex = content.lastIndexOf(
    "  },\n} as const satisfies Translations;",
  );

  if (lastBraceIndex !== -1) {
    const newContent =
      content.slice(0, lastBraceIndex) +
      basicSettings +
      "\n} as const satisfies Translations;";
    fs.writeFileSync(filePath, newContent, "utf8");
    console.log(`✓ Added settings to ${file}`);
  } else {
    console.log(`✗ Could not find insertion point in ${file}`);
  }
});

console.log("Done!");
