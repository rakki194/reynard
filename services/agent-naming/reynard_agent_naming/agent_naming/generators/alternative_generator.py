"""
Alternative Naming Scheme Generator
==================================

Generates agent names using completely different naming schemes beyond animal spirits.
Supports elemental, celestial, mythological, scientific, geographic, color, music,
technology, literary, and historical naming schemes.
"""

import random  # nosec B311 - Used for non-cryptographic name generation

from ..naming_utilities import NameBuilder, RandomSelector
from ..types import (
    AgentName,
    CelestialType,
    ColorType,
    ElementalType,
    GeographicType,
    HistoricalType,
    LiteraryType,
    MusicType,
    MythologicalType,
    NamingConfig,
    NamingScheme,
    NamingStyle,
    ScientificType,
    TechnologyType,
)


class AlternativeNamingGenerator:
    """Generates agent names using alternative naming schemes."""

    def __init__(self) -> None:
        """Initialize the alternative name generator with all naming data."""
        self.name_builder = NameBuilder()
        self.selector = RandomSelector()
        self._load_elemental_data()
        self._load_celestial_data()
        self._load_mythological_data()
        self._load_scientific_data()
        self._load_geographic_data()
        self._load_color_data()
        self._load_music_data()
        self._load_technology_data()
        self._load_literary_data()
        self._load_historical_data()

    def _load_elemental_data(self) -> None:
        """Load elemental naming data."""
        self.elemental_data = {
            ElementalType.FIRE: {
                "names": [
                    "Inferno",
                    "Blaze",
                    "Ember",
                    "Flame",
                    "Pyre",
                    "Scorch",
                    "Burn",
                    "Heat",
                    "Fire",
                    "Spark",
                    "Kindle",
                    "Ignite",
                    "Torch",
                    "Bonfire",
                    "Wildfire",
                    "Conflagration",
                    "Combustion",
                    "Incandescent",
                    "Radiant",
                    "Luminous",
                ],
                "suffixes": [
                    "Bane",
                    "Ward",
                    "Guard",
                    "Keeper",
                    "Master",
                    "Lord",
                    "Prime",
                    "Core",
                ],
            },
            ElementalType.WATER: {
                "names": [
                    "Aqua",
                    "Marine",
                    "Ocean",
                    "Tide",
                    "Wave",
                    "Current",
                    "Flow",
                    "Stream",
                    "River",
                    "Lake",
                    "Sea",
                    "Deep",
                    "Abyss",
                    "Cascade",
                    "Falls",
                    "Rapids",
                    "Tsunami",
                    "Monsoon",
                    "Deluge",
                    "Flood",
                    "Mist",
                    "Vapor",
                    "Dew",
                ],
                "suffixes": [
                    "Ward",
                    "Guard",
                    "Keeper",
                    "Master",
                    "Lord",
                    "Prime",
                    "Core",
                    "Flow",
                ],
            },
            ElementalType.EARTH: {
                "names": [
                    "Terra",
                    "Geo",
                    "Stone",
                    "Rock",
                    "Mountain",
                    "Hill",
                    "Valley",
                    "Cave",
                    "Crystal",
                    "Gem",
                    "Ore",
                    "Metal",
                    "Iron",
                    "Steel",
                    "Bronze",
                    "Copper",
                    "Granite",
                    "Marble",
                    "Sand",
                    "Clay",
                    "Soil",
                    "Root",
                    "Foundation",
                ],
                "suffixes": [
                    "Ward",
                    "Guard",
                    "Keeper",
                    "Master",
                    "Lord",
                    "Prime",
                    "Core",
                    "Stone",
                ],
            },
            ElementalType.AIR: {
                "names": [
                    "Aero",
                    "Wind",
                    "Breeze",
                    "Gale",
                    "Storm",
                    "Tempest",
                    "Cyclone",
                    "Tornado",
                    "Hurricane",
                    "Zephyr",
                    "Gust",
                    "Whirlwind",
                    "Sky",
                    "Cloud",
                    "Mist",
                    "Fog",
                    "Vapor",
                    "Atmosphere",
                    "Ether",
                    "Void",
                    "Space",
                    "Aether",
                ],
                "suffixes": [
                    "Ward",
                    "Guard",
                    "Keeper",
                    "Master",
                    "Lord",
                    "Prime",
                    "Core",
                    "Wind",
                ],
            },
            ElementalType.VOID: {
                "names": [
                    "Void",
                    "Null",
                    "Empty",
                    "Hollow",
                    "Void",
                    "Abyss",
                    "Chasm",
                    "Gap",
                    "Nothing",
                    "Zero",
                    "Null",
                    "Void",
                    "Darkness",
                    "Shadow",
                    "Shade",
                    "Eclipse",
                    "Oblivion",
                    "Void",
                    "Nihil",
                    "Vacuity",
                    "Void",
                ],
                "suffixes": [
                    "Ward",
                    "Guard",
                    "Keeper",
                    "Master",
                    "Lord",
                    "Prime",
                    "Core",
                    "Void",
                ],
            },
            ElementalType.LIGHT: {
                "names": [
                    "Lux",
                    "Lumen",
                    "Bright",
                    "Shine",
                    "Glow",
                    "Radiance",
                    "Brilliance",
                    "Luminous",
                    "Incandescent",
                    "Radiant",
                    "Beam",
                    "Ray",
                    "Light",
                    "Dawn",
                    "Sunrise",
                    "Daybreak",
                    "Illumination",
                    "Enlightenment",
                    "Clarity",
                    "Vision",
                ],
                "suffixes": [
                    "Ward",
                    "Guard",
                    "Keeper",
                    "Master",
                    "Lord",
                    "Prime",
                    "Core",
                    "Light",
                ],
            },
            ElementalType.DARK: {
                "names": [
                    "Shadow",
                    "Darkness",
                    "Night",
                    "Eclipse",
                    "Void",
                    "Abyss",
                    "Chasm",
                    "Gloom",
                    "Dusk",
                    "Twilight",
                    "Midnight",
                    "Obsidian",
                    "Onyx",
                    "Raven",
                    "Crow",
                    "Bat",
                    "Vampire",
                    "Demon",
                    "Phantom",
                    "Specter",
                    "Wraith",
                ],
                "suffixes": [
                    "Ward",
                    "Guard",
                    "Keeper",
                    "Master",
                    "Lord",
                    "Prime",
                    "Core",
                    "Shadow",
                ],
            },
            ElementalType.ICE: {
                "names": [
                    "Frost",
                    "Ice",
                    "Snow",
                    "Blizzard",
                    "Glacier",
                    "Crystal",
                    "Frozen",
                    "Winter",
                    "Cold",
                    "Chill",
                    "Freeze",
                    "Icicle",
                    "Aurora",
                    "Polar",
                    "Arctic",
                    "Antarctic",
                    "Tundra",
                    "Permafrost",
                    "Hail",
                    "Sleet",
                ],
                "suffixes": [
                    "Ward",
                    "Guard",
                    "Keeper",
                    "Master",
                    "Lord",
                    "Prime",
                    "Core",
                    "Frost",
                ],
            },
            ElementalType.LIGHTNING: {
                "names": [
                    "Lightning",
                    "Thunder",
                    "Storm",
                    "Bolt",
                    "Spark",
                    "Electric",
                    "Volt",
                    "Current",
                    "Energy",
                    "Power",
                    "Charge",
                    "Static",
                    "Plasma",
                    "Ion",
                    "Electron",
                    "Proton",
                    "Neutron",
                    "Atom",
                    "Molecule",
                    "Quantum",
                ],
                "suffixes": [
                    "Ward",
                    "Guard",
                    "Keeper",
                    "Master",
                    "Lord",
                    "Prime",
                    "Core",
                    "Bolt",
                ],
            },
            ElementalType.NATURE: {
                "names": [
                    "Nature",
                    "Forest",
                    "Tree",
                    "Leaf",
                    "Branch",
                    "Root",
                    "Flower",
                    "Petal",
                    "Seed",
                    "Sprout",
                    "Growth",
                    "Life",
                    "Green",
                    "Verdant",
                    "Lush",
                    "Wild",
                    "Natural",
                    "Organic",
                    "Living",
                    "Thriving",
                    "Blooming",
                    "Flourishing",
                ],
                "suffixes": [
                    "Ward",
                    "Guard",
                    "Keeper",
                    "Master",
                    "Lord",
                    "Prime",
                    "Core",
                    "Growth",
                ],
            },
            ElementalType.METAL: {
                "names": [
                    "Metal",
                    "Iron",
                    "Steel",
                    "Bronze",
                    "Copper",
                    "Silver",
                    "Gold",
                    "Platinum",
                    "Titanium",
                    "Aluminum",
                    "Zinc",
                    "Nickel",
                    "Cobalt",
                    "Chromium",
                    "Manganese",
                    "Alloy",
                    "Ore",
                    "Mine",
                    "Forge",
                    "Anvil",
                    "Hammer",
                    "Sword",
                ],
                "suffixes": [
                    "Ward",
                    "Guard",
                    "Keeper",
                    "Master",
                    "Lord",
                    "Prime",
                    "Core",
                    "Forge",
                ],
            },
            ElementalType.CRYSTAL: {
                "names": [
                    "Crystal",
                    "Gem",
                    "Diamond",
                    "Ruby",
                    "Sapphire",
                    "Emerald",
                    "Amethyst",
                    "Topaz",
                    "Garnet",
                    "Opal",
                    "Pearl",
                    "Jade",
                    "Quartz",
                    "Amber",
                    "Coral",
                    "Prism",
                    "Facet",
                    "Sparkle",
                    "Shine",
                    "Brilliant",
                    "Radiant",
                    "Luminous",
                ],
                "suffixes": [
                    "Ward",
                    "Guard",
                    "Keeper",
                    "Master",
                    "Lord",
                    "Prime",
                    "Core",
                    "Gem",
                ],
            },
        }

    def _load_celestial_data(self) -> None:
        """Load celestial naming data."""
        self.celestial_data = {
            CelestialType.STAR: {
                "names": [
                    "Sirius",
                    "Vega",
                    "Polaris",
                    "Rigel",
                    "Betelgeuse",
                    "Antares",
                    "Aldebaran",
                    "Spica",
                    "Arcturus",
                    "Capella",
                    "Procyon",
                    "Altair",
                    "Fomalhaut",
                    "Deneb",
                    "Regulus",
                    "Castor",
                    "Pollux",
                    "Bellatrix",
                    "Mintaka",
                    "Alnilam",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            CelestialType.PLANET: {
                "names": [
                    "Mercury",
                    "Venus",
                    "Mars",
                    "Jupiter",
                    "Saturn",
                    "Uranus",
                    "Neptune",
                    "Pluto",
                    "Ceres",
                    "Pallas",
                    "Juno",
                    "Vesta",
                    "Eris",
                    "Haumea",
                    "Makemake",
                    "Sedna",
                    "Quaoar",
                    "Orcus",
                    "Ixion",
                    "Varuna",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            CelestialType.CONSTELLATION: {
                "names": [
                    "Orion",
                    "Ursa",
                    "Draco",
                    "Cygnus",
                    "Lyra",
                    "Aquila",
                    "Pegasus",
                    "Andromeda",
                    "Perseus",
                    "Cassiopeia",
                    "Cepheus",
                    "Hercules",
                    "Bootes",
                    "Corona",
                    "Corvus",
                    "Crater",
                    "Hydra",
                    "Leo",
                    "Virgo",
                    "Libra",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            CelestialType.MOON: {
                "names": [
                    "Luna",
                    "Phobos",
                    "Deimos",
                    "Io",
                    "Europa",
                    "Ganymede",
                    "Callisto",
                    "Titan",
                    "Rhea",
                    "Iapetus",
                    "Dione",
                    "Tethys",
                    "Enceladus",
                    "Mimas",
                    "Hyperion",
                    "Triton",
                    "Nereid",
                    "Charon",
                    "Styx",
                    "Nix",
                    "Kerberos",
                    "Hydra",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            CelestialType.COMET: {
                "names": [
                    "Halley",
                    "Hale-Bopp",
                    "Hyakutake",
                    "Shoemaker-Levy",
                    "Tempel",
                    "Wild",
                    "Borrelly",
                    "Hartley",
                    "Lovejoy",
                    "Ikeya-Seki",
                    "Kohoutek",
                    "West",
                    "Bennett",
                    "Arend-Roland",
                    "Mrkos",
                    "Donati",
                    "Biela",
                    "Encke",
                    "Faye",
                    "Tuttle",
                    "Giacobini-Zinner",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            CelestialType.ASTEROID: {
                "names": [
                    "Ceres",
                    "Pallas",
                    "Juno",
                    "Vesta",
                    "Astraea",
                    "Hebe",
                    "Iris",
                    "Flora",
                    "Metis",
                    "Hygiea",
                    "Parthenope",
                    "Victoria",
                    "Egeria",
                    "Irene",
                    "Eunomia",
                    "Psyche",
                    "Themis",
                    "Fortuna",
                    "Massalia",
                    "Lutetia",
                    "Kalliope",
                    "Thalia",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            CelestialType.NEBULA: {
                "names": [
                    "Orion",
                    "Horsehead",
                    "Eagle",
                    "Crab",
                    "Helix",
                    "Ring",
                    "Dumbbell",
                    "Lagoon",
                    "Trifid",
                    "Carina",
                    "Tarantula",
                    "Veil",
                    "Witch",
                    "Witch",
                    "Rosette",
                    "Pillars",
                    "Flame",
                    "Bubble",
                    "Cat's Eye",
                    "Butterfly",
                    "Hourglass",
                    "Swan",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            CelestialType.GALAXY: {
                "names": [
                    "Milky Way",
                    "Andromeda",
                    "Triangulum",
                    "Whirlpool",
                    "Sombrero",
                    "Pinwheel",
                    "Black Eye",
                    "Cartwheel",
                    "Antennae",
                    "Mice",
                    "Tadpole",
                    "Hoag's",
                    "Ring",
                    "Spiral",
                    "Elliptical",
                    "Irregular",
                    "Dwarf",
                    "Giant",
                    "Supergiant",
                    "Ultra",
                    "Hyper",
                    "Mega",
                    "Giga",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            CelestialType.BLACKHOLE: {
                "names": [
                    "Sagittarius",
                    "Cygnus",
                    "V404",
                    "GRO",
                    "GRS",
                    "XTE",
                    "Swift",
                    "Chandra",
                    "Event Horizon",
                    "Singularity",
                    "Accretion",
                    "Jet",
                    "Quasar",
                    "Blazar",
                    "Microquasar",
                    "Stellar",
                    "Intermediate",
                    "Supermassive",
                    "Primordial",
                    "Kerr",
                    "Schwarzschild",
                    "Hawking",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            CelestialType.SUPERNOVA: {
                "names": [
                    "Crab",
                    "Tycho",
                    "Kepler",
                    "SN",
                    "Type Ia",
                    "Type Ib",
                    "Type Ic",
                    "Type II",
                    "Hypernova",
                    "Kilonova",
                    "Pair-instability",
                    "Pulsational",
                    "Thermonuclear",
                    "Core-collapse",
                    "White dwarf",
                    "Neutron star",
                    "Black hole",
                    "Remnant",
                    "Shock wave",
                    "Nucleosynthesis",
                    "Gamma ray",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            CelestialType.PULSAR: {
                "names": [
                    "Crab",
                    "Vela",
                    "PSR",
                    "Millisecond",
                    "Binary",
                    "Magnetar",
                    "X-ray",
                    "Radio",
                    "Gamma-ray",
                    "Anomalous",
                    "Rotating",
                    "Neutron",
                    "Star",
                    "Lighthouse",
                    "Beacon",
                    "Pulse",
                    "Period",
                    "Spin",
                    "Magnetic",
                    "Field",
                    "Dispersion",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            CelestialType.QUASAR: {
                "names": [
                    "3C",
                    "QSO",
                    "Blazar",
                    "Radio-loud",
                    "Radio-quiet",
                    "Seyfert",
                    "AGN",
                    "Active",
                    "Galactic",
                    "Nucleus",
                    "Accretion",
                    "Disk",
                    "Jet",
                    "Lobe",
                    "Relativistic",
                    "Beaming",
                    "Doppler",
                    "Redshift",
                    "Luminosity",
                    "Brightness",
                    "Magnitude",
                    "Distance",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
        }

    def _load_mythological_data(self) -> None:
        """Load mythological naming data."""
        self.mythological_data = {
            MythologicalType.GOD: {
                "names": [
                    "Zeus",
                    "Poseidon",
                    "Hades",
                    "Apollo",
                    "Ares",
                    "Hermes",
                    "Dionysus",
                    "Hephaestus",
                    "Athena",
                    "Artemis",
                    "Aphrodite",
                    "Hera",
                    "Demeter",
                    "Hestia",
                    "Odin",
                    "Thor",
                    "Loki",
                    "Freyr",
                    "Freya",
                    "Tyr",
                    "Heimdall",
                    "Baldr",
                ],
                "suffixes": [
                    "Divine",
                    "Sacred",
                    "Holy",
                    "Blessed",
                    "Chosen",
                    "Eternal",
                    "Prime",
                    "Core",
                ],
            },
            MythologicalType.HERO: {
                "names": [
                    "Hercules",
                    "Achilles",
                    "Odysseus",
                    "Perseus",
                    "Theseus",
                    "Jason",
                    "Bellerophon",
                    "Orpheus",
                    "Cadmus",
                    "Perseus",
                    "Theseus",
                    "Jason",
                    "Bellerophon",
                    "Orpheus",
                    "Cadmus",
                    "Perseus",
                    "Theseus",
                    "Jason",
                    "Bellerophon",
                    "Orpheus",
                ],
                "suffixes": [
                    "Hero",
                    "Champion",
                    "Warrior",
                    "Guardian",
                    "Defender",
                    "Protector",
                    "Prime",
                    "Core",
                ],
            },
            MythologicalType.REALM: {
                "names": [
                    "Olympus",
                    "Asgard",
                    "Valhalla",
                    "Elysium",
                    "Tartarus",
                    "Hades",
                    "Underworld",
                    "Heaven",
                    "Hell",
                    "Purgatory",
                    "Nirvana",
                    "Avalon",
                    "Camelot",
                    "Atlantis",
                    "El Dorado",
                    "Shangri-La",
                    "Xanadu",
                    "Eden",
                    "Paradise",
                    "Utopia",
                    "Dystopia",
                ],
                "suffixes": [
                    "Realm",
                    "Domain",
                    "Kingdom",
                    "Empire",
                    "Territory",
                    "Land",
                    "Prime",
                    "Core",
                ],
            },
            MythologicalType.CREATURE: {
                "names": [
                    "Dragon",
                    "Phoenix",
                    "Griffin",
                    "Unicorn",
                    "Pegasus",
                    "Centaur",
                    "Minotaur",
                    "Sphinx",
                    "Hydra",
                    "Chimera",
                    "Cerberus",
                    "Kraken",
                    "Leviathan",
                    "Basilisk",
                    "Cockatrice",
                    "Wyvern",
                    "Gargoyle",
                    "Vampire",
                    "Werewolf",
                    "Zombie",
                    "Ghost",
                ],
                "suffixes": [
                    "Beast",
                    "Creature",
                    "Monster",
                    "Guardian",
                    "Protector",
                    "Prime",
                    "Core",
                ],
            },
            MythologicalType.FORCE: {
                "names": [
                    "Chaos",
                    "Order",
                    "Destiny",
                    "Fate",
                    "Karma",
                    "Balance",
                    "Harmony",
                    "Discord",
                    "Creation",
                    "Destruction",
                    "Transformation",
                    "Evolution",
                    "Revolution",
                    "Revelation",
                    "Enlightenment",
                    "Wisdom",
                    "Power",
                    "Strength",
                    "Courage",
                    "Justice",
                    "Mercy",
                ],
                "suffixes": [
                    "Force",
                    "Power",
                    "Energy",
                    "Essence",
                    "Spirit",
                    "Prime",
                    "Core",
                ],
            },
            MythologicalType.GODDESS: {
                "names": [
                    "Athena",
                    "Artemis",
                    "Aphrodite",
                    "Hera",
                    "Demeter",
                    "Hestia",
                    "Persephone",
                    "Freya",
                    "Frigg",
                    "Sif",
                    "Idun",
                    "Hel",
                    "Ran",
                    "Aegir",
                    "Isis",
                    "Bastet",
                    "Sekhmet",
                    "Hathor",
                    "Nephthys",
                    "Ma'at",
                    "Tefnut",
                    "Nut",
                ],
                "suffixes": [
                    "Divine",
                    "Sacred",
                    "Holy",
                    "Blessed",
                    "Chosen",
                    "Eternal",
                    "Prime",
                    "Core",
                ],
            },
            MythologicalType.DEMIGOD: {
                "names": [
                    "Hercules",
                    "Perseus",
                    "Theseus",
                    "Achilles",
                    "Orion",
                    "Asclepius",
                    "Dionysus",
                    "Castor",
                    "Pollux",
                    "Helen",
                    "Pollux",
                    "Meleager",
                    "Atalanta",
                    "Bellerophon",
                    "Jason",
                    "Orpheus",
                    "Cadmus",
                    "Perseus",
                    "Theseus",
                    "Jason",
                    "Bellerophon",
                ],
                "suffixes": [
                    "Demigod",
                    "Half-God",
                    "Champion",
                    "Hero",
                    "Warrior",
                    "Prime",
                    "Core",
                ],
            },
            MythologicalType.TITAN: {
                "names": [
                    "Atlas",
                    "Prometheus",
                    "Epimetheus",
                    "Cronus",
                    "Rhea",
                    "Oceanus",
                    "Tethys",
                    "Hyperion",
                    "Theia",
                    "Coeus",
                    "Phoebe",
                    "Crius",
                    "Iapetus",
                    "Themis",
                    "Mnemosyne",
                    "Cronus",
                    "Rhea",
                    "Oceanus",
                    "Tethys",
                    "Hyperion",
                    "Theia",
                    "Coeus",
                ],
                "suffixes": [
                    "Titan",
                    "Giant",
                    "Ancient",
                    "Primordial",
                    "Eternal",
                    "Prime",
                    "Core",
                ],
            },
            MythologicalType.SPIRIT: {
                "names": [
                    "Aether",
                    "Ether",
                    "Pneuma",
                    "Anima",
                    "Spiritus",
                    "Ruach",
                    "Prana",
                    "Chi",
                    "Ki",
                    "Mana",
                    "Orgone",
                    "Vril",
                    "Odic",
                    "Tachyon",
                    "Photon",
                    "Quantum",
                    "Void",
                    "Void",
                    "Void",
                    "Void",
                    "Void",
                    "Void",
                ],
                "suffixes": [
                    "Spirit",
                    "Essence",
                    "Force",
                    "Energy",
                    "Power",
                    "Prime",
                    "Core",
                ],
            },
            MythologicalType.ARTIFACT: {
                "names": [
                    "Excalibur",
                    "Mjolnir",
                    "Gungnir",
                    "Gram",
                    "Durendal",
                    "Curtana",
                    "Joyeuse",
                    "Caliburn",
                    "Clarent",
                    "Galatine",
                    "Balmung",
                    "Nothung",
                    "Hrunting",
                    "Naegling",
                    "Hrotti",
                    "Laevateinn",
                    "Mistilteinn",
                    "Gleipnir",
                    "Draupnir",
                    "Brisingamen",
                ],
                "suffixes": [
                    "Artifact",
                    "Relic",
                    "Treasure",
                    "Weapon",
                    "Tool",
                    "Prime",
                    "Core",
                ],
            },
        }

    def _load_scientific_data(self) -> None:
        """Load scientific naming data."""
        self.scientific_data = {
            ScientificType.ELEMENT: {
                "names": [
                    "Hydrogen",
                    "Helium",
                    "Lithium",
                    "Beryllium",
                    "Boron",
                    "Carbon",
                    "Nitrogen",
                    "Oxygen",
                    "Fluorine",
                    "Neon",
                    "Sodium",
                    "Magnesium",
                    "Aluminum",
                    "Silicon",
                    "Phosphorus",
                    "Sulfur",
                    "Chlorine",
                    "Argon",
                    "Potassium",
                    "Calcium",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ScientificType.PARTICLE: {
                "names": [
                    "Electron",
                    "Proton",
                    "Neutron",
                    "Photon",
                    "Gluon",
                    "Quark",
                    "Lepton",
                    "Muon",
                    "Tau",
                    "Neutrino",
                    "Boson",
                    "Fermion",
                    "Higgs",
                    "W",
                    "Z",
                    "Graviton",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ScientificType.COMPOUND: {
                "names": [
                    "Water",
                    "Salt",
                    "Sugar",
                    "Alcohol",
                    "Acid",
                    "Base",
                    "Oxide",
                    "Chloride",
                    "Sulfate",
                    "Carbonate",
                    "Nitrate",
                    "Phosphate",
                    "Hydroxide",
                    "Ammonia",
                    "Methane",
                    "Ethane",
                    "Propane",
                    "Butane",
                    "Benzene",
                    "Toluene",
                    "Xylene",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ScientificType.FORCE: {
                "names": [
                    "Gravity",
                    "Electromagnetic",
                    "Strong",
                    "Nuclear",
                    "Weak",
                    "Nuclear",
                    "Friction",
                    "Tension",
                    "Compression",
                    "Shear",
                    "Torsion",
                    "Centripetal",
                    "Centrifugal",
                    "Buoyant",
                    "Drag",
                    "Lift",
                    "Thrust",
                    "Weight",
                    "Normal",
                    "Applied",
                    "Spring",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ScientificType.THEORY: {
                "names": [
                    "Relativity",
                    "Quantum",
                    "Mechanics",
                    "Evolution",
                    "Big",
                    "Bang",
                    "String",
                    "Theory",
                    "Chaos",
                    "Theory",
                    "Game",
                    "Theory",
                    "Information",
                    "Theory",
                    "Control",
                    "Theory",
                    "Graph",
                    "Theory",
                    "Number",
                    "Theory",
                    "Set",
                    "Theory",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ScientificType.LAW: {
                "names": [
                    "Newton's",
                    "Laws",
                    "Ohm's",
                    "Law",
                    "Boyle's",
                    "Law",
                    "Charles's",
                    "Law",
                    "Avogadro's",
                    "Law",
                    "Ideal",
                    "Gas",
                    "Law",
                    "Conservation",
                    "Energy",
                    "Law",
                    "Conservation",
                    "Momentum",
                    "Law",
                    "Conservation",
                    "Mass",
                    "Law",
                    "Thermodynamics",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ScientificType.PROCESS: {
                "names": [
                    "Photosynthesis",
                    "Respiration",
                    "Digestion",
                    "Circulation",
                    "Excretion",
                    "Reproduction",
                    "Growth",
                    "Development",
                    "Metabolism",
                    "Homeostasis",
                    "Osmosis",
                    "Diffusion",
                    "Active",
                    "Transport",
                    "Passive",
                    "Transport",
                    "Endocytosis",
                    "Exocytosis",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ScientificType.STRUCTURE: {
                "names": [
                    "Atom",
                    "Molecule",
                    "Cell",
                    "Tissue",
                    "Organ",
                    "System",
                    "Organism",
                    "Population",
                    "Community",
                    "Ecosystem",
                    "Biome",
                    "Biosphere",
                    "Crystal",
                    "Lattice",
                    "Polymer",
                    "Monomer",
                    "Protein",
                    "Enzyme",
                    "DNA",
                    "RNA",
                    "Chromosome",
                    "Gene",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ScientificType.SYSTEM: {
                "names": [
                    "Solar",
                    "System",
                    "Nervous",
                    "System",
                    "Circulatory",
                    "System",
                    "Respiratory",
                    "System",
                    "Digestive",
                    "System",
                    "Endocrine",
                    "System",
                    "Immune",
                    "System",
                    "Reproductive",
                    "System",
                    "Skeletal",
                    "System",
                    "Muscular",
                    "System",
                    "Integumentary",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ScientificType.PHENOMENON: {
                "names": [
                    "Aurora",
                    "Borealis",
                    "Aurora",
                    "Australis",
                    "Lightning",
                    "Thunder",
                    "Rainbow",
                    "Halo",
                    "Mirage",
                    "Eclipse",
                    "Tide",
                    "Tsunami",
                    "Earthquake",
                    "Volcano",
                    "Tornado",
                    "Hurricane",
                    "Blizzard",
                    "Drought",
                    "Flood",
                    "Avalanche",
                    "Landslide",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
        }

    def _load_geographic_data(self) -> None:
        """Load geographic naming data."""
        self.geographic_data = {
            GeographicType.MOUNTAIN: {
                "names": [
                    "Everest",
                    "K2",
                    "Kangchenjunga",
                    "Lhotse",
                    "Makalu",
                    "Cho Oyu",
                    "Dhaulagiri",
                    "Manaslu",
                    "Nanga Parbat",
                    "Annapurna",
                    "Denali",
                    "Kilimanjaro",
                    "Elbrus",
                    "Mont Blanc",
                    "Matterhorn",
                    "Eiger",
                    "Jungfrau",
                    "Monch",
                    "Weisshorn",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            GeographicType.RIVER: {
                "names": [
                    "Nile",
                    "Amazon",
                    "Yangtze",
                    "Mississippi",
                    "Yenisei",
                    "Yellow",
                    "Ob",
                    "Parana",
                    "Congo",
                    "Amur",
                    "Lena",
                    "Mackenzie",
                    "Niger",
                    "Mekong",
                    "Volga",
                    "Danube",
                    "Rhine",
                    "Thames",
                    "Seine",
                    "Ganges",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            GeographicType.OCEAN: {
                "names": [
                    "Pacific",
                    "Atlantic",
                    "Indian",
                    "Arctic",
                    "Southern",
                    "Antarctic",
                    "Mediterranean",
                    "Caribbean",
                    "Red",
                    "Sea",
                    "Black",
                    "Sea",
                    "Caspian",
                    "Sea",
                    "Dead",
                    "Sea",
                    "Baltic",
                    "Sea",
                    "North",
                    "Sea",
                    "Bering",
                    "Sea",
                    "Gulf",
                    "Mexico",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            GeographicType.FOREST: {
                "names": [
                    "Amazon",
                    "Rainforest",
                    "Congo",
                    "Rainforest",
                    "Borneo",
                    "Rainforest",
                    "Daintree",
                    "Rainforest",
                    "Tongass",
                    "National",
                    "Forest",
                    "Black",
                    "Forest",
                    "Sherwood",
                    "Forest",
                    "New",
                    "Forest",
                    "Epping",
                    "Forest",
                    "Forest",
                    "Dean",
                    "Kielder",
                    "Forest",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            GeographicType.DESERT: {
                "names": [
                    "Sahara",
                    "Gobi",
                    "Arabian",
                    "Kalahari",
                    "Patagonian",
                    "Atacama",
                    "Mojave",
                    "Sonoran",
                    "Chihuahuan",
                    "Great",
                    "Victoria",
                    "Great",
                    "Sandy",
                    "Simpson",
                    "Thar",
                    "Taklamakan",
                    "Namib",
                    "Karakum",
                    "Kyzylkum",
                    "Dasht-e",
                    "Lut",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            GeographicType.CITY: {
                "names": [
                    "New",
                    "York",
                    "London",
                    "Paris",
                    "Tokyo",
                    "Beijing",
                    "Moscow",
                    "Cairo",
                    "Mumbai",
                    "Delhi",
                    "Shanghai",
                    "São",
                    "Paulo",
                    "Mexico",
                    "City",
                    "Buenos",
                    "Aires",
                    "Lagos",
                    "Kinshasa",
                    "Jakarta",
                    "Bangkok",
                    "Seoul",
                    "Istanbul",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            GeographicType.LANDMARK: {
                "names": [
                    "Eiffel",
                    "Tower",
                    "Statue",
                    "Liberty",
                    "Big",
                    "Ben",
                    "Tower",
                    "Bridge",
                    "Golden",
                    "Gate",
                    "Bridge",
                    "Sydney",
                    "Opera",
                    "House",
                    "Taj",
                    "Mahal",
                    "Pyramids",
                    "Giza",
                    "Great",
                    "Wall",
                    "China",
                    "Machu",
                    "Picchu",
                    "Stonehenge",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            GeographicType.REGION: {
                "names": [
                    "Siberia",
                    "Amazon",
                    "Basin",
                    "Himalayas",
                    "Alps",
                    "Rockies",
                    "Andes",
                    "Appalachians",
                    "Urals",
                    "Caucasus",
                    "Balkans",
                    "Scandinavia",
                    "Iberia",
                    "Balkans",
                    "Balkans",
                    "Balkans",
                    "Balkans",
                    "Balkans",
                    "Balkans",
                    "Balkans",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            GeographicType.ISLAND: {
                "names": [
                    "Greenland",
                    "New",
                    "Guinea",
                    "Borneo",
                    "Madagascar",
                    "Baffin",
                    "Island",
                    "Sumatra",
                    "Honshu",
                    "Victoria",
                    "Island",
                    "Great",
                    "Britain",
                    "Ellesmere",
                    "Island",
                    "Sulawesi",
                    "South",
                    "Island",
                    "Java",
                    "North",
                    "Island",
                    "Luzon",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            GeographicType.VALLEY: {
                "names": [
                    "Grand",
                    "Canyon",
                    "Death",
                    "Valley",
                    "Yosemite",
                    "Valley",
                    "Napa",
                    "Valley",
                    "Silicon",
                    "Valley",
                    "Rhine",
                    "Valley",
                    "Loire",
                    "Valley",
                    "Danube",
                    "Valley",
                    "Hudson",
                    "Valley",
                    "Shenandoah",
                    "Valley",
                    "Nile",
                    "Valley",
                    "Jordan",
                    "Valley",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
        }

    def _load_color_data(self) -> None:
        """Load color naming data."""
        self.color_data = {
            ColorType.RED: {
                "names": [
                    "Crimson",
                    "Scarlet",
                    "Ruby",
                    "Garnet",
                    "Rose",
                    "Cherry",
                    "Burgundy",
                    "Maroon",
                    "Brick",
                    "Rust",
                    "Copper",
                    "Bronze",
                    "Amber",
                    "Coral",
                    "Salmon",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ColorType.BLUE: {
                "names": [
                    "Azure",
                    "Cobalt",
                    "Sapphire",
                    "Navy",
                    "Royal",
                    "Sky",
                    "Ocean",
                    "Teal",
                    "Turquoise",
                    "Cyan",
                    "Indigo",
                    "Periwinkle",
                    "Cerulean",
                    "Ultramarine",
                    "Lapis",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ColorType.GREEN: {
                "names": [
                    "Emerald",
                    "Jade",
                    "Forest",
                    "Lime",
                    "Mint",
                    "Olive",
                    "Sage",
                    "Pine",
                    "Moss",
                    "Sea",
                    "Grass",
                    "Leaf",
                    "Fern",
                    "Ivy",
                    "Clover",
                    "Chartreuse",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ColorType.YELLOW: {
                "names": [
                    "Gold",
                    "Amber",
                    "Citrine",
                    "Topaz",
                    "Sun",
                    "Daffodil",
                    "Canary",
                    "Lemon",
                    "Butter",
                    "Cream",
                    "Ivory",
                    "Pearl",
                    "Champagne",
                    "Honey",
                    "Mustard",
                    "Saffron",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ColorType.PURPLE: {
                "names": [
                    "Violet",
                    "Lavender",
                    "Plum",
                    "Mauve",
                    "Magenta",
                    "Fuchsia",
                    "Indigo",
                    "Amethyst",
                    "Lilac",
                    "Orchid",
                    "Periwinkle",
                    "Eggplant",
                    "Grape",
                    "Wisteria",
                    "Iris",
                    "Pansy",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ColorType.ORANGE: {
                "names": [
                    "Tangerine",
                    "Mandarin",
                    "Clementine",
                    "Peach",
                    "Apricot",
                    "Coral",
                    "Salmon",
                    "Pumpkin",
                    "Carrot",
                    "Papaya",
                    "Mango",
                    "Persimmon",
                    "Cantaloupe",
                    "Nectarine",
                    "Marigold",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ColorType.PINK: {
                "names": [
                    "Rose",
                    "Blush",
                    "Peony",
                    "Cherry",
                    "Bubblegum",
                    "Cotton",
                    "Candy",
                    "Flamingo",
                    "Coral",
                    "Salmon",
                    "Magenta",
                    "Fuchsia",
                    "Hot",
                    "Pastel",
                    "Dusty",
                    "Mauve",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ColorType.CYAN: {
                "names": [
                    "Aqua",
                    "Turquoise",
                    "Teal",
                    "Mint",
                    "Seafoam",
                    "Jade",
                    "Emerald",
                    "Sage",
                    "Lime",
                    "Chartreuse",
                    "Spring",
                    "Kelly",
                    "Forest",
                    "Hunter",
                    "Olive",
                    "Army",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ColorType.MAGENTA: {
                "names": [
                    "Magenta",
                    "Fuchsia",
                    "Hot",
                    "Pink",
                    "Deep",
                    "Pink",
                    "Rose",
                    "Pink",
                    "Bright",
                    "Pink",
                    "Neon",
                    "Pink",
                    "Electric",
                    "Pink",
                    "Shocking",
                    "Pink",
                    "Barbie",
                    "Pink",
                    "Bubblegum",
                    "Pink",
                    "Cotton",
                    "Candy",
                    "Pink",
                    "Flamingo",
                    "Pink",
                    "Salmon",
                    "Pink",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ColorType.GOLD: {
                "names": [
                    "Gold",
                    "Golden",
                    "Aureate",
                    "Gilded",
                    "Metallic",
                    "Gold",
                    "Champagne",
                    "Gold",
                    "Honey",
                    "Gold",
                    "Amber",
                    "Gold",
                    "Bronze",
                    "Gold",
                    "Copper",
                    "Gold",
                    "Brass",
                    "Gold",
                    "Yellow",
                    "Gold",
                    "Sunset",
                    "Gold",
                    "Autumn",
                    "Gold",
                    "Harvest",
                    "Gold",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ColorType.SILVER: {
                "names": [
                    "Silver",
                    "Silvery",
                    "Argent",
                    "Metallic",
                    "Silver",
                    "Platinum",
                    "Silver",
                    "Steel",
                    "Silver",
                    "Chrome",
                    "Silver",
                    "Nickel",
                    "Silver",
                    "Aluminum",
                    "Silver",
                    "Tin",
                    "Silver",
                    "Pewter",
                    "Silver",
                    "Gray",
                    "Silver",
                    "Slate",
                    "Silver",
                    "Charcoal",
                    "Silver",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            ColorType.COPPER: {
                "names": [
                    "Copper",
                    "Coppery",
                    "Bronze",
                    "Copper",
                    "Rust",
                    "Copper",
                    "Burnt",
                    "Orange",
                    "Copper",
                    "Terracotta",
                    "Copper",
                    "Sienna",
                    "Copper",
                    "Ochre",
                    "Copper",
                    "Umber",
                    "Copper",
                    "Auburn",
                    "Copper",
                    "Chestnut",
                    "Copper",
                    "Mahogany",
                    "Copper",
                    "Cinnamon",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
        }

    def _load_music_data(self) -> None:
        """Load music naming data."""
        self.music_data = {
            MusicType.NOTE: {
                "names": [
                    "Do",
                    "Re",
                    "Mi",
                    "Fa",
                    "Sol",
                    "La",
                    "Ti",
                    "C",
                    "D",
                    "E",
                    "F",
                    "G",
                    "A",
                    "B",
                    "Sharp",
                    "Flat",
                    "Natural",
                    "Accidental",
                    "Harmonic",
                    "Melodic",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            MusicType.INSTRUMENT: {
                "names": [
                    "Piano",
                    "Violin",
                    "Cello",
                    "Viola",
                    "Bass",
                    "Guitar",
                    "Drums",
                    "Flute",
                    "Clarinet",
                    "Saxophone",
                    "Trumpet",
                    "Trombone",
                    "Harp",
                    "Organ",
                    "Synthesizer",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            MusicType.COMPOSER: {
                "names": [
                    "Bach",
                    "Mozart",
                    "Beethoven",
                    "Chopin",
                    "Tchaikovsky",
                    "Vivaldi",
                    "Handel",
                    "Haydn",
                    "Schubert",
                    "Brahms",
                    "Wagner",
                    "Debussy",
                    "Ravel",
                    "Stravinsky",
                    "Prokofiev",
                    "Shostakovich",
                    "Mahler",
                    "Bruckner",
                    "Dvorak",
                    "Sibelius",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            MusicType.GENRE: {
                "names": [
                    "Classical",
                    "Jazz",
                    "Blues",
                    "Rock",
                    "Pop",
                    "Hip-Hop",
                    "Electronic",
                    "Folk",
                    "Country",
                    "Reggae",
                    "Soul",
                    "Funk",
                    "Disco",
                    "Punk",
                    "Metal",
                    "Alternative",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            MusicType.SCALE: {
                "names": [
                    "Major",
                    "Minor",
                    "Pentatonic",
                    "Chromatic",
                    "Dorian",
                    "Phrygian",
                    "Lydian",
                    "Mixolydian",
                    "Locrian",
                    "Harmonic",
                    "Melodic",
                    "Blues",
                    "Whole",
                    "Half",
                    "Diminished",
                    "Augmented",
                    "Natural",
                    "Artificial",
                    "Synthetic",
                    "Exotic",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            MusicType.CHORD: {
                "names": [
                    "Major",
                    "Minor",
                    "Diminished",
                    "Augmented",
                    "Seventh",
                    "Ninth",
                    "Eleventh",
                    "Thirteenth",
                    "Suspended",
                    "Added",
                    "Extended",
                    "Altered",
                    "Dominant",
                    "Subdominant",
                    "Tonic",
                    "Mediant",
                    "Submediant",
                    "Leading",
                    "Neapolitan",
                    "Augmented",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            MusicType.RHYTHM: {
                "names": [
                    "Waltz",
                    "March",
                    "Swing",
                    "Shuffle",
                    "Bossa",
                    "Samba",
                    "Tango",
                    "Foxtrot",
                    "Cha-Cha",
                    "Rumba",
                    "Mambo",
                    "Salsa",
                    "Merengue",
                    "Reggae",
                    "Ska",
                    "Calypso",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            MusicType.MELODY: {
                "names": [
                    "Cantabile",
                    "Legato",
                    "Staccato",
                    "Marcato",
                    "Tenuto",
                    "Fermata",
                    "Trill",
                    "Mordent",
                    "Turn",
                    "Appoggiatura",
                    "Acciaccatura",
                    "Glissando",
                    "Portamento",
                    "Vibrato",
                    "Tremolo",
                    "Pizzicato",
                    "Arco",
                    "Sul",
                    "Ponticello",
                    "Tasto",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            MusicType.HARMONY: {
                "names": [
                    "Consonance",
                    "Dissonance",
                    "Resolution",
                    "Suspension",
                    "Passing",
                    "Tone",
                    "Neighbor",
                    "Tone",
                    "Pedal",
                    "Point",
                    "Ostinato",
                    "Counterpoint",
                    "Polyphony",
                    "Homophony",
                    "Monophony",
                    "Heterophony",
                    "Canon",
                    "Fugue",
                    "Round",
                    "Chorale",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            MusicType.TEMPO: {
                "names": [
                    "Largo",
                    "Adagio",
                    "Andante",
                    "Moderato",
                    "Allegro",
                    "Presto",
                    "Vivace",
                    "Prestissimo",
                    "Lento",
                    "Grave",
                    "Larghetto",
                    "Andantino",
                    "Allegretto",
                    "Vivacissimo",
                    "Ritardando",
                    "Accelerando",
                    "Rubato",
                    "Tempo",
                    "Primo",
                    "A",
                    "Tempo",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
        }

    def _load_technology_data(self) -> None:
        """Load technology naming data."""
        self.technology_data = {
            TechnologyType.COMPONENT: {
                "names": [
                    "CPU",
                    "GPU",
                    "RAM",
                    "ROM",
                    "SSD",
                    "HDD",
                    "Motherboard",
                    "Processor",
                    "Memory",
                    "Storage",
                    "Network",
                    "Interface",
                    "Protocol",
                    "Algorithm",
                    "Framework",
                    "Library",
                    "Module",
                    "Package",
                    "Service",
                    "API",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            TechnologyType.PROTOCOL: {
                "names": [
                    "HTTP",
                    "HTTPS",
                    "FTP",
                    "SSH",
                    "TCP",
                    "UDP",
                    "IP",
                    "DNS",
                    "SMTP",
                    "POP3",
                    "IMAP",
                    "LDAP",
                    "SNMP",
                    "NTP",
                    "DHCP",
                    "ARP",
                    "ICMP",
                    "BGP",
                    "OSPF",
                    "RIP",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            TechnologyType.ARCHITECTURE: {
                "names": [
                    "Microservices",
                    "Monolithic",
                    "Serverless",
                    "Event-Driven",
                    "Layered",
                    "Hexagonal",
                    "Clean",
                    "Onion",
                    "CQRS",
                    "Event",
                    "Sourcing",
                    "Domain-Driven",
                    "Service-Oriented",
                    "RESTful",
                    "GraphQL",
                    "gRPC",
                    "Message",
                    "Queue",
                    "Pub-Sub",
                    "Streaming",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            TechnologyType.ALGORITHM: {
                "names": [
                    "Sorting",
                    "Searching",
                    "Graph",
                    "Tree",
                    "Hash",
                    "Dynamic",
                    "Programming",
                    "Greedy",
                    "Backtracking",
                    "Divide",
                    "Conquer",
                    "Recursive",
                    "Iterative",
                    "Parallel",
                    "Distributed",
                    "Machine",
                    "Learning",
                    "Neural",
                    "Network",
                    "Genetic",
                    "Evolutionary",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            TechnologyType.FRAMEWORK: {
                "names": [
                    "React",
                    "Vue",
                    "Angular",
                    "Svelte",
                    "Express",
                    "FastAPI",
                    "Django",
                    "Flask",
                    "Spring",
                    "Laravel",
                    "Rails",
                    "ASP.NET",
                    "Next.js",
                    "Nuxt",
                    "SvelteKit",
                    "Remix",
                    "Gatsby",
                    "Astro",
                    "Solid",
                    "Lit",
                    "Stencil",
                    "Alpine",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            TechnologyType.PLATFORM: {
                "names": [
                    "AWS",
                    "Azure",
                    "GCP",
                    "Heroku",
                    "Vercel",
                    "Netlify",
                    "Railway",
                    "Render",
                    "DigitalOcean",
                    "Linode",
                    "Vultr",
                    "Cloudflare",
                    "Firebase",
                    "Supabase",
                    "PlanetScale",
                    "MongoDB",
                    "Atlas",
                    "Redis",
                    "Labs",
                    "Elastic",
                    "Search",
                    "Kibana",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            TechnologyType.SYSTEM: {
                "names": [
                    "Operating",
                    "File",
                    "Database",
                    "Management",
                    "Content",
                    "Customer",
                    "Relationship",
                    "Enterprise",
                    "Resource",
                    "Planning",
                    "Supply",
                    "Chain",
                    "Management",
                    "Human",
                    "Resources",
                    "Information",
                    "Knowledge",
                    "Management",
                    "Business",
                    "Intelligence",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            TechnologyType.NETWORK: {
                "names": [
                    "Local",
                    "Area",
                    "Wide",
                    "Metropolitan",
                    "Personal",
                    "Virtual",
                    "Private",
                    "Software-Defined",
                    "Content",
                    "Delivery",
                    "Load",
                    "Balancer",
                    "Firewall",
                    "Router",
                    "Switch",
                    "Gateway",
                    "Proxy",
                    "VPN",
                    "CDN",
                    "Edge",
                    "Computing",
                    "Fog",
                    "Computing",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
        }

    def _load_literary_data(self) -> None:
        """Load literary naming data."""
        self.literary_data = {
            LiteraryType.CHARACTER: {
                "names": [
                    "Hamlet",
                    "Macbeth",
                    "Romeo",
                    "Juliet",
                    "Othello",
                    "Lear",
                    "Prospero",
                    "Ariel",
                    "Caliban",
                    "Miranda",
                    "Ferdinand",
                    "Antonio",
                    "Sebastian",
                    "Gonzalo",
                    "Trinculo",
                    "Stephano",
                    "Alonso",
                    "Adrian",
                    "Francisco",
                    "Boatswain",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            LiteraryType.AUTHOR: {
                "names": [
                    "Shakespeare",
                    "Dickens",
                    "Austen",
                    "Tolkien",
                    "Orwell",
                    "Hemingway",
                    "Fitzgerald",
                    "Joyce",
                    "Woolf",
                    "Faulkner",
                    "Steinbeck",
                    "Twain",
                    "Poe",
                    "Melville",
                    "Hawthorne",
                    "Emerson",
                    "Thoreau",
                    "Whitman",
                    "Dickinson",
                    "Frost",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            LiteraryType.WORK: {
                "names": [
                    "Hamlet",
                    "Macbeth",
                    "Romeo",
                    "Juliet",
                    "Othello",
                    "King",
                    "Lear",
                    "Tempest",
                    "Midsummer",
                    "Night's",
                    "Dream",
                    "Much",
                    "Ado",
                    "About",
                    "Nothing",
                    "Twelfth",
                    "Night",
                    "As",
                    "You",
                    "Like",
                    "It",
                    "Merchant",
                    "Venice",
                    "Taming",
                    "Shrew",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            LiteraryType.GENRE: {
                "names": [
                    "Fiction",
                    "Non-fiction",
                    "Poetry",
                    "Drama",
                    "Comedy",
                    "Tragedy",
                    "Romance",
                    "Mystery",
                    "Thriller",
                    "Horror",
                    "Fantasy",
                    "Science",
                    "Fiction",
                    "Historical",
                    "Biography",
                    "Autobiography",
                    "Memoir",
                    "Essay",
                    "Short",
                    "Story",
                    "Novel",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            LiteraryType.THEME: {
                "names": [
                    "Love",
                    "Death",
                    "Life",
                    "Freedom",
                    "Justice",
                    "Revenge",
                    "Redemption",
                    "Sacrifice",
                    "Honor",
                    "Duty",
                    "Loyalty",
                    "Betrayal",
                    "Friendship",
                    "Family",
                    "Power",
                    "Corruption",
                    "Good",
                    "Evil",
                    "Truth",
                    "Beauty",
                    "Art",
                    "Nature",
                    "Time",
                    "Memory",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            LiteraryType.SYMBOL: {
                "names": [
                    "Rose",
                    "Cross",
                    "Crown",
                    "Sword",
                    "Shield",
                    "Dove",
                    "Raven",
                    "Owl",
                    "Snake",
                    "Tree",
                    "River",
                    "Mountain",
                    "Ocean",
                    "Sun",
                    "Moon",
                    "Star",
                    "Fire",
                    "Water",
                    "Earth",
                    "Air",
                    "Light",
                    "Darkness",
                    "Mirror",
                    "Key",
                    "Door",
                    "Window",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            LiteraryType.METAPHOR: {
                "names": [
                    "Journey",
                    "Battle",
                    "Dance",
                    "Game",
                    "Theater",
                    "Garden",
                    "Maze",
                    "Labyrinth",
                    "Bridge",
                    "Path",
                    "Road",
                    "Ship",
                    "Voyage",
                    "Storm",
                    "Tempest",
                    "Dawn",
                    "Dusk",
                    "Spring",
                    "Winter",
                    "Harvest",
                    "Seed",
                    "Flower",
                    "Fruit",
                    "Root",
                    "Branch",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            LiteraryType.NARRATIVE: {
                "names": [
                    "First",
                    "Person",
                    "Third",
                    "Person",
                    "Omniscient",
                    "Limited",
                    "Unreliable",
                    "Stream",
                    "Consciousness",
                    "Epistolary",
                    "Frame",
                    "Story",
                    "Flashback",
                    "Foreshadowing",
                    "Irony",
                    "Satire",
                    "Parody",
                    "Allegory",
                    "Fable",
                    "Legend",
                    "Myth",
                    "Folktale",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            LiteraryType.PROSE: {
                "names": [
                    "Paragraph",
                    "Sentence",
                    "Clause",
                    "Phrase",
                    "Word",
                    "Syllable",
                    "Letter",
                    "Punctuation",
                    "Grammar",
                    "Syntax",
                    "Style",
                    "Tone",
                    "Voice",
                    "Mood",
                    "Atmosphere",
                    "Imagery",
                    "Description",
                    "Dialogue",
                    "Monologue",
                    "Soliloquy",
                    "Aside",
                    "Narration",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            LiteraryType.POETRY: {
                "names": [
                    "Sonnet",
                    "Haiku",
                    "Limerick",
                    "Ballad",
                    "Ode",
                    "Elegy",
                    "Epic",
                    "Lyric",
                    "Free",
                    "Verse",
                    "Blank",
                    "Verse",
                    "Rhyme",
                    "Scheme",
                    "Meter",
                    "Foot",
                    "Iamb",
                    "Trochee",
                    "Anapest",
                    "Dactyl",
                    "Spondee",
                    "Pyrrhic",
                    "Caesura",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
        }

    def _load_historical_data(self) -> None:
        """Load historical naming data."""
        self.historical_data = {
            HistoricalType.ERA: {
                "names": [
                    "Renaissance",
                    "Enlightenment",
                    "Industrial",
                    "Victorian",
                    "Edwardian",
                    "Georgian",
                    "Tudor",
                    "Stuart",
                    "Hanoverian",
                    "Windsor",
                    "Medieval",
                    "Ancient",
                    "Classical",
                    "Modern",
                    "Contemporary",
                    "Postmodern",
                    "Digital",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            HistoricalType.CIVILIZATION: {
                "names": [
                    "Roman",
                    "Greek",
                    "Egyptian",
                    "Persian",
                    "Chinese",
                    "Indian",
                    "Mayan",
                    "Aztec",
                    "Incan",
                    "Babylonian",
                    "Assyrian",
                    "Sumerian",
                    "Phoenician",
                    "Carthaginian",
                    "Byzantine",
                    "Ottoman",
                    "Mongol",
                    "Viking",
                    "Celtic",
                    "Norse",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            HistoricalType.LEADER: {
                "names": [
                    "Caesar",
                    "Alexander",
                    "Napoleon",
                    "Churchill",
                    "Roosevelt",
                    "Lincoln",
                    "Washington",
                    "Gandhi",
                    "Mandela",
                    "Luther",
                    "King",
                    "Joan",
                    "Arc",
                    "Cleopatra",
                    "Boudicca",
                    "Genghis",
                    "Khan",
                    "Attila",
                    "Hun",
                    "Charlemagne",
                    "Saladin",
                    "Cyrus",
                    "Great",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            HistoricalType.EVENT: {
                "names": [
                    "Revolution",
                    "War",
                    "Peace",
                    "Treaty",
                    "Alliance",
                    "Conquest",
                    "Discovery",
                    "Exploration",
                    "Colonization",
                    "Independence",
                    "Reformation",
                    "Renaissance",
                    "Enlightenment",
                    "Industrial",
                    "Revolution",
                    "World",
                    "War",
                    "Cold",
                    "War",
                    "Fall",
                    "Berlin",
                    "Wall",
                    "Moon",
                    "Landing",
                    "Internet",
                    "Revolution",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            HistoricalType.INVENTION: {
                "names": [
                    "Wheel",
                    "Fire",
                    "Writing",
                    "Printing",
                    "Press",
                    "Steam",
                    "Engine",
                    "Electricity",
                    "Telephone",
                    "Radio",
                    "Television",
                    "Computer",
                    "Internet",
                    "Airplane",
                    "Automobile",
                    "Penicillin",
                    "Vaccine",
                    "Telescope",
                    "Microscope",
                    "Compass",
                    "Gunpowder",
                    "Paper",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            HistoricalType.DISCOVERY: {
                "names": [
                    "America",
                    "Australia",
                    "Antarctica",
                    "DNA",
                    "Gravity",
                    "Evolution",
                    "Relativity",
                    "Quantum",
                    "Mechanics",
                    "Penicillin",
                    "Vaccination",
                    "Blood",
                    "Circulation",
                    "Germ",
                    "Theory",
                    "Atomic",
                    "Structure",
                    "Periodic",
                    "Table",
                    "Radioactivity",
                    "X-rays",
                    "Electromagnetic",
                    "Waves",
                    "Photoelectric",
                    "Effect",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            HistoricalType.WAR: {
                "names": [
                    "Trojan",
                    "War",
                    "Peloponnesian",
                    "War",
                    "Punic",
                    "Wars",
                    "Hundred",
                    "Years",
                    "War",
                    "Thirty",
                    "Years",
                    "War",
                    "Napoleonic",
                    "Wars",
                    "American",
                    "Civil",
                    "War",
                    "World",
                    "War",
                    "I",
                    "World",
                    "War",
                    "II",
                    "Korean",
                    "War",
                    "Vietnam",
                    "War",
                    "Cold",
                    "War",
                    "Gulf",
                    "War",
                    "War",
                    "Terror",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            HistoricalType.PEACE: {
                "names": [
                    "Pax",
                    "Romana",
                    "Pax",
                    "Britannica",
                    "Pax",
                    "Americana",
                    "Peace",
                    "Westphalia",
                    "Peace",
                    "Utrecht",
                    "Peace",
                    "Paris",
                    "Peace",
                    "Versailles",
                    "Peace",
                    "Potsdam",
                    "Peace",
                    "Yalta",
                    "Peace",
                    "Geneva",
                    "Peace",
                    "Camp",
                    "David",
                    "Peace",
                    "Oslo",
                    "Peace",
                    "Accords",
                    "Peace",
                    "Treaty",
                    "Peace",
                    "Agreement",
                    "Peace",
                    "Process",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
            HistoricalType.CULTURE: {
                "names": [
                    "Renaissance",
                    "Baroque",
                    "Classical",
                    "Romantic",
                    "Impressionist",
                    "Modern",
                    "Postmodern",
                    "Contemporary",
                    "Gothic",
                    "Rococo",
                    "Neoclassical",
                    "Art",
                    "Nouveau",
                    "Art",
                    "Deco",
                    "Bauhaus",
                    "Surrealism",
                    "Cubism",
                    "Expressionism",
                    "Abstract",
                    "Expressionism",
                    "Pop",
                    "Art",
                    "Minimalism",
                    "Conceptual",
                    "Art",
                ],
                "suffixes": [
                    "Prime",
                    "Alpha",
                    "Beta",
                    "Gamma",
                    "Delta",
                    "Core",
                    "Nexus",
                    "Node",
                ],
            },
        }

    def generate_name(self, config: NamingConfig) -> AgentName:
        """Generate a name based on the specified scheme and configuration."""
        scheme_generators = {
            NamingScheme.ELEMENTAL: self._generate_elemental_name,
            NamingScheme.CELESTIAL: self._generate_celestial_name,
            NamingScheme.MYTHOLOGICAL: self._generate_mythological_name,
            NamingScheme.SCIENTIFIC: self._generate_scientific_name,
            NamingScheme.GEOGRAPHIC: self._generate_geographic_name,
            NamingScheme.COLOR: self._generate_color_name,
            NamingScheme.MUSIC: self._generate_music_name,
            NamingScheme.TECHNOLOGY: self._generate_technology_name,
            NamingScheme.LITERARY: self._generate_literary_name,
            NamingScheme.HISTORICAL: self._generate_historical_name,
        }

        if config.scheme in scheme_generators:
            return scheme_generators[config.scheme](config)

        raise ValueError(f"Unsupported naming scheme: {config.scheme}")

    def _generate_elemental_name(self, config: NamingConfig) -> AgentName:
        """Generate an elemental name."""
        if config.scheme_type:
            try:
                elemental_type = ElementalType(config.scheme_type)
            except ValueError:
                elemental_type = random.choice(list(ElementalType))
        else:
            elemental_type = random.choice(list(ElementalType))

        data = self.elemental_data[elemental_type]
        base_name = self.selector.select_with_fallback(data["names"], "Element")
        suffix = self.selector.select_with_fallback(data["suffixes"], "Prime")
        number = random.randint(1, 99)  # nosec B311

        name = self.name_builder.build_hyphenated_name([base_name, suffix, str(number)])
        components = [base_name, suffix, str(number)]

        return AgentName(
            name=name,
            style=config.style or NamingStyle.FOUNDATION,
            components=components,
            scheme=NamingScheme.ELEMENTAL,
            scheme_type=elemental_type.value,
        )

    def _generate_celestial_name(self, config: NamingConfig) -> AgentName:
        """Generate a celestial name."""
        if config.scheme_type:
            try:
                celestial_type = CelestialType(config.scheme_type)
            except ValueError:
                celestial_type = random.choice(list(CelestialType))
        else:
            celestial_type = random.choice(list(CelestialType))

        data = self.celestial_data[celestial_type]
        base_name = self.selector.select_with_fallback(data["names"], "Star")
        suffix = self.selector.select_with_fallback(data["suffixes"], "Prime")
        number = random.randint(1, 99)  # nosec B311

        name = self.name_builder.build_hyphenated_name([base_name, suffix, str(number)])
        components = [base_name, suffix, str(number)]

        return AgentName(
            name=name,
            style=config.style or NamingStyle.FOUNDATION,
            components=components,
            scheme=NamingScheme.CELESTIAL,
            scheme_type=celestial_type.value,
        )

    def _generate_mythological_name(self, config: NamingConfig) -> AgentName:
        """Generate a mythological name."""
        if config.scheme_type:
            try:
                mythological_type = MythologicalType(config.scheme_type)
            except ValueError:
                mythological_type = random.choice(list(MythologicalType))
        else:
            mythological_type = random.choice(list(MythologicalType))

        data = self.mythological_data[mythological_type]
        base_name = self.selector.select_with_fallback(data["names"], "God")
        suffix = self.selector.select_with_fallback(data["suffixes"], "Divine")
        number = random.randint(1, 99)  # nosec B311

        name = self.name_builder.build_hyphenated_name([base_name, suffix, str(number)])
        components = [base_name, suffix, str(number)]

        return AgentName(
            name=name,
            style=config.style or NamingStyle.FOUNDATION,
            components=components,
            scheme=NamingScheme.MYTHOLOGICAL,
            scheme_type=mythological_type.value,
        )

    def _generate_scientific_name(self, config: NamingConfig) -> AgentName:
        """Generate a scientific name."""
        if config.scheme_type:
            try:
                scientific_type = ScientificType(config.scheme_type)
            except ValueError:
                scientific_type = random.choice(list(ScientificType))
        else:
            scientific_type = random.choice(list(ScientificType))

        data = self.scientific_data[scientific_type]
        base_name = self.selector.select_with_fallback(data["names"], "Element")
        suffix = self.selector.select_with_fallback(data["suffixes"], "Prime")
        number = random.randint(1, 99)  # nosec B311

        name = self.name_builder.build_hyphenated_name([base_name, suffix, str(number)])
        components = [base_name, suffix, str(number)]

        return AgentName(
            name=name,
            style=config.style or NamingStyle.FOUNDATION,
            components=components,
            scheme=NamingScheme.SCIENTIFIC,
            scheme_type=scientific_type.value,
        )

    def _generate_geographic_name(self, config: NamingConfig) -> AgentName:
        """Generate a geographic name."""
        if config.scheme_type:
            try:
                geographic_type = GeographicType(config.scheme_type)
            except ValueError:
                geographic_type = random.choice(list(GeographicType))
        else:
            geographic_type = random.choice(list(GeographicType))

        data = self.geographic_data[geographic_type]
        base_name = self.selector.select_with_fallback(data["names"], "Mountain")
        suffix = self.selector.select_with_fallback(data["suffixes"], "Prime")
        number = random.randint(1, 99)  # nosec B311

        name = self.name_builder.build_hyphenated_name([base_name, suffix, str(number)])
        components = [base_name, suffix, str(number)]

        return AgentName(
            name=name,
            style=config.style or NamingStyle.FOUNDATION,
            components=components,
            scheme=NamingScheme.GEOGRAPHIC,
            scheme_type=geographic_type.value,
        )

    def _generate_color_name(self, config: NamingConfig) -> AgentName:
        """Generate a color name."""
        if config.scheme_type:
            try:
                color_type = ColorType(config.scheme_type)
            except ValueError:
                color_type = random.choice(list(ColorType))
        else:
            color_type = random.choice(list(ColorType))

        data = self.color_data[color_type]
        base_name = self.selector.select_with_fallback(data["names"], "Color")
        suffix = self.selector.select_with_fallback(data["suffixes"], "Prime")
        number = random.randint(1, 99)  # nosec B311

        name = self.name_builder.build_hyphenated_name([base_name, suffix, str(number)])
        components = [base_name, suffix, str(number)]

        return AgentName(
            name=name,
            style=config.style or NamingStyle.FOUNDATION,
            components=components,
            scheme=NamingScheme.COLOR,
            scheme_type=color_type.value,
        )

    def _generate_music_name(self, config: NamingConfig) -> AgentName:
        """Generate a music name."""
        if config.scheme_type:
            try:
                music_type = MusicType(config.scheme_type)
            except ValueError:
                music_type = random.choice(list(MusicType))
        else:
            music_type = random.choice(list(MusicType))

        data = self.music_data[music_type]
        base_name = self.selector.select_with_fallback(data["names"], "Note")
        suffix = self.selector.select_with_fallback(data["suffixes"], "Prime")
        number = random.randint(1, 99)  # nosec B311

        name = self.name_builder.build_hyphenated_name([base_name, suffix, str(number)])
        components = [base_name, suffix, str(number)]

        return AgentName(
            name=name,
            style=config.style or NamingStyle.FOUNDATION,
            components=components,
            scheme=NamingScheme.MUSIC,
            scheme_type=music_type.value,
        )

    def _generate_technology_name(self, config: NamingConfig) -> AgentName:
        """Generate a technology name."""
        if config.scheme_type:
            try:
                technology_type = TechnologyType(config.scheme_type)
            except ValueError:
                technology_type = random.choice(list(TechnologyType))
        else:
            technology_type = random.choice(list(TechnologyType))

        data = self.technology_data[technology_type]
        base_name = self.selector.select_with_fallback(data["names"], "Component")
        suffix = self.selector.select_with_fallback(data["suffixes"], "Prime")
        number = random.randint(1, 99)  # nosec B311

        name = self.name_builder.build_hyphenated_name([base_name, suffix, str(number)])
        components = [base_name, suffix, str(number)]

        return AgentName(
            name=name,
            style=config.style or NamingStyle.FOUNDATION,
            components=components,
            scheme=NamingScheme.TECHNOLOGY,
            scheme_type=technology_type.value,
        )

    def _generate_literary_name(self, config: NamingConfig) -> AgentName:
        """Generate a literary name."""
        if config.scheme_type:
            try:
                literary_type = LiteraryType(config.scheme_type)
            except ValueError:
                literary_type = random.choice(list(LiteraryType))
        else:
            literary_type = random.choice(list(LiteraryType))

        data = self.literary_data[literary_type]
        base_name = self.selector.select_with_fallback(data["names"], "Character")
        suffix = self.selector.select_with_fallback(data["suffixes"], "Prime")
        number = random.randint(1, 99)  # nosec B311

        name = self.name_builder.build_hyphenated_name([base_name, suffix, str(number)])
        components = [base_name, suffix, str(number)]

        return AgentName(
            name=name,
            style=config.style or NamingStyle.FOUNDATION,
            components=components,
            scheme=NamingScheme.LITERARY,
            scheme_type=literary_type.value,
        )

    def _generate_historical_name(self, config: NamingConfig) -> AgentName:
        """Generate a historical name."""
        if config.scheme_type:
            try:
                historical_type = HistoricalType(config.scheme_type)
            except ValueError:
                historical_type = random.choice(list(HistoricalType))
        else:
            historical_type = random.choice(list(HistoricalType))

        data = self.historical_data[historical_type]
        base_name = self.selector.select_with_fallback(data["names"], "Era")
        suffix = self.selector.select_with_fallback(data["suffixes"], "Prime")
        number = random.randint(1, 99)  # nosec B311

        name = self.name_builder.build_hyphenated_name([base_name, suffix, str(number)])
        components = [base_name, suffix, str(number)]

        return AgentName(
            name=name,
            style=config.style or NamingStyle.FOUNDATION,
            components=components,
            scheme=NamingScheme.HISTORICAL,
            scheme_type=historical_type.value,
        )
